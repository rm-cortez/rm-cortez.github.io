Adding Environment Variables to path

Windows
----------
Start Menu
Search for enviornment
Click on Environment Variables
 - Either add for system or user
 - Double click on Path
 - Add new variable
 - Ok
 - Reset CMD / CLI

Linux
-----
- create .profile under user profile
export PATH=~/.npm-global/bin:$PATH
- source ~/.profile



Linux

/*Adding npm packages to path*/
.bash_profile
------------------------------
export PATH=~/.npm-global/bin:$PATH
export PATH=~/.npm-global/lib/node_modules/sass/sass.js:$PATH

Use .bash_profile (Home Directory)
on Terminal
-----------
source ~/.profile


Show hidden files
Shift, Command (⌘), and period symbol (.)
ls -a


defaults write com.apple.Finder AppleShowAllFiles true
killall Finder

/*
KEY=value
There is no space around the equals symbol
should have UPPER CASE names
*/
------------------------------------------
Developer Tools

/*Adding jquery to chrome console*/
------------------------------------
var jqry = document.createElement('script');
jqry.src = https://code.jquery.com/jquery-3.3.1.min.js;
document.getElementsByTagName('head')[0].appendChild(jqry);
jQuery.noConflict();


Option + Command + I

Freeze screen while inspecting
———————————————
fn+f8

---------------------------------------------

Atom shortcuts
———————
Move Line Up	ctrl cmd up
Go To Line	ctrlg

Comment out lines - CMD  /

Type multiple lines - Just hold down CMD and  click in every place

Duplicate Line - On Mac: Cmd + Shift + D

//config
editor:
    softWrap:true

Cmd + shift + f -> search file in project

Pick syntax
Ctrl + shift + l
------------------------------------------------

WP

function rcsproductions_Bootstrap_scripts() {
  //Custom css-js
  wp_enqueue_style( 'rcsproductions-custom-style', get_template_directory_uri()  . '/css/custom-css.css' );

  //Adds Scripts , last param: true -> footer , false (default) -> header
  wp_enqueue_script( 'rcsproductions-analytics', get_template_directory_uri()  . '/js/analytics.js',array(),false,true);

}
add_action( 'wp_enqueue_scripts', 'rcsproductions_Bootstrap_scripts' );


/**
* Adds custom posts
*/
function create_posttype_schools() {

    register_post_type( 'schools',

        array(
            'labels' => array(
                'name' => __( 'Schools' ),
                'singular_name' => __( 'School' )
            ),
						'supports' => array(
							'title',
							'editor',
							'excerpt',
							'author',
							'thumbnail',
							'revisions',
							'custom-fields',
							'page-attributes'
						),
            'public' => true,
            'has_archive' => true,
            'rewrite' => array('slug' => 'schools'),
            'show_in_rest' => true,
						'show_in_nav_menus' => false

        )
    );
}
// Hooking up our function to theme setup
add_action( 'init', 'create_posttype_schools' );


get_template_directory_uri()

<?php echo get_bloginfo( 'url'); ?>

<?php if ( is_page_template( 'templates/resume.php' ) )  :?>
	<p>template</p>
<?php endif; ?>



if ( $the_query->have_posts() ) : while ( $the_query->have_posts() ) : $the_query->the_post(); ?>


Disables new wp editor
add_filter( 'use_block_editor_for_post', '__return_false' );


$custom_posts = new WP_Query( array(
    'order_by' => 'title',
    'order'    => 'asc'
  ));
  if ( $custom_posts->have_posts() ) :

    while ( $custom_posts->have_posts() ) : $custom_posts->the_post();

      get_template_part( 'content', 'contentPart' );

    endwhile;

  else :

    get_template_part( 'content', 'none' );

  endif;
?>

<?php if ( is_page_template( 'templates/resume.php' ) )  :?>
	<p>template</p>
<?php endif; ?>

Returns (bool) True, if front of site.
is_front_page()

Adds edit links

//format
edit_post_link( string $text = null, string $before = '', string $after = '', int|WP_Post $id, string $class = 'post-edit-link' )

//example
edit_post_link( __( 'edit', 'textdomain' ), '<p>', '</p>' );

//adss css classes
edit_post_link( __( 'Edit', 'textdomain' ), '<p>', '</p>', null, 'btn btn-primary btn-edit-post-link' );



if ( is_front_page() && is_home() )


----------------
Adding Fonts

/eot, eot-ie,woff2,woff,ttf,svg/
@font-face {
  font-family: 'FontAwesome';
  src: url('../fonts/fontawesome-webfont.eot?v=4.7.0');
  src: url('../fonts/fontawesome-webfont.eot?#iefix&v=4.7.0') format('embedded-opentype'), url('../fonts/fontawesome-webfont.woff2?v=4.7.0') format('woff2'), url('../fonts/fontawesome-webfont.woff?v=4.7.0') format('woff'), url('../fonts/fontawesome-webfont.ttf?v=4.7.0') format('truetype'), url('../fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular') format('svg');
  font-weight: normal;
  font-style: normal;
}



php
--------
control statements
——————————
<?php if (): ?>
 <html>

<?php elseif() :?>
  <html>
<?php else :?>
  <html>
<?php endif; ?>


<?php while() :?>
    <html>
<?php endwhile; ?>


foreach - key and value
foreach ( $var as $key => $value )
  echo $key=$value<br />;


CORS

//Run PHP code without using script tags '<?..?>'
php -r 'echo exec(curl -d 'param=asd'   http://api/);'

/*
  Sends the specified data in a POST request  to  the  HTTP
  server,  in  the  same  way  that a browser does when a user has
  filled in an HTML form and presses the submit button. This  will
  cause curl to pass the data to the server using the content-type
  application/x-www-form-urlencoded.
*/

curl -d 'param=asd'   http://api/

//adding header and passing data as json
curl -H "Content-Type: application/json" -X POST -d '{"param":"txt"}' http://api/

<?php
  //initializes curl
  $ch = curl_init();

  /*Sets option values*/
	curl_setopt($ch, CURLOPT_URL,http://api/);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //returns as string
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS,
	            array('param' => $text));

  /*Stores Curl Return Value*/
  $obj=json_decode(curl_exec($ch),true);

  /*Closes connection*/
  curl_close ($ch);

?>

On external domain
------------------

/*Replace * with actual domain url*/

header(Access-Control-Allow-Origin: *);
header(content-type: application/json);

$json = json_encode($db_elements);

$myJSON = json_encode(  ( (object)$json ) );

echo $myJSON;


Constants
define( 'VARNAME', 'var_value' );


------------------------------------------------------
HTML


<meta charset=utf-8 />
<link rel=icon href=favicon.ico />
<meta name=viewport content=width=device-width, initial-scale=1 />
<meta name=author content=Ronald Cortez>
<meta name=description content=Ronald Cortez Personal Site/>

//for ie < 9

<!--[if lt IE 9]>
<script src=http://html5shiv.googlecode.com/svn/trunk/html5.js></script>
<![endif]-->



---------------
JS

Dom load - jQuery,JS

jQuery(document).ready(function(){
});

document.addEventListener('DOMContentLoaded',()=>{
})



document.querySelector(.example)
.innerHTML = <html>
.onclick = ()=> {};
.style.border = 10px solid red;
.classList.add(mystyle);
.classList.remove(mystyle);
.classList.toggle(mystyle);
          .contains(class)
          .length;

document.querySelectorAll


fetch

// (*) default
const options={
method: 'POST', // *GET, POST, PUT, DELETE, etc.
    mode: 'cors', // no-cors, *cors, same-origin
    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    credentials: 'same-origin', // include, *same-origin, omit
    headers: {
      'Content-Type': 'application/json'
      // 'Content-Type': 'application/x-www-form-urlencoded',
    },
    redirect: 'follow', // manual, *follow, error
    body: JSON.stringify(data)
}

//if you are not changing data constantly, remove cache option
// if passing json object, convert it to array with JSON.parse(data)
fetch(http://api/, { cache: 'no-cache'})
.then(res => res.json())
.then(data => {
                console.log(data)
              })




-----------------------
AWS

//to access as root
sudo su

/*system info*/
cat /etc/system-release

/*updates ec2 system*/
sudo yum update -y

/*install apache and db*/
sudo yum install -y httpd mariadb-server

/*install php*/
sudo yum install -y php

/*Use the chkconfig command to configure the Apache web server to start at each system boot.*/
sudo chkconfig httpd on

/*Start apache*/
sudo systemctl enable httpd
sudo systemctl start httpd
sudo systemctl status httpd

/*restart apache*/
sudo systemctl restart httpd

/*Set permissions*/

/*adds apache and username to groups*/
sudo usermod -a -G apache ec2-user

/*Logout and check membership*/
Exit
Re-connect
groups


/*grants user and apache ownership*/
sudo chown -R ec2-user:apache /var/www

/*To add group write permissions and to set the group ID on future subdirectories*/
sudo chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;

/*To add group write permissions, recursively change the file permissions of /var/www and its subdirectories:*/
find /var/www -type f -exec sudo chmod 0664 {} \;

/*creates php file*/
echo <?php phpinfo(); ?> > /var/www/html/phpinfo.php


//sudo yum list installed httpd mariadb-server php

/* on AWS Interface open up http/https:443/ SSH:22 (Inbound rules) */
* Type: HTTP /HTTPS / SSH 
* Protocol: TCP 
* Port Range: 80 
* Source: Custom 
Cidr 0.0.0.0/0 // any ipv4 address

Win RDP - port:3389 type:tcp inbound rule


DB
—
/*Starts db engine*/
sudo systemctl start mariadb

/*runs prompts that enables to change pwd and run configurations*/
sudo mysql_secure_installation

/*Starts DB engine on reboot*/
sudo systemctl enable mariadb

/*stops DB*/
sudo systemctl stop mariadb

/*restarts db*/
sudo systemctl restart mariadb

DB login
———-
mysql -u root -p




/*list installed packages by name*/
yum list installed | grep ftp


Filezilla
SSH (SFTP) Filezilla.
* Edit-> Settings -> Connection -> SFTP
* Click on Add Keyfile button.
* Browse to the location of your key file (.pem file provided by Amazon)

/*setup connection*/
* Go to Site manager -> New site
* 		Fill in the following information
    * 		Host: DNS name of EC2 instance.
    * 		File transfer protocol: SFTP-SSH.
    * 		Logon Type: Normal.
    * 		User: Your default username.
    * 		Password: Leave it as empty.
    *     Advanced
          - Directory comparison
          - Local directory: /Applications/XAMPP/xamppfiles/htdocs
          - Remote directory: /var/www/html
    * 		Click Connect button.


    Map EC2 instance to a domain
    ———————————————
     Register domain
     Get ipv4 / elastic ip

    Go to Route 53
    	- Hosted zones
    	- Select domain that needs to be mapped
    	- Click on create Record set
    		-  leave name blank
    		- enter value for ip
    		- choose simple for routing
    		- save

    	- Click on create Record set
    		-fill out name with - www
    		- select alias
    		- alias target - type in domain name
    		-routing policy - simple
    		-save

    Create a subdomain with same steps
    - sub-domain.mainDomain
    - www.subdomain.mainDomain

HTACCESS
when url links do not work, check the following
———————————————————————

/*mod_rewrite should be enabled*/

Remove # if disabled
/etc/httpd/conf.modules.d/00-base.conf

/*Check for htaccess */

if not found, create one

  # Disables directory listing
  Options -Indexes

  RewriteEngine On
  RewriteBase /
  RewriteRule ^index\.php$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteRule . /index.php [L]


/*Grant Override all to www/html */


  //if needed
  sudo vi /var/httpd/conf/httpd.conf

   <Directory /var/www/html>
      AllowOverride All
   </Directory>

/*Finally restart apache*/
sudo systemctl restart httpd


# BEGIN WordPress
# Disables directory listing
Options -Indexes

RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]

# END WordPress


 # When deploying to subfolders
 RewriteEngine On
 RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
 RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
 RewriteRule ^ - [L]

 # Fallback all other routes to index.html
 RewriteRule ^ /react-project/index.html [L]



react
-------

let routes = []
<div>
  <Router >
    <ul>
      <li>
      <Link to=/>Home</Link>
      </li>
    </ul>

    <Switch>
      <Route path = / component = {App}>

      {routes.map((route, i) => (
               <Component key={i} {...route} />
       ))}
     <Switch>
    </Route>
  </Router>
</div>

States

constructor(props){
  super(props)
  this.state.varname = ''
}

componentDidMount(){
  this.setState({varname: })
}


render(){
  <div>
    <CustomNavItems param={this.state.rts}/>
  </div>
}

ES6

//destructuring
let {code,dsc,lng,module,permLink,title} = rts[0]


//export
const URL = {}
URL.passUrl =  () =>  console.log('')

export {URL}


React deployment on subfolder

import {URL} from './deployConfig'

Set variable for refs (dev / prod)
Create export variable for this
//dev / prod -> Set variable in deployConfig
let baseURL = URL.passUrl()


Use variable for base name
<Router basename={baseURL}>

//append baseURL
href={baseURL + (route.permLink) }


For Routes only add /
<Route exact path={'/' + (route.permLink)} component={Home} />



MYSQL
---------

CREATE TABLE code_table (
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Lng VARCHAR(30) NOT NULL,
module VARCHAR(30) NOT NULL,
Title varchar(30) NOT NULL,
dsc VARCHAR(1000) NOT NULL,
code text not null
)

LOAD DATA LOCAL INFILE code.csv INTO TABLE code_table
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
ENCLOSED BY ''
IGNORE 1 LINES
(Lng,module,title,dsc,code)


SELECT `module`, GROUP_CONCAT(`title` ORDER BY `title` separator ',')
FROM code_table
GROUP BY `module`


INSERT INTO table2
SELECT * FROM table1
WHERE condition;

/*Clone table*/
CREATE TABLE newtable LIKE oldtable;
INSERT INTO newtable SELECT * FROM oldtable;

/*Clone table structure and data*/
CREATE TABLE tbl_new AS SELECT * FROM tbl_old;


Sass

* sass --watch sass/styles.scss css/custom-css.css
* sass sass/styles.scss css/custom-css.css



----------------------
vue

vue ui

----
import PortalVue from 'portal-vue'

Vue.use(PortalVue)

---popper on index.html
<script src=<%= BASE_URL %>js/core/dist/umd/popper.js></script>


import { BootstrapVue, BootstrapVueIcons } from 'bootstrap-vue'

Vue.use(BootstrapVue)
Vue.use(BootstrapVueIcons)


structure
<template>
  <div id=app>
    <img alt=Vue logo src=./assets/logo.png>
    <HelloWorld msg=Welcome to Your Vue.js App/>
  </div>
</template>

<script>
import HelloWorld from './components/HelloWorld.vue'

export default {
  name: 'App',
  components: {
    HelloWorld
  }
}
</script>

<style>
#app {
}
</style>


<router-link :to={ name: 'user', params: { username: 'evan' }, query: { foo: 'bar' }} exact>
/users/evan?foo=bar (named view + exact match)
</router-link>
<router-link to=/foo>Go to Foo</router-link>
<router-link to=/bar>Go to Bar</router-link>

<router-view></router-view>


<template>
  <div class=hello>
    <h1>{{ msg }}</h1>

</template>
<script>
export default {
  name: 'HelloWorld',
  props: {
    msg: String
  }
}
</script>

external file
---------
<template>
  <HelloWorld msg=Welcome to Your Vue.js App/>
</template>

<script>
import HelloWorld from './components/HelloWorld.vue'

export default {
  name: 'App',
  components: {
    HelloWorld
  }

}
</script>


<script>
export default {
  name: 'Footer',
  //vars
  data(){
    return {
      title: (new Date).getFullYear()

    }
  },
  //funcs
  methods: {
    check() { this.checked = !this.checked; }
  }
}
</script>

------------------------

labels: "January,February,June,July,August,September,October,November",
commits:""



CREATE TABLE code_table AS SELECT * FROM `rcs_code.code_table`;

create table code_table(
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
lng VARCHAR(30) NOT NULL,
module VARCHAR(30) NOT NULL,
title VARCHAR(30) NOT NULL,
dsc VARCHAR(1000) NOT NULL,
code text not null,
editedCode text not null,
permLink VARCHAR(30) NOT NULL,
hasCode bit(1) not null
)


CREATE VIEW  react_project_view AS
select
platform,
lng,
module,
title,
dsc,
code,
replace(lower(concat(lng,"/",module,'/',title)),' ','-') as permLink,
1 as hasCode ,
platform_url
from code_table

union all

select
platform,
lng,
module,
module as title,
GROUP_CONCAT(replace(lower(concat(lng,"/",module,'/',title)),' ','-') ,',',title order by title  separator ';' ) ,
'',
lower(module) as permLink,
0,
''
from code_table
group by  platform,lng, module
order by platform,hascode, title


lng/module/title



select
ct.*,
ctp.url
from code_table ct
left join code_table_platform ctp on ctp.platform = ct.platform
order by hascode, title







select platform,lng, module, GROUP_CONCAT(title,' ' ,permLink separator ';')
from code_table
group by  platform,lng, module




platform	lng	module	GROUP_CONCAT(title,' ' ,permLink separator ';')
	Java	AP-1	AP-1ap-1
	Java	Arrays	Arraysarrays
	Java	String	Stringstring
codingbat	Java	AP-1	ScoresIncreasingjava/ap-1/scoresincreasing,SumHeig...
codingbat	Java	Arrays	LoneSumjava/arrays/lonesum,RoundSumjava/arrays/rou...
codingbat	Java	String	SameEndsjava/string/sameends,SumDigitsjava/string/...




linear-gradient(to-left,#434343, #000000);



create table cheatSheet(
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,
lng VARCHAR(30) NOT NULL,
title VARCHAR(30) NOT NULL,
dsc VARCHAR(1000) NOT NULL,
code text not null,
editedCode text  null
)


UPDATE cheatSheet
SET `editedCode` = replace(replace(replace( replace (`code`, '{', '&#123; '), '}','&#125;'),'<','&lt;') ,'>' , '&gt;')
where `code` is not null



SELECT * FROM `cheatSheet`
where concat(`lng`,' ', `title`,' ', COALESCE(`dsc`,'') ,' ',COALESCE(`code`, '') )  like '%php%'



git commit --amend
git commit -a -m


vuejs lifecycle
https://medium.com/@akgarg007/vuejs-created-vs-mounted-life-cycle-hooks-74c522b9ceee#:~:text=mounted%20()%20%3A%20it%20will%20executed%20before%20creating%20the%20component.,creating%20the%20component%20for%20render

beforecreate()
created()
beforeMount()
mounted()
beforeUpdate()
updated()
beforeDestroy()
desstroyed()


beforeUpdate(){
  console.log(this.$route) // holds route parameters {path, component, name}
}


vuejs
interpolation {{  }}

inside html tag properties :class= no need for curly brackets

<li class=nav-item v-for=route in routes :key=route.index>
  <router-link :to=route.path class=nav-link>{{route.name}}</router-link>
</li>

 v-model

 binding classes
 ----------------
 :class={'d-none': boolVar}


css class
.search-item{
  border-radius: 6px;
  box-shadow: 5px 5px 15px 0px rgba(50, 50, 50, 0.75);
}


<div v-bind:class=[isActive ? activeClass : '', errorClass]></div>

to emit data between components vuejs2
--------------------------------------

sender component:
 this.$root.$emit('eventing', val)

receiving component:
mounted(){
  this.$root.$on('eventing', data => console.log('data',data) )
}


src=@/assets/logo.png

vuejs deploy app in subfolder

create / go to vue.config.js and add htaccess

module.exports = {
  publicPath: '/vue-project/'
}


delimeter
CREATE PROCEDURE passQuery(keyword TEXT)
BEGIN
	SELECT
		*
	FROM
		cheatSheet;

END
delimeter;

CREATE PROCEDURE passQuery()
BEGIN
  SELECT * FROM cheatsheet;
END


CREATE TABLE test TYPE=HEAP SELECT * from cheatsheet

   SUBSTRING_INDEX(street, '\n', 1) AS


   select SUBSTRING_INDEX('keyword1 keyword2' ,' ',1)



   label1: LOOP
    SET p1 = p1 + 1;
    IF p1 < 30 THEN

      SELECT //my select
      UNION ALL

      ITERATE label1;
    END IF;
    LEAVE label1;
  END LOOP label1;

DELIMITER $$
  set p1 = 0;
  WHILE p1 < 5 DO
    select * from cheatsheet;
    p1 = p1 + 1;
  END WHILE

  $$
  DELIMITER;

  https://developer.here.com/documentation/maps/3.1.17.0/dev_guide/index.html?cid=www.here.com-products_Map_Data_resources
  https://marcgg.com/blog/2017/03/13/mysql-viewport-gis/


  local variable and while LOOP
  -----------------------------
  DECLARE @i INT = 20
  WHILE (@i > 0)
  BEGIN
     PRINT REPLICATE('* ', @i)
     SET @i = @i - 1
  END

SET @g1 = ST_GeomFromText('POINT(1 1)', 4326);
SET @g2 = ST_GeomFromText('POINT(2 2)', 4326);
SELECT ST_Distance(@g1, @g2);


service mysqld restart

SHOW VARIABLES WHERE Variable_Name LIKE %dir



phpmyadmin
---------
/*Install wget */
sudo yum install -y wget

/*Make sure Apache is running*/
sudo systemctl restart httpd

/*Restart php-fpm */
sudo systemctl restart php-fpm

/*Go to directory*/
cd /var/www/html

/*Import file*/
wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz

/*Create directory and extract*/
mkdir phpMyAdmin && tar -xvzf phpMyAdmin-latest-all-languages.tar.gz -C phpMyAdmin --strip-components 1

/*Browse*/
http://domain-name/phpMyAdmin

/*To disable*/
chmod 000 /var/www/html/phpMyAdmin

/*To Enable*/
chmod 755 /var/www/html/phpMyAdmin


https://developers.google.com/maps/documentation/javascript/get-api-key
https://console.cloud.google.com/projectcreate?previousPage=%2Fprojectselector2%2Fgoogle%2Fmaps-apis%2Foverview%3Fsupportedpurview%3Dproject&supportedpurview=project

https://cloud.google.com/resource-manager/docs/creating-managing-folders
https://marcgg.com/blog/2017/03/13/mysql-viewport-gis/


Linux
get current directory PATH
 pwd -P

css
 background-image: url('../img/pic.jpg') no-repeat cover center;


 sh stats.sh songlist.txt

 https://medium.com/@dearsikandarkhan/files-copying-between-aws-ec2-and-local-d07ed205eefa


 “Whenever I feel the need to exercise, I lie down until it goes away.”
 ― Paul Terry


“It matters not what someone is born, but what they grow to be.”
― J.K. Rowling, Harry Potter and the Goblet of Fire

“Knowing yourself is the beginning of all wisdom.” ― Aristotle


“A day without laughter is a day wasted.” ― Nicolas Chamfort

“Lock up your libraries if you like; but there is no gate, no lock, no bolt that you can set upon the freedom of my mind.”
― Virginia Woolf, A Room of One's Own

“Love is patient, love is kind. It does not envy, it does not boast, it is not proud. It is not rude, it is not self-seeking, it is not easily angered, it keeps no record of wrongs. Love does not delight in evil but rejoices with the truth. It always protects, always trusts, always hopes, always perseveres.”
― Anonymous, Holy Bible: New International Version

“It is not in the stars to hold our destiny but in ourselves.” ― William Shakespeare


/func, duration, effect, delay, alternate effect/
 animation: example 5s linear 2s infinite alternate;


ETL
---
To import from a CSV file to a table
* Create table with fields matching data (length / type)


Google maps


Angular 

declare var google;

Creates map
---------
 HTML
      <script src=https://maps.googleapis.com/maps/api/js?key={key}>
      <style>
        #map {
                height: 100%;
              }
      </style>
      <div id=map></div>
      <script>
      var map = new google.maps.Map(document.getElementById(map), {
                center: {
                  lat: pos.lat,
                  lng: pos.lng
                },
                zoom: 8
              })
      </script>

Adds EventListener on map
-------------------------
map.addListener('click', function(e){
//gets geolocation
console.log(e.latLng.toString())
})

Creates POINT (lat/lng)
--------------------
var pos = {lat: number ,lng: number}

var point = new google.maps.LatLng( pos.lat , pos.lng )

Creates infowindow
-----------------------
var infoWindow = new google.maps.InfoWindow

infoWindow.setPosition(pos);
infoWindow.setContent('Location found.');
infoWindow.open(map);
//infoWindow.open(map,marker);
//infoWindow.close();
map.setCenter(pos);

Creates Marker
-------------
var markers = []

//adss marker
var marker = new google.maps.Marker({
          //map: map,
          position: point,
          //label:'Label'
        });
markers.push(marker)

markers.setMap(map)

// Adds single marker
markers[0].setMap(map)

// Removes single marker
markers[0].setMap(null)



Creates Polyline
-----------------

var poliPoints = [
                  {lat: number,lng: number},
                ]

var poliPath = new google.maps.Polyline({
    path: poliPoints,
    strokeColor: #FF0000,
    strokeOpacity: 1.0,
    strokeWeight: 2
  });

  poliPath.setMap(map);

//Adss new polyLine point on existing path
poliPath.getPath().setAt(poliPoints.length - 1, new google.maps.LatLng( number,number) );

//Removes polyLine point on existing path
poliPath.getPath().removeAt(poliPoints.length - 1, new google.maps.LatLng( number,number) );


Creates Poligon
----------------
var poliPoints = [
                  {lat: number,lng: number},
                ]

var poligonPath = new google.maps.Polygon({
  path: poliPoints,
  strokeColor:#0000FF,
  strokeOpacity:0.8,
  strokeWeight:2,
  fillColor:#0000FF,
  fillOpacity:0.4
});

poligonPath.setMap(map);


Draws Circle
------------
var cir = new google.maps.Circle({
    strokeColor: #FF0000,
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: #FF0000,
    fillOpacity: 0.35,
    //map:map,
    center: {lat:number,lng:number} ,
    radius: 10000
  })

  cir.setMap (map)


var geocoder = new google.maps.Geocoder();

  //passing address
  geocoder.geocode(
    {
      address: 'Address,
    },
    (results, status) => {
      if (status === OK) {
        map.setCenter(results[0].geometry.location);
        new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        })
      } else {
        console.log(
          Geocode was not successful for the following reason:  + status
        )
      }
    }
  )

  //passing lat/lng
  geocoder.geocode(
    {

      location: {lat:number,lng:number}
    },
    (results, status) => {
      if (status === OK) {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: map,
          position: {lat:number,lng:number}
        })

        var infoWindow = new google.maps.InfoWindow
        infoWindow.setContent(results[0].formatted_address)
        infoWindow.open(map,marker)

      } else {
        console.log(
          Geocode was not successful for the following reason:  + status
        )
      }
    }
  )

Direction service
-----------------
const directionsService = new google.maps.DirectionsService();
const directionsRenderer = new google.maps.DirectionsRenderer();

directionsRenderer.setMap(map);



directionsService.route(
  {
    origin:{
      query: 'Address'
    },
    destination:{
      query: 'Address'
    },
    //DRIVING,WALKING,BICYCLING,TRANSIT
    travelMode: google.maps.TravelMode.DRIVING
  },
  (response, status) => {
    if (status === OK) {
      directionsRenderer.setDirections(response);
    } else {
      console.log(Directions request failed due to  + status);
    }
  }
)

//Drawing manager
const drawingManager = new google.maps.drawing.DrawingManager({
  drawingMode: google.maps.drawing.OverlayType.MARKER,
  drawingControl: true,
  drawingControlOptions: {
    position: google.maps.ControlPosition.TOP_CENTER,
    drawingModes: [
      google.maps.drawing.OverlayType.MARKER,
      google.maps.drawing.OverlayType.CIRCLE,
      google.maps.drawing.OverlayType.POLYGON,
      google.maps.drawing.OverlayType.POLYLINE,
      google.maps.drawing.OverlayType.RECTANGLE
    ]
  },
  circleOptions: {
    fillColor: #ffff00,
    fillOpacity: 1,
    strokeWeight: 5,
    clickable: false,
    editable: true,
    zIndex: 1
  }
})
drawingManager.setMap(map)


//xhr - setRequestHeader after open command
var postParam = 'someValue'
var postParamStr = 'query =' + postParam

var x = new XMLHttpRequest();
x.onload = function() {
  console.log(x.responseText)

}
x.oneerror = function(){
  console.log(x.status + ' ' + x.statusText)
}
x.open('Post', url);
x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
x.send(postParamStr);

// get
xhr.open('GET', url); // https://domainName?q=test
x.send();

known for
https://www.insider.com/what-every-state-is-best-known-for#arizona-the-grand-canyon-3






SELECT
s.name,
s.abbr,
s.lat,
s.lng,
kn.knownFor,
kn.dsc,
(
  select SUBSTRING_INDEX(GROUP_CONCAT(abbr) , ,, 2)
  from( select abbr , (rand()*1000) + cast(lat as Float ) as rn from states order by rn ) as tb
  where abbr not in (s.abbr)
) as fields,
(-1) as results
FROM `states` s
left join knownFor kn on kn.abbr = s.abbr


SELECT
s.name,
s.abbr,
s.lat,
s.lng,
kn.knownFor,
kn.dsc,
(
  SELECT GROUP_CONCAT(name) FROM `states` where abbr not in (s.abbr) order by rand()
) as fields,
(-1) as results
FROM `states` s
left join knownFor kn on kn.abbr = s.abbr


angular

interpolation
---------------------------

{{title}}
<div class="" [class]=" expression? '':'' "></div>
(click)="rbChangeHandler($event)
id="{{this.question.answers[0]}}"

import { NgFor } from '@angular/common';
@Component({
  selector: 'app-card',
  standalone: true,
  imports: [NgFor],

})


app.component.ts
export class AppComponent {
  title = 'angular-project'
}
app.component.html
<ul>
  <li><a href=/page1 class={{title}}>First Component</a></li>
  <li><a href=/page2 class=active>Second{{title}}</a></li>
</ul>

RouterLink
-----------
component.ts
import { RouterLink } from '@angular/router';

component.html
<li><a routerLink="/page" routerLinkActive="active">First Component</a></li>

<a [routerLink]="['/page']">link</a>

///user/bob?debug=true#education
<a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" fragment="education">
  link to user component
</a>

when deploying
ng build --prod
ng build --base-href=/subfolder/ --prod

* If deploying to a subfolder, include an .htaccess file


Refer to assets/files
component.ts
export class AppComponent {
  filePath = 'assets/filename'
}

Adding CSS/JS
* Assets directory
  index.html
  <link rel=stylesheet  href=assets/css/bootstrap.min.css media=all>

* angular.json file and recompile
  styles: [src/styles.css],
  scripts: []


basic navbar
<div class=row>
   <div class=col-md-12 position-relative>
      <nav class=bg-dark site-nav>
        <a class=navbar-brand href=/>
				      <img src={{logo}} width=50 height=50 class=d-inline-block align-top nav-bar-icon alt=rcsproductions loading=lazy>
				</a>
            <ul id=primary-menu class=navbar-nav mr-auto>
               <li class=nav-item >
                 <a routerLink=home>Home</a>
               </li>
               <li class=nav-item >
                 <a routerLink=known-for>KnownFor</a>
               </li>
            </ul>

      </nav>
   </div>
</div>
<style>
.site-nav{
  height:65px;
  padding-left:65px;
  padding-top:20px;
}
.site-nav .navbar-brand{
  left: 20px;
  position: absolute;
  top:0;
}
.site-nav ul{
  display: flex;
  flex-direction: row;
  margin-left: 10px
}
.site-nav ul li{
  margin-right: 10px;
  border-bottom:2px solid #ccc;
  padding-bottom: 5px;

}
.site-nav ul li a{
  color:#fff;
  font-weight: bold;
  font-size: 1rem;
}
.site-nav ul li a:hover{
  text-decoration: none;
}

</style>

Angular Lifecycle hooks
ngOnChanges
ngOnInit
ngDoCheck
ngAfterContentInit
ngAfterContentChecked
ngAfterViewInit
ngAfterViewChecked
ngOnDestroy


animate__infinite	infinite

Angular

Binding
------------
<button (click)=updateName()>Update button</button>
[class]= (statement) ? 'true':'false'
(change)=func_name($event)

Interpolation
-----------------
app.component.ts
export class AppComponent {
  title = 'angular-project'
}
app.component.html
<ul>
  <li><a href=/page1 class={{title}}>First Component</a></li>
  <li><a href=/page2 class=active>Second{{title}}</a></li>
</ul>


Passing props to child component

ChildComponent.ts

import { Component, Input } from '@angular/core';

export class ChildComponent implements OnInit {

  @Input() functionName
  @Input() btnLabel

 ngOnInit() {
       this.functionName();
 }
}

ChildComponent.html
<button type=button (click)=functionName()>{{btnLabel}}</button>

ParentComponent.ts
export class ParentComponent {

  fn() {
    console.log('hello');
  }
}

<app-ChildComponent [btnLabel]="value"></app-ChildComponent>




ParentComponent.html
<ChildComponent functionName=fn btnLabel=Title></<ChildComponent>

Emitting from child to PArentComponent
--------------------------------------

ChildComponent.ts
export class ChildComponent implements OnInit {

 @Output() onClose = new EventEmitter();

 ngOnInit() {
 }

 closeModal() {
   this.onClose.emit();
 }
}

ChildComponent.html
<button (click)=closeModal()></button>

ParentComponent.ts
export class ParentComponent {

  execOnClose() {
  }
}

ParentComponent.html
<ChildComponent onClose=execOnClose ></<ChildComponent>


mysql
create view as resumeview
SELECT
    post_date AS post_date,
    CONCAT(
        CASE
          WHEN post_type = 'post' THEN CONCAT('<p><b>',post_title,'</b></p>','<hr>',REPLACE(post_content,' style="font-weight: 400;"',''))
          ELSE CONCAT('<p><b>',post_title,'</b></p>',REPLACE(post_content,' style="font-weight: 400;"',''))
        END,post_excerpt
      ) AS editedText,
CASE
  WHEN post_type = 'schools' THEN 1
  WHEN post_type = 'jobs' THEN 2
  WHEN post_type = 'post' THEN 3
  ELSE '-1'
END AS blocks
FROM wp_posts
where post_status = 'publish'
and post_name not in (select distinct name from wp_terms)
and post_type not in ('nav_menu_item','page')

union all

select
post_date,
REPLACE(post_content,' style="font-weight: 400;"',''),
0
from wp_posts
where post_name = 'resume'
order by blocks;




CREATE VIEW  questions_view AS
SELECT
s.name,
s.abbr,
kn.question,
cast(s.lat as Decimal(20,15) ) as lat,
s.lat as latStr,
cast(s.lng as Decimal(20,15) ) as lng,
s.lng as lngStr,
kn.knownFor,
kn.dsc,
(
  SELECT GROUP_CONCAT(name) FROM `states` where abbr not in (s.abbr) order by rand()
) as fields,
(-1) as results
FROM `states` s
left join knownFor kn on kn.abbr = s.abbr
order by rand()


CREATE VIEW  app_content_view AS

select
wp.post_content as content ,
wp.post_name,
COALESCE(img.guid, '') AS imgUrl,
COALESCE(
  (select GROUP_CONCAT(meta_value SEPARATOR ' // ') from wp_postmeta where meta_key like '%field_%' and post_id = wp.id)
,'') as customFields
from (select name from wp_terms group by  name) wt
left join wp_posts wp on wt.name = wp.post_name
left join wp_posts img on img.post_parent = wp.id and img.post_type = 'attachment'
where wp.post_status = 'publish'




yellow: #FFFF00
purple:#795A7E



Mysql Date Functions
YEAR(),
WEEK(),
MONTH(),
MONTHNAME()
DAY()
LAST_DAY()
STR_TO_DATE(Tue Aug 25  19:22:52 2020, %a %M %d %T %Y)
STR_TO_DATE(Tue Aug 25 2020, %a %M %d %Y)
STR_TO_DATE(Aug 25 2020, %M %d %Y)






//Days on/off
------------------------------------
select
project,
mindate,
mth,
MONTHNAME(mindate) as mthName,
DAY(LAST_DAY(mindate)) as daysInMonth,
count(*) as daysWorked,
DAY(LAST_DAY(mindate)) - count(*) as daysOff
from(
  select project ,
  MONTH(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mth,
  DAY(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as day,
  min(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mindate
  from git_data
  group by project, day, mth
) as tb
group  by project, mth

//# of commits by month
-------------------------------------------------------
SELECT
project,
MONTHNAME(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as month,
count(*) as commits
FROM `git_data`
group by project,month(STR_TO_DATE(`dt`, %a %M %d %T %Y))


//commits by days
-------------------
select project ,
MONTHNAME(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as monthName,
MONTH(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mth,
DAY(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as day,
min(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mindate,
count(commit) as commitsMade
from git_data
group by project, day, mth
order by project,mth,day


//time spent by month
-------------------------------
select
project,
month,
count(dt) as commitsNum,
min(dtime) as startDt,
max(dtime) as endDt,
TIMEDIFF(max(dtime) , min(dtime)) as timeSpent
FROM
(
  SELECT
  project,
  MONTH(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mth,
  MONTHNAME(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as month,
  dt,
  STR_TO_DATE(`dt`, %a %M %d %T %Y) as dtime
  FROM `git_data`
) as tb
group by project,month
order by project,mth,startDt


//time spent by day
-------------------------------
select
project,
month,
day,
count(dt) as commitsNum,
min(dtime) as firstCommit,
max(dtime) as lastCommit,
TIMEDIFF(max(dtime) , min(dtime)) as timeSpent
FROM
(
  SELECT
  project,
  DAY(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as day,
  MONTH(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mth,
  MONTHNAME(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as month,
  dt,
  STR_TO_DATE(`dt`, %a %M %d %T %Y) as dtime
  FROM `git_data`
) as tb
group by project,month,day
having count(dt) > 1
order by project,mth,day

----------------------
set @value = 1
ALTER TABLE table_name AUTO_INCREMENT = value;




charts

//['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove']
//data: {
            labels: ['Item 1', 'Item 2', 'Item 3'],
            datasets: [{
                data: [10, 20, 30],
                backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                ]
            }]
        }
//

//type- line,bar,pie

var ctx = document.getElementById('myChart').getContext('2d');

var chart = new Chart(ctx, {
    type: 'line',
    data: data,
    options: {
        // This chart will not respond to mousemove, etc
        events: ['click'],
        layout: {
            padding: {
                left: 50,
                right: 0,
                top: 0,
                bottom: 0
            }
        },
        legend:{
          display:true //default
          ,align:'center' //default
        },
        title:{
          display:true  //default

        }

    }
});


.question-section label > input:checked +span:after{
  color:#f6546a;
  content:\f14a;
}
.question-section label > input:disabled:not(:checked) +span:after{
  /*content:\f0c8;*/
  content:'\f0fe';
  color:#20b2aa;
  transform: rotate(45deg);
}





//homePage templates
<div class="col-md-12 homepage" >
  <div class="row no-gutters border rounded shadow position-relative bg-light m-4">
    <div class="p-4 m-auto">
      <div [innerHTML]=content></div>
    </div>
  </div>
</div>


//Load html

vue - v-html
react - <div dangerouslySetInnerHTML={{__html: getMarkup()}} />

component.html
angular <div [innerHTML]=content></div>

component.ts
content = '<html>'

Angular - Import services

ng g s serviceName

//assuming it is under app
import {GetDataService} from './get-data.service'

constructor(varName:GetDataService )

varName.VARIABLES
varName.Functions

datepicker
https://bootstrap-datepicker.readthedocs.io/en/latest/methods.html

$('#startdate').val()
$(#inputWithDatePicer).data('datepicker').getFormattedDate('yyyy-mm-dd');


$('yourpickerid').on('changeDate', function(ev){
    $(this).datepicker('hide');
});

$('.datepicker').datepicker('setDatesDisabled', [arg1, arg2]);

create view git_data_view as
SELECT
author,
project,
YEAR(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as year,
DAY(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as day,
DAYNAME(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as dayName,
MONTH(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as mth,
MONTHNAME(STR_TO_DATE(`dt`, %a %M %d %T %Y)) as month,
STR_TO_DATE(`dt`, %a %M %d %T %Y) as dtime,
cast(STR_TO_DATE(`dt`, %a %M %d %T %Y)  as date) as dt,
`dt`  as dtText,
msg,
commit
FROM `git_data`




mysql

COALESCE(null, '')

SET @var_name = expr;
check for null
where col is null | col is not null

* Converts null to string / number
* Checks for null on where clause

select wdt as day1,
DATE_ADD(tb2.wdt, INTERVAL 1 DAY) as day2,
DATE_ADD(tb2.wdt, INTERVAL 2 DAY) as day3,
DATE_ADD(tb2.wdt, INTERVAL 3 DAY) as day4,
DATE_ADD(tb2.wdt, INTERVAL 4 DAY) as day5,
DATE_ADD(tb2.wdt, INTERVAL 5 DAY) as day6,
DATE_ADD(tb2.wdt, INTERVAL 6 DAY) as day7,
year
from(
  select
  g.dt,
  tb.num,
  DATE_ADD(MAKEDATE(y.year, 1), INTERVAL tb.num WEEK) as wdt,
  y.year
  from(
  select 0 as num union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9 union all select 10 union all select 11 union all select 12 union all select 13 union all select 14 union all select 15 union all select 16 union all select 17 union all select 18 union all select 19 union all select 20 union all select 21 union all select 22 union all select 23 union all select 24 union all select 25 union all select 26 union all select 27 union all select 28 union all select 29 union all select 30 union all select 31 union all select 32 union all select 33 union all select 34 union all select 35 union all select 36 union all select 37 union all select 38 union all select 39 union all select 40 union all select 41 union all select 42 union all select 43 union all select 44 union all select 45 union all select 46 union all select 47 union all select 48 union all select 49 union all select 50 union all select 51 union all select 52 union all select 53
  )tb
  left join (select dt,year from git_data_view group by dt,year) g on week(g.dt) = tb.num
  join (select year from git_data_view group by year) y
  where dt is  null
  ) as tb2
  where year in ('2020')


Requirement: Node >= 8.10 and npm >= 5.6
npx create-react-app projectName
cd projectName
npm start


npm install -g @vue/cli-service
vue create projectName
cd projectName
npm run serve

vue ui

npm install -g @angular/cli
ng new projectName
cd projectName
ng serve


<img alt=Vue logo src=./assets/logo.png>
@/assets/logo.png


php

//PHP 7
$obj = new class{};
$obj.field = value;

//PHP 5 >
$object = (object) [
    'propertyOne' => 'foo',
    'propertyTwo' => 42,
  ];


props: ['chartdata', 'options'],

console.log('function: ',JSON.parse(JSON.stringify(arr[i])) )



http://localhost?type=monthly&year=2020&project=php&mth=8

create view commitsbyyear as
select
project,year,min(dtime) as firstCommit, max(dtime) as lastCommit,count(*) as commits ,timediff( max(dtime), min(dtime)) as timeSpent
from git_data_view
group by project,year



create view commitsbymonth as
select project,year,month, min(dtime) as firstCommit, max(dtime) as lastCommit,count(*) as commits ,timediff( max(dtime), min(dtime)) as timeSpent
FROM git_data_view
group by project,year, month

where year = '.$_GET['year'] .' .
and project = '.$_GET['project'] .' .
and month = '.$_GET['month']  .'.

iterate obj
for (const [key, value] of Object.entries(object1)) {
  console.log(`${key}: ${value}`);
}


select
project,
year,
GROUP_CONCAT(mth) as months
FROM
(
  select
  project,
  year,
  mth
  FROM `git_data_view`
  group by year,mth
) as tb
group by project,year


php
$obj = new class{};
if (array_key_exists("fieldName",$row ))   $obj->fieldName = utf8_encode($row["fieldName"]);


$obj = new class{};
foreach ($row as $key => $value) {
    $obj->$key = utf8_encode($value);
    //var_dump($var);
}


// if (array_key_exists("author",$row ))   $obj->author = utf8_encode($row["author"]);
// if (array_key_exists("project",$row ))  $obj->project = utf8_encode($row["project"]);
// if (array_key_exists("year",$row ))     $obj->year = utf8_encode($row["year"]);
// if (array_key_exists("day",$row ))      $obj->day = utf8_encode($row["day"]);
// if (array_key_exists("dayName",$row ))  $obj->dayName = utf8_encode($row["dayName"]);
// if (array_key_exists("mth",$row ))      $obj->mth = utf8_encode($row["mth"]);
// if (array_key_exists("month",$row ))    $obj->month = utf8_encode($row["month"]);
// if (array_key_exists("months",$row ))    $obj->month = utf8_encode($row["months"]);
// if (array_key_exists("dtime",$row ))    $obj->dtime = utf8_encode($row["dtime"]);
// if (array_key_exists("dt",$row ))       $obj->dt = utf8_encode($row["dt"]);
// if (array_key_exists("dtText",$row ))   $obj->dtText = utf8_encode($row["dtText"]);
// if (array_key_exists("msg",$row ))      $obj->msg = utf8_encode($row["msg"]);
// if (array_key_exists("commit",$row ))   $obj->commit = utf8_encode($row["commit"]);
// if (array_key_exists("commits",$row ))   $obj->commits = utf8_encode($row["commits"]);
// if (array_key_exists("timeSpent",$row ))   $obj->timeSpent = utf8_encode($row["timeSpent"]);
// if (array_key_exists("lastCommit",$row ))   $obj->lastCommit = utf8_encode($row["lastCommit"]);
// if (array_key_exists("firstCommit",$row ))   $obj->firstCommit = utf8_encode($row["firstCommit"]);






select project,year,month,mth,GROUP_CONCAT(day) as days, day(LAST_DAY(lastday)) as lastday
FROM
(
  select project,year,month,mth,day ,min(dtime) as lastday
  from git_data_view
  group by project,year,month,mth,day
  ) as tb
where year = '2020'
and project='php'
and mth=6
group by project,year,month,mth



select project,year,GROUP_CONCAT(month order by mth ) as months, GROUP_CONCAT(commits order by mth ) as commits
FROM
(
  select
  project,
  year,
  mth,
  month,
  count(commit) as commits
  from git_data_view
  where year = YEAR(CURDATE())
  group by project,year,mth,month
) as tb
group by project,year


select * from
( select 'January' as month union all select 'February' union all select 'March' union all select 'April' union all select 'May' union all select 'June' union all select 'July' union all select 'August' union all select 'September' union all select 'October'  union all select 'November' union all select 'December') as tb
left join (
select
project,
year,
mth,
month,
count(commit) as commits
from git_data_view
where year = YEAR(CURDATE())

group by project,year,mth,month
) as chart on chart.month = tb.month






select
project,
year,
GROUP_CONCAT(month order by mth ) as months,
GROUP_CONCAT(commits order by mth ) as commits,
(
select
GROUP_CONCAT(COALESCE(commits,0) )
as commits
from
( select 'January' as month union all select 'February' union all select 'March' union all select 'April' union all select 'May' union all select 'June' union all select 'July' union all select 'August' union all select 'September' union all select 'October'  union all select 'November' union all select 'December') as tb
left join (
select
project,
year,
mth,
month,
count(commit) as commits
from git_data_view
where year = YEAR(CURDATE())
group by project,year,mth,month
) as chart on chart.month = tb.month where project = ms.project) as allCommits
FROM
(
  select
  project,
  year,
  mth,
  month,
  count(commit) as commits
  from git_data_view
  where year = YEAR(CURDATE())
  group by project,year,mth,month
) as ms
group by project,year


(
select
GROUP_CONCAT(COALESCE(commits,0) )
as commits,
from
( select 'January' as month union all select 'February' union all select 'March' union all select 'April' union all select 'May' union all select 'June' union all select 'July' union all select 'August' union all select 'September' union all select 'October'  union all select 'November' union all select 'December') as tb
left join (
select
project,
year,
mth,
month,
count(commit) as commits
from git_data_view
where year = YEAR(CURDATE())
and project = 'node'
and year = '2020'
group by project,year,mth,month
) as chart on chart.month = tb.month ) as allCommits

GROUP_CONCAT(tb.month )  as months





//create view yearly_monthly_commits as

select
project,
year,
GROUP_CONCAT(month order by mth) as months,
GROUP_CONCAT(commits order by mth) as monthlyCommits,
min(minTime) as firstCommit,
max(maxTime)as lastCommit,
sum(commits) commits
from (
  select
  gd.project,
  MONTH(STR_TO_DATE(concat(tb.month,' 1 ',gd.year ), '%M %d %Y')) as mth,
  tb.month,
  gd.year,
  COALESCE(gdv.commits,0) as commits,
  gdv.minTime,
  gdv.maxTime
  FROM
  (
  select project,year
  from git_data_view
  group by project
  )as gd
  cross join ( select 'January' as month union all select 'February' union all select 'March' union all select 'April' union all select 'May' union all select 'June' union all select 'July' union all select 'August' union all select 'September' union all select 'October'  union all select 'November' union all select 'December') as tb
  left join(
  select
  project,
  year,
  mth,
  month,
  min(dtime) as minTime,
  max(dtime) as maxTime,
  count(commit) as commits
  from git_data_view gd
  group by project,year,mth,month
  ) as gdv on gdv.project = gd.project and gdv.month = tb.month and gdv.year = gd.year
  where tb.month in (SELECT month FROM git_data_view group by month)
) as maintb
where year = 2020
group by project,year




SELECT
project,
year,
GROUP_CONCAT(month order by mth) as months,
GROUP_CONCAT(commits order by mth) as monthlyCommits,
min(minTime) as firstCommit,
max(maxTime)as lastCommit,
sum(commits) commits
FROM yearly_monthly_commits
where year = 2020
and minTime is not null
group by project,year




Security Group
--------------
80	 TCP	0.0.0.0/0	launch-wizard-2
22	 TCP	0.0.0.0/0	launch-wizard-2
3389 TCP	0.0.0.0/0	launch-wizard-2
443	 TCP	0.0.0.0/0	launch-wizard-2

-	Go to instance , click on connect
- RDP CLient
    - Either download RDP file or download RDP Client
    -  Login
        - ec2@domain\Administrator
        - Password


1. Press the Start button -> select Administrative Tools -> Active Directory Users and Computers.
2. Right-click the domain on which you want to create the user on -> choose New -> User.
3. Type the user‘s name in the respective boxes.
4. Choose a user logon name (needs to be unique in the respective domain).
5. Type the required password twice correctly.
6. Choose any options that you want to apply to the password.
7. Click Next -> verify that the entire set of information is correct.



Windows
Enable JS and script debugging

JS
  Internet options
  Security tab -> Custom Level
  Scroll down and change the Active Scripting setting (enable)

Script debugging
  Internet options
  Advanced Tab
  Script Debugging (enable)


Windows server
- Disable Internet Explorer Enhanced Security Configuration so that you can download and install required software from the web and use IE
- Open Server manager
  - Local server
    -  IE Enhanced Security Configuration (off)


Windows Server 2019
- Install IIS
  - Powershell
    Install-WindowsFeature -name Web-Server -IncludeManagementTools

  - Server Manager
    - Add roles and features
      - Make sure port 80 is open (http / https)
    - Select Role-based or feature-based installation
    - Select available server
    - Select Web Server (IIS)
    - Add Features (Management tools - console)
    - Select the .NET Framework 4.7 and ASP.NET
    - Under Role services
      - Enable
        - Common HTTP Features
          - Default Document
          - Directory Browsing
          - HTTP Errors
          - Static Content

        - Health and Diagnostics
          - HTTP Logging
          - Request Monitor
          - Tracing

        - Performance
          - Static Content Compression
          - Dynamic Content Compression

        - Security
          - Request Filtering

        - Application Development
          - .NET Extensibility 4.7
          - ASP
          - ASP.NET 4.7
          - CGI
          - ISAPI Extensions
          - ISAPI Filters

        - Management Tools
          - IIS Management Console

    Install
    http:// ip-domain


    XHR - Get Request
    // 1. Create a new XMLHttpRequest object
    let xhr = new XMLHttpRequest();

    // 2. Configure it: GET-request for the URL /article/.../load
    xhr.open('GET', 'url');

    // 3. Send the request over the network
    xhr.send();

    // 4. This will be called after the response is received
    xhr.onload = function() {
      if (xhr.status != 200) { // analyze HTTP status of the response
        alert(`Error ${xhr.status}: ${xhr.statusText}`); // e.g. 404: Not Found
      } else { // show the result - xhr.response
        alert(`Done, got ${xhr.response.length} bytes`); // response is the server
      }
    };

    xhr.onprogress = function(event) {
      if (event.lengthComputable) {
        alert(`Received ${event.loaded} of ${event.total} bytes`);
      } else {
        alert(`Received ${event.loaded} bytes`); // no Content-Length
      }

    };

    xhr.onerror = function() {
      alert("Request failed");
    };



git commit --amend
git commit -a -m ""

//creates new branch
git checkout -b branchname

//checkout branch from remote
git checkout origin/branchname




Force Quit Applications
Command+Option+Escape

Axios

npm i axios --save

import axios from 'axios'

axios({method:'get',url:`${URL.apiUrl}/content-builder.php?type=react`})
.then( res => { console.log(res) }



// if(i+1 == (res.data).length){
//   let platformBlob = new Array()
//
//   platforms.forEach((item, i) => {
//     platformBlob.push({
//       name:item ,
//       items: (res.data).filter( it => it.platform == item )    })
//   });
//   console.log(platformBlob)
// }



border-top: 1px solid #e9ecef;


<></>
<React.Fragment key={i}>
</React.Fragment>

//You can also nest forEach and map Functions
{
  nav.map( (item,i) => (

      <React.Fragment key={i}>
      <htmlTag key={i}>
      </htmlTag>

      {
          (item.items).map( (item,index) => (
          <htmlTag key={index}>
         </htmlTag>
        ))}
      </React.Fragment>
  ))

}


module.exports = {
  publicPath: '/vue-project/'
}

* create / go to vue.config.js and
* Add Htaccess
Or
* Use VUE UI interface
  - import project
  - if deploying to subfolder
  * Configuration - left sidebar
    - vue cli
    - Add subfolder name -Public Path /subfolder/




RCSProductions


report builder
Every project should have a way to assess performance regardless of complexity or size.
This application takes into account daily commits which are meaningful to the application development and therefore
provides metrics (Time Spent) to determine progress

nlp
This application retrieves user input, which it is then passed to a Third Party API to analyze its sentiment - Positive, Neutral or Negative.

react
This application takes rows of data from a database which dynamically creates new pages using react-router-dom


resume-download
This application utilizes the data inside the Wordpress database to create an HTML view and also a pdf file document to download

cheatsheet
This application intends to provide users with topics related to Software Engineering Technologies. It works by having a
search field in which user input is retrieved and then matched against the knowledge base


Angular project

Feel like playing a game? Then look no further and enjoy this application whose entirely purpose is to entertain and procure suitable perspectives about each state in the US.


SQL Server

{PCName}{instanceName}
EC2AMAZ-0TO5Q54\SQLEXPRESS
localhost


SQL Server
SQL Server Authentication
- login under windows authentication
- left panel
  - browse login
    - right click on SA
      - change Password



      determine the location of the MySQL configuration file:
      mysql --help | grep "Default options" -A 1


Link mysql to sql server
- Download visual studio
- Download odbc driver/connector
 - http://dev.mysql.com/downloads/connector/odbc/
 - install on windows server

- Start menu -> browse odbc (System 32 / 64 bit)
  - Drivers (double check odbc installation )
  - System DSN and add
    - Fill in authentication details
    - test connection
    - Enable advanced options if required
- SQL Server Management Studio
  - right click linked server -> new
    - Linked Server -> anyName
    - Provider -> OLE DB for ODBC Drivers
    - Product Name -> odbc System DSN Name
    - Data source -> odbc System DSN Name
  - Security Tab (left panel)
    - Be made using security context
      remote login and pwd
  - Server Options (left panel)
    - Enable RPC and RPC OUT (Remote Procedure Call)
  - OK
  - If errors, while CRUD operations
    - Linked servers -> providers right click on provider
      - enable LevelZeroOnly

  select * from linkedServerName...dbTable
  select * from openquery(linkedServerName, 'select * from dbTable where field ="value"')

  INSERT OPENQUERY (linkedServerName, 'SELECT name FROM dbTable')
  VALUES ('NewTitle');

  DELETE OPENQUERY (linkedServerName, 'SELECT name FROM dbTable WHERE name = ''value''')

  UPDATE OPENQUERY (linkedServerName, 'SELECT name FROM dbTable WHERE id = number')
  SET name = 'ADifferentName';


-MYSQL Allow remote connections

    * Firewall / AWS
      - Open port mysql:3306
    * Find config file
      - mysql --help | grep "Default options" -A 1
      - Add under  [mysqld]
        bind-address = 0.0.0.0
    * Allow db user access to all hosts ( % = all hosts )
      // select host,user from user where user = 'dbuser'
      - GRANT ALL PRIVILEGES ON *.* TO 'dbuser'@'%' IDENTIFIED BY 'pwd';
    * restart httpd
      - sudo systemctl restart httpd
    * restart mysql / mariadb
      - sudo systemctl start mariadb

//disable remote connections
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
flush privileges;

//check grants
select * from mysql.user

REVOKE ALL ON *.* TO 'dbuser'@'%';





MYSQL Server
Allow remote connections
- AWS
  Inbound security protocol - 1433 0.0.0.0

- Enable windows and sql server auth  (object explorer)
- Enable remote connections (connections)

- Sql server manager
  - enable tcp/ip (network configuration)
    - under ip ports
      -ipAll set 1433 (default port number)
  - services -> restart sql server

- Windows firewall
  - wf.svc
    - Inbound rules
      - set
        Tcp
        port 1433
        Domain, Private, Public

- connect ip,1433
          sa -> pwd

3.135.231.228
object_name : EC2AMAZ-0TO5Q54\SQLEXPRESS
port: 1433
db \ Catalog :asp_project
table:table_1
fields: id,name
sa



to deploy from asp_project
sh ../asp_deploy.sh

dotnet publish -o ~/projects/asp-release
cd ~/projects/asp-release
git commit -a -m "new release"
git push
cd ~/projects/asp_project


web.config
<connectionStrings>
  <add
    name="sqlServer"
    providerName="System.Data.SqlClient"
    connectionString="Data Source=localhost;Initial Catalog=MyDatabase;User User Id=user;Password=pwd;" />
</connectionStrings>


"Data Source=ip,1344;Initial Catalog=asp_project;User Id=sa;Password=;"
SqlClient
  Integrated Security=true;
  -- or --
  Integrated Security=SSPI;
OleDb
  Integrated Security=SSPI;
Odbc
  Trusted_Connection=yes;
OracleClient
  Integrated Security=yes;

Reading variables from appsettings.json
"ConnectionStrings": {
    "myDb1": "Data Source= ip / domainName,1433;Initial Catalog=asp_project;User Id=;Password=;"
  }

  page.cshtml.cs
  : PageModel{

    private readonly IConfiguration Configuration;

    //constructor
    public IndexModel(IConfiguration configuration)
    {
        Configuration = configuration;
    }
    public void OnGet()
    {
        Console.WriteLine(Configuration["ConnectionStrings:myDb1"]);

    }
  }






PHP - MySQL
$dbhost = "ip / localhost /domainName";
$dbname = "dbname";
$dbuser = "dbuser";
$dbpass = "pwd";

//port# = optional
$conn = new mysqli($dbhost, $dbuser, $dbpass ,$dbname);


$statement = <<<EOD
select *
from table_1
EOD;

if(! $conn ) {
   die('Could not connect: ' . mysqli_connect_error());
}


$result = $conn->query($statement);


$db_elements = array( );
if($result->num_rows > 0){
 while($row = $result->fetch_assoc()){

   array_push($db_elements, array(
                                    'id' => $row["id"],
                                    'name' => $row["name"],

                                  ));
 }
}

$json = json_encode($db_elements, JSON_PRETTY_PRINT);

echo $json;



mysqli_close($conn);


php.ini
extension=php_mssql.dll

<?php
	$link = mssql_connect('localhost', 'db_user', 'db_password');
	if(!$link) {
		echo'Could not connect';
		die('Could not connect: ' . mssql_error());
	}
	echo'Successful connection';
	mssql_close($link);
?>


Windows - test sql server connection

create txt document
change extension to .udl
This will give you a Data Link Editor that allows you to test the connection.
under connection tab
  - sql server instance
  - UN and PWD
  - select db name


Visual Studio Asp.net
To add Reference / Packages to project
- Right click on dependencies
  - Add Reference / manage Nuget Package



  ASP.net Razor
  comments
  ========
  @*
  //code
  *@
  String Array
  var pages = new[] { "Index", "Privacy" };

  // string literal
  var Message = $"Customer {varName} added";



  (Object sender,EventArgs e)

  //functions inside .cshtml
  {
      @functions{
          public void Btn_click()
          {
              Console.WriteLine("click");
          }
      }

  }

  //code behind - .cs
  public class AboutModel : PageModel
  {
    public void Btn_click()
    {
        Console.WriteLine("click");
    }
  }

  dotnet
  dotnet new page --name About (creates cshtml and csharp files) --namespace projecName
  dotnet publish -o ~/projects/asp-release


- cshtml.cs files (HTTp Handlers)
  -public void OnGet(){}
  -OnPost()
  -OnPut()





Tag Helpers
@addTagHelper *,
              Microsoft.AspNetCore.Mvc.TagHelpers

//Environment
<environment names="Development">
    <link rel="stylesheet" href="~/css/style1.css" />
    <link rel="stylesheet" href="~/css/style2.css" />
</environment>

//minified css version for production
<environment names="Staging, Test, Production">
    <link rel="stylesheet" href="~/css/style.min.css" />
</environment>

//The name of the Razor page to link to must be provided without the file extension:
asp-page
<button asp-page="page">Submit</button>



ASP.Net

//Writes html
@Html.Raw(mystring)



DB Connection

public string connString; // add connection string

SqlConnection connection = new SqlConnection(connString);

SqlCommand command = new SqlCommand("select * from table_1", connection);

connection.Open();

// command.ExecuteNonQuery -> insert,update,delete

//Select
SqlDataReader reader = command.ExecuteReader();


while (reader.Read()){

  Console.WriteLine($" " +
                  $"{reader.GetName(0)} :{reader.GetValue(0)} " +
                  $"-- " +
                  $"{reader.GetName(1)}:{reader.GetValue(1)} ");

}


connection.Close();
connection.Dispose();



https://localhost:5001/About?q=procedure




<table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>


    dynamic car = new Object();
    car.Make = "G35";
    car.Year = 2014;


c#
Dictionary
 Dictionary<string, string> obj = new Dictionary<string, string>();
 obj.Add("key","value")


List of Dictionary
List<Dictionary<string, string>> lst = new List<Dictionary<string, string>>();
lst.Add(new Dictionary<string,string>(){
  {"key","value1"},
  {"key","value2"}
})




ASP.Net
To create a partial view
- A Razor view is just a cshtml file
- A Razor page contains both cshtml and cshtml.cs files
Right Click on Shared directory
  - Add Razor View
  - <partial name="_partialViewName" />

  @foreach (var product in Model.Products)
  {
      <partial name="_ProductPartial" model="product" />
  }


//Fixed table inside container
table-layout:fixed

//Adding width to elements on one line
{
 display:inline-block;
 width: value px;
}



[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;ASP&quot;}]

//Serialize C# object
string output = System.Net.WebUtility.HtmlDecode(JsonConvert.SerializeObject( values) );


html
 <input id="outputStr" value=" @Model.output" type="hidden" />


<script>
  var obj1 = document.querySelector('#outputStr').value
</script>

<script>
//JSON.parse(JSON.stringify(obj.replaceAll('&quot;', '"')))
var obj = '@output'
</script>


[{"id":"2","name":"\"php\""},{"id":"1","name":"ASP"}]


c# try and catch
----------------

string retString;
connection = new SqlConnection(connString);
SqlCommand command = new SqlCommand(query, connection);

connection.Open();

try
{
    command.ExecuteNonQuery();

     retString = (string)command.ExecuteScalar();
}

catch(Exception e)
{
    retString = e.Message;

}

finally{
    close_conn();
}

return retString;


//Get request(Async)
--------------------
main(){
  //var ts =  getJson();
  Task<string> ts =  getJson();

  // wait for the task to complete to continue
  output = ts.Result;

}

public async Task<string> getJson()
{
    //get request
    HttpClient hp = new HttpClient();
    hp.BaseAddress = new Uri("http://domainName");
    var response = (await hp.GetAsync("filename") ).Content.ReadAsStringAsync().Result;


    return response;

}

Post request(Async)
-------------------
var json = JsonConvert.SerializeObject(person);
var data = new StringContent(json, Encoding.UTF8, "application/json");
HttpClient hp = new HttpClient();
var response = await hp.PostAsync(url, data);

string result = response.Content.ReadAsStringAsync().Result;
Console.WriteLine(result);



select * from wp_posts where post_type = 'attachment' and post_parent = 0



mysql
# remove duplicate values

delete
from (
  SELECT
  lng,
  title,
  row_number() over( PARTITION by lng order by lng) rownnumber
  FROM cheatSheet
  order by lng
) where rownnumber > 1


to upload images php
# check php.ini
file_uploads = On

html
----
<form action="upload-manager.php" method="post" enctype="multipart/form-data">
<input type="file" name="photo" id="fileSelect">
</form>


php
// From $_FILES array
 $filename = $_FILES["photo"]["name"];
 move_uploaded_file($_FILES["photo"]["tmp_name"], "upload/" . $filename);


PHP - Get image from file system
//$file -> relative path (img/imgName)
$contents = file_get_contents($file);

// used to read the EXIF headers from an image file [File,Computed,EXIF,GPS,...]
//imgPath, required-sections, as_array
$exif = exif_read_data( $file, 0, true );

//get image type from exif headers
$imgType = (explode("/",$exif["FILE"]["MimeType"]))[1];

//convert image to base64
$img_base64 = base64_encode($file);

//HTML
<img src="data:<?php echo $imgType?>;base64,<?php echo $img_base64 ?>" alt="" width="200">


//format state-city-fileId.jpg
select
id,
filename,
imgpath,
type,
substring(filename,1,instr(filename,'-') -1) as state,
substring(substring(filename,instr(filename,'-') +1), 1, instr(substring(filename,instr(filename,'-') +1),'-') -1 )as city
from(
  select
  id,
  guid,
  SUBSTRING(guid,INSTR(guid,'wp-content')) as imgpath,
  substring_index(guid,'.',-1) as type,
  substring(substring_index(guid,'/',-1) ,1, (instr(substring_index(guid,'/',-1) ,'.') -1) ) as filename
  from wp_posts
  where post_type = 'attachment'
  and post_parent = (select id from wp_posts where post_name = 'asp')
)as tb


mysql
change max_allowed_packet size
- go to etc/my.cnf
- search for field and change value (500000 = 500M)
    [mysqld]
  - max_allowed_packet = 500M


  select * from wp_posts
  where post_type = 'attachment'
  and post_parent in (select id from wp_posts where post_name = 'asp')



  create view  asp_imgview as
  SELECT
  i.id,
  i.filename,
  i.image_blob,
  type ,
  case
    when (trim(lower(s.abbr)) = i.state ) then 'US'
    else null
  end as view_country,
  s.abbr as state,
  s.name as img_alt,
  i.city,
  case
    when (i.lat is null) then s.lat
    else i.lat
  end as view_lat,
  case
    when (i.lng is null) then s.lng
    else i.lng
  end as view_lng,
  i.ts,
  i.exid
  FROM images i
  left join states s on trim(lower(s.abbr)) = i.state

  SELECT
  i.*,
  s.abbr
  FROM images i
  left join states s on trim(lower(s.abbr)) = i.state


select project,
year,
count(commit) as commits,
min(dtime) as firstCommit,
max(dtime) as lastCommit
from git_data_view
where year in (select max(year) from git_data_view)
group by project , year ;




curl -d text=asdasd http://text-processing.com/api/sentiment/
{"probability": {"neg": 0.50955199890675162, "neutral": 0.59508906140405482, "pos": 0.49044800109324838}


git log --after "2020-08-25" --before "2014-02-02"


git log --after "2020-08-25" > commits.txt


//Opens File or creates one
$myfile = fopen("newfile.txt", "w") or die("Unable to open file!");
$txt = "John Doe\n";
fwrite($myfile, $txt);
fclose($myfile);

//Reads File
$myfile = fopen("webdictionary.txt", "r") or die("Unable to open file!");
// Output one line until end-of-file
while(!feof($myfile)) {
echo fgets($myfile) . "<br>";
}
fclose($myfile);


//Edits file
$file = 'filename.txt';
file_put_contents($file,str_replace('find','replace',file_get_contents($file)));




git log > commits.txt
git commit --amend
git commit -a -m ""
git reset --hard
git checkout fileName
git checkout *
git checkout <commit_hash>
git add *

//Adds modified and deleted files
git add -A


//Copy to File
git log --after "Tue Aug 25 19:22:52 2020" > file.txt

//From current repo
git log .

//From current repo to append File
git log . --after "Sun Feb 21 01:25:49 2021" >> file.txt


//append to file -- Pretty-Format

%H = commit hash
%n = newline
%an = author name
%ae = author email
%ad = author date
%s = commit

git log  --pretty=format:"%H %n %an <%ae> %n %ad %n %s %n PHP" --after "dt" . >> file.txt





//Bash - get folder name w/o path
${PWD##*/}



#!/bin/bash
code

#Runs bash file
sh bashFile.sh args

#Bash - get folder name w/o path
${PWD##*/}

#Check for arguments
if [$1 -eq '']
then

else

fi


#Arrays
arrayname=""

#Array length
len=${#arrayname[@]}

#For-loop
for (( i=0; i<$len; i++ ));
do
  echo ${arrayName[$i]}
done

#clears file content
> file.txt

#Appends to file
"" >> file.txt

#Variables
varName=""
echo $varName



#report-data
sh generate-file.sh "Tue Aug 25 19:22:52 2020"


this.$root.$emit('eventing', this.chartObj)



To use bootstrap-vue
--------------------
npm i bootstrap-vue --save
npm i @popperjs/core --save

then on component / main.js / App.vue

import Vue from 'vue'

import { BootstrapVue } from 'bootstrap-vue'
Vue.use(BootstrapVue)





document.querySelector('#dropdown-1 button').innerText = 2020
var lst = document.createElement('li')
lst.datasets

<li role="presentation">
  <a role="menuitem" href="#" target="_self" class="dropdown-item">
    First Action
    </a>
</li>

//Environment Variable - vue

console.log(process.env)
process.env.NODE_ENV == development | production


//React
console.log(process.env)
process.env.NODE_ENV == development | production

//Angular
import { environment } from '../environments/environment';

console.log(environment)
environment.production


Angular http.get Request
import { HttpClient } from '@angular/common/http';


  constructor(http:HttpClient) {
    http.get("url")
    .subscribe(data => {

      console.log(data)

      })
    }

  or

  http: HttpClient

  constructor(){
    this.http.get("url")
    .subscribe(data => {

      console.log(data)

      })
  }



ionic
npm install -g @ionic/cli

//templateType = blank,tabs,sidemenu
ionic start projectName templateType

cd projectName
ionic serve

//web-app
ng add @angular/pwa

//capacitor
npm i @capacitor/core --save

//pwa-elements
npm install @ionic/pwa-elements --save


On main.ts
----------

import { defineCustomElements } from '@ionic/pwa-elements/loader';

// Call the element loader after the platform has been bootstrapped( Bottom of page)
defineCustomElements(window);


// IE polyfills
npm install --save classlist.js
npm install --save web-animations-js

//add them on polyfills.ts
import 'classlist.js';
import 'web-animations-js';

//and main.ts
import './polyfills'





ionic troubleshooting
when getting an ion element is not a angular component and the ionic module has been added
then add the component module to app.module

imports: [componentNameModule]




http://rcsproductions.us/assets/icon/cropped-logo.png

https://ionicons.com/



ionic - to create components
-----------------------------
ionic g c folder/componentName
ionic g module folder/componentName

open module file
- import component and ionic module
  import {componentNameComponent} from './componentName.component'
  import { IonicModule } from '@ionic/angular';

  @NgModule({
    imports: [CommonModule,IonicModule],
    declarations: [componentNameComponent],
    exports:[componentNameComponent]
  })


to add custom components
-------------------------

open module file

import {componentNameModule} from '../folder/componentName.module'

imports: [ componentNameModule ]

opne html file
<app-componentName tab_header="works"></app-componentName>


css variables
:root{
  --varname: value;
}


.css-class{
  color: var(--varname)
}


  <ion-fab vertical="top" horizontal="left" slot="fixed"></ion-fab>


Ionic
add a custom style.css

index.html
  <link rel="stylesheet" href="assets/css/styles.css">

Global.scss
  //custom styles
  @import "assets/css/styles.css"


linux
cd /etc/httpd/conf
cd /var/www/html

virtualhost
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/5/html/deployment_guide/s1-apache-virtualhosts






cd /temp
cd /etc/httpd/conf
cd /var/www/html


Html
----
<ion-button (click)="presentActionSheet()">Action Sheet</ion-button>
<ion-button (click)="presentAlert()">Alert</ion-button>


.ts (Angular)
-------------
//ActionSheetController
import { ActionSheetController } from '@ionic/angular';

async presentActionSheet() {
  const actionSheet = await this.actionSheetController.create({
    header: 'Albums',
    cssClass: 'my-custom-class',
    buttons: [
      {
      text: 'Delete',
      role: 'destructive',
      icon: 'trash',
      handler: () => {
        console.log('Delete clicked');
      }
    }, {
      text: 'Share',
      icon: 'share',
      handler: () => {
        console.log('Share clicked');
      }
    }
  ]
  });
  await actionSheet.present();
}//action-sheet

//alert
import { AlertController } from '@ionic/angular';

async presentAlert() {
  const alert = await this.alertController.create({
    cssClass: 'my-custom-class',
    header: 'Alert',
    subHeader: 'Subtitle',
    message: 'This is an alert message.',
    buttons: ['OK']
  });

  await alert.present();
}


.vertical-align{
  position: absolute;
  left: 0;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
}

.vertical-align{
  display:flex;
  align-items:center;
  justify-content:center;
}


    Setup websites on different port numbers (Win)

    AWS
    ------------
    Open up port


    Windows Firewall & advanced security
    ------------------------------------
    click on inbound rules
    add new rule
    add port number
    allow connections from public/private/domain rules
    give it a name / description
    ok

    Open IIS Manager
    ----------------

    In the Connections pane, Add Web Site.

    In the Add Web Site dialog box
      * Type a friendly name for your Web site in the Web site name box.

      * Click Select if you want to select a different application pool than the one listed in the Application Pool box.

      * In the Physical path box, click the browse button to navigate the file system to find the folder.


      * Select the protocol (http/https)

      * The default value in the IP address box is All Unassigned.

      * Type a port number in the Port text box.

      * Optionally, type a host header name for the Web site in the Host Header box.



      linux - virtualhost (Site: mysitedomain.com)

      AWS / Firewall (Free up port)

      Listen 80
      Listen 8080

      <VirtualHost *:80>
        ServerName rcsproductions.us
        DocumentRoot "/temp/"
      </VirtualHost>

      <VirtualHost *:8080>
        ServerName rcsproductions.us
        DocumentRoot "/var/www/html/"
      </VirtualHost>


      update git_data
      set dt = replace(dt,'-0400','')
      where dt like '%-%'


    <!-- routerLink="/tabs/tab2" -->
    chrome://settings


deploy ionic (subfolder)
ionic  build --base-href=/ionic/ --prod

angular.json
"options": {
  "outputPath": "www",
  "baseHref": "/ionic/",


  chrome://settings/content

  view permissions and data stored acrros sites

chrome://flags/#unsafely-treat-insecure-origin-as-secure
Enter url in the textarea
Choose Enabled in the select option
relaunch


Ionic / Capacitor reference
https://ionicframework.com/docs/api/searchbar
https://ionicframework.com/docs/theming/colors
https://ionicframework.com/docs/v3/theming/css-utilities/
https://capacitorjs.com/docs/apis/camera


Windows Server
web.config

<directoryBrowse enabled="false" />
    <defaultDocument>
      <files>
        <clear />
        <add value="index.aspx" />
        <add value="Default.htm" />
        <add value="Default.asp" />
        <add value="index.htm" />
        <add value="index.html" />
        <add value="iisstart.htm" />
        <add value="default.aspx" />
        <add value="index.php" />
      </files>
    </defaultDocument>
  </system.webServer>

  ASP

  Cross Domain (CORS)
  <% Response.AppendHeader("Access-Control-Allow-Origin", "*"); %>
  <% Response.AppendHeader("content-type", "application/json"); %>


Linux
get process id

ps aux | grep mysqld

Linux
Force shutdown and restart mysql/mariadb

- Get PID from either
  - sudo systemctl status mariadb
  - ps aux | grep mysqld

- sudo kill -9  pid
- sudo systemctl restart mariadb


//mysql      {44239}  0.9  5.5 317212 45968 ?
sudo kill -9 $(ps aux | grep mysqld | awk '{print $2}' | head -1)
sudo systemctl restart mariadb



JS equivalent to echo / print
document.write("<div></div>")


PHP Redirect
header('Location: page1.php');

html
<meta http-equiv="refresh" content="time; URL=new_url" />

Linking folders relative to path
href="/folderName"

JS
// Simulate a mouse click:
window.location.href = "new_url";

// Simulate an HTTP redirect:
window.location.replace("new_url");

ASP
<%
Response.Redirect "new_url"
%>

js
sort by value

const list = [
  { color: 'white', size: 'XXL' },
  { color: 'red', size: 'XL' },
  { color: 'black', size: 'M' }
]

list.sort((a, b) => (a.color > b.color) ? 1 : -1)


Angular http
import { HttpClient } from '@angular/common/http';

constructor(http: HttpClient){
http.get(`${gd.apiUrl}/content-builder.php?type=angular`)
.subscribe(
  data => {
    this.content = Object.keys(data).map(function(key) {
         return data[key]

      })

  },
  err => {
    console.log(err)

  }

)
}


JS Set()

var uid = new Set()

while( uid.size < array.length){
  uid.add(this.getRandomNumber(1000))
}

//iterator
const it = uid.values();

//value
ic.map( icon => icon.rn = it.next().value )


// sort by datetime ,  numbers
array.sort(function(a,b){
  // Turn your strings into dates, and then subtract them
  // to get a value that is either negative, positive, or zero.

  return new Date(a.date) - new Date(b.date); //ascending
  //return  a.num - b.num //numeric
});

//sort by string
reportArr.sort( (a,b) => {
  return  a.project.localeCompare(b.project);
})

js common.js
------------
module.exports =
const variable = require('')

es6
----
import {Variable} from ''

export { Variable }



// last day of month
( new Date(year, month , 0) ).getDate()

vuejs charts

//chart dataset []
this.$data._chart.config.data.datasets[0].data

eslint - configuration
either package.json or eslintConfig.json

"rules": {
  "no-debugger": 0,  // 0 -> off , 1 -> warn , 2 -> error
  }


ASP.Net

Razor pages

.razor files
- they may contain page routing , html and code

@page "/pagename"

<h1>Pagename</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}

ASP.Net

Blazor pages

- Shared / Partial pages
  - no need to prefix them with underscore

Parent Page (index.razor)
-----------
@page "/"

<SurveyPrompt Title="How is Blazor working for you?" />


Parial Page (SurveyPrompt.razor)
-----------
<div class="alert alert-secondary mt-4" role="alert">
    <h1>@Title</h1>
</div>

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public string Title { get; set; }
}




mysql pivot table
- Use case statements to get values
- Use row_number( partition by   order by) to create a group by clause
- Use aggregate functions min/max to get values

select
rn,
max(Doctor) as Doctor,
max(Professor) as Professor,
max(Singer) as Singer,
max(Actor) as Actor
from(
  select
  row_number() over (partition by occupation order by name) as rn,
  case
    when o.occupation = 'Doctor' then o.name
  end
  as Doctor,

  case
    when o.occupation = 'Professor' then o.name
  end
  as Professor ,

  case
    when o.occupation = 'Singer' then o.name
   end
  as Singer ,

  case
    when o.occupation = 'Actor' then o.name
  end
  as Actor
  from tmpDB o

)as tb
group by rn



Sql Server Pivot

SELECT
first_column AS <first_column_alias>,
[pivot_value1], [pivot_value2], ... [pivot_value_n]
FROM
(<source_table>) AS <source_table_alias>
PIVOT
(
 aggregate_function(<aggregate_column>)
 FOR <pivot_column>
 IN ([pivot_value1], [pivot_value2], ... [pivot_value_n])
) AS <pivot_table_alias>;



SQL Server
----------

Temp tables


IF OBJECT_ID('tempdb..#nums') IS NOT NULL DROP TABLE #nums
create table #nums(
 num int
)

or
drop table if exists #nums
create table #nums(
 num int
)



insert into #nums
select 0

select * from #nums


//variables
DECLARE @Counter INT
SET @Counter=1


//While loop
while (@Counter < 10)
begin
 set @Counter =  @Counter + 1
	insert into #nums
	select @Counter

end


SQL Server - string concat
select STUFF(
                 (SELECT ',' + name FROM table_1 FOR XML PATH ('')), 1, 1, ''
               )


SQl Server - get prime numbers

               SET NOCOUNT ON

               delete from nums

               DECLARE @Counter INT, @Idx INT,  @Size INT
               SET @Counter=1
               SET @Size = 10



               while (@Counter < @Size)
               begin
                 set @Counter =  @Counter + 1
                 set @Idx = 2




               	while( 1=1)
               	begin

               	insert into nums(num,idx,modulo)
               	select @Counter,@Idx, (@Counter % @Idx)


               		if(@Idx  = @Counter)
               			begin
               				break
               			end

               		set @Idx = @Idx + 1

               	end
               end

               delete from nums  where num = idx
               delete from nums where num in (select distinct num from nums where modulo = 0)

               select 2 as num
               union all
               select distinct num from nums



ASP.Net
-------


dynamic obj = JsonConvert.DeserializeObject(output);

content = obj.First.content;


//disable warning

#pragma warning disable error/warning # (found on error window)


//checking for environment dev/prod
using Microsoft.Extensions.Configuration;
using Microsoft.AspNetCore.Hosting;


public string apiUrl;

constructor(IConfiguration configuration, IWebHostEnvironment env){
   Configuration = configuration;
   if (env.EnvironmentName == "Development")
   {
       apiUrl = Configuration["ApiUrl:dev"];
   }
   else
   {
       apiUrl = Configuration["ApiUrl:prod"];
   }
}


ES6 Import - Browser based

.html
-----
<script src="scripts/main.js" type="module"></script>

main.js
-------
import {module} from './modulename'


Commonjs Import
---------------

- Download requirejs

  - HTML
  <script data-main="scripts/main.js" src="scripts/require.js"></script>

  main.js
  -------

  function fn(){

    //scripts/jsFileName.js

    requirejs(["jsFileName"], function(util) {
      console.log(util)
    });

  }

  Asp - Razor Pages
  Get Domain Name
   - from cshtml.cs

     public void OnGet(){
         var domainName = Request.Host.Value
     }

   - from cshtml

     @{
      var domainName = $"{Context.Request.Scheme}://{Context.Request.Host}";
     }



     <div class="col-md-12">
         <div class="row">
             <div class="container bg-dark rounded">
                 <div class="col-md-12">
                     <div class="bg-light m-4 p-4 rounded">
                         @Html.Raw(Model.content)
                     </div>
                 </div>
             </div>
         </div>
     </div>





     https://www.hackerrank.com/challenges/sql-projects/problem

     You are given a table, Projects, containing three columns: Task_ID, Start_Date and End_Date. It is guaranteed that the difference between the End_Date and the Start_Date is equal to 1 day for each row in the table.


     drop table if exists projects
     create table projects(
      project int null,
      task_id int,
      start_date date,
      end_date date
     )

     INSERT INTO projects (Task_ID, Start_Date, End_Date) VALUES
     (1, '2015-10-01', '2015-10-02'),
     (2, '2015-10-02', '2015-10-03'),
     (3, '2015-10-03', '2015-10-04'),
     (4, '2015-10-13', '2015-10-14'),
     (5, '2015-10-14', '2015-10-15'),
     (6, '2015-10-28', '2015-10-29'),
     (7, '2015-10-30', '2015-10-31');

     DECLARE @Counter INT
     DECLARE @Size INT
     DECLARE @dt1 Date
     DECLARE @dt2 Date
     DECLARE @Project int

     SET @Counter=2
     SET @Size = (select count(*) from projects)
     SET @Project = 1

     //While loop
     while (@Counter <= @Size)
     begin

       set @dt1 = (select start_date from projects where task_id = @counter -1)
       set @dt2 = (select start_date from projects where task_id = @counter)


       if ( datediff(@dt2 - @dt1) = 1  )
       begin
         update projects set project = @Project where task_id = @counter -1
       end

       else

         update projects set project = @Project where task_id = @counter -1
         set @project = @project + 1

       set @Counter =  @Counter + 1

     end





 mysql get row index
 SET @rank=0;
 SELECT
 @rank:=@rank+1 AS rank,
 *
 from tablename


---------


JS infinite loop
while (true) {
    //your code
}



JS
remove duplicates from array and obj array



arr.filter( (value,idx) => arr.indexOf(value) !== idx  )
arrObj.filter( obj,idx) =>  arrObj.findIndex(i => i.knownTopics === obj.knownTopics) !== idx)



"https://leetcode.com/problems/zigzag-conversion/"
function funNums(){

  var s = "PAYPALISHIRING", numRows = 4
  var strArr = [],
  iteration = 0,
  row = 0


  for(var i=0; i < s.length; i++){

    if( (i ) % numRows == 0){
      iteration++
      row = 0
    }


    //strArr[row++][iteration-1] = s.substr(i , 1)


    console.log(i, row++ ,iteration-1,s.substr(i , 1))
    //console.log( row++,iteration)

    // for(var j=0; j < numRows; j++){
    //
    //   console.log("iteration",iteration)
    //   console.log(s.substr(i + iteration++,1))
    // }


  }

  // strArr[0][0] = 'a'
  // strArr[0][1] = 'a'

  return strArr

}


Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.

Notice that the solution set must not contain duplicate triplets

function funNums(){

  var nums = [-1,0,1,2,-1,-4],
  sets = []

  for(var i=0; i < nums.length;i++){

    for(var j=0; j < nums.length; j++){

      if(i != j && i < j){


        for(var k=0; k < nums.length; k++){

          if( k != i && k != j )
          sets.push({
            values: [nums[i] ,nums[j] ,nums[k] ].sort( (a,b) => a-b).join(' '),
            sum: nums[i] +nums[j]  + nums[k]
          })
        }


      }


    }



  }

  nums = sets.filter(a => a.sum == 0).map( a => a.values)
  var noDups = new Set()

  for(var i =0 ; i< nums.length; i++){

    noDups.add(arr[i])
  }

  [...noDups.values()]

  return sets


}

Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.

A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.

function funNums(){

  var digits = {
    '2':['a','b','c'] ,
    '3':['d','e','f'] ,
    '4':['g','h','i'] ,
    '5':['j','k','l'] ,
    '6':['m','n','o'] ,
    '7':['p','q','r','s'] ,
    '8':['t','u','v'] ,
    '9':['w','x','y','z']

  },
  nums = '234'.split(''),
  numsArr = [],
  result = []



  for(var i=0; i < nums.length; i++){

    numsArr.push(digits[ nums[i].toString() ] )

  }


  console.log(numsArr)

  if(numsArr.length == 1)
    result = numsArr[0]
  else {
    for(var i=1; i < numsArr.length ;i++){

      //result = numsArr[i]
      if( i == 1){
        result = letterCombinations(numsArr[0],numsArr[i]).split(' ').filter( r => r != '')
        continue;
      }



       result = letterCombinations(result,numsArr[i]).split(' ').filter( r => r != '')
    }
  }







  return result


}

function letterCombinations(arr1,arr2){

  var retStr = ''
  for(var i=0; i < arr1.length;i++){

    for(var j=0; j < arr2.length; j++ ){
      retStr +=`${arr1[i]}${arr2[j]} `




    }
  }
  return retStr
}


XAMPP
Create VirtualHost

sudo vi /etc/hosts
127.0.0.1    localhost projectName



sudo vi /Applications/XAMPP/xamppfiles/etc/httpd.conf
# Virtual hosts
Remove #
Include /Applications/XAMPP/xamppfiles/etc/extra/httpd-vhosts.conf



sudo vi /Applications/XAMPP/xamppfiles/etc/extra/httpd-vhosts.conf
<VirtualHost *:80>
  DocumentRoot /Applications/XAMPP/xamppfiles/htdocs
  ServerName localhost
</VirtualHost>

<VirtualHost *:80>
  DocumentRoot /projectPath
  ServerName projectName
  <Directory "/projectPath">
    Options FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
</VirtualHost>


Composer
Installation

Download composer.phar file
- move it to a users directory
  /Users/username/.local/bin
  sudo chmod 755 composer.phar

Create alias
  - ~/.profile or ~/.bash_profile
    alias composer="php /Users/username/.local/bin/composer.phar"

Reset Terminal
Source ~/.profile
composer -v

Laravel
Installation

Download composer

composer create-project laravel/laravel example-app
cd example-app
php artisan serve



Laravel
Deploy to server

- copy files to server
- run composer install
- create virtualhost
<VirtualHost *:80>
  ServerName example.com
  DocumentRoot /var/www/html/example-project/public
  <Directory /var/www/html/example-project/public/>
      AllowOverride All
      Require all granted
  </Directory>
</VirtualHost>


Environment Variables
$_ENV['APP_BASE_PATH']

create blade components

php artisan make:component componentName

html -> resources/views/components/componentName
php -> app/view/component/componentName

on any .blade.php file
<x-componentName />


Get css/js from public folder

href='{{asset('/css/font-awesome.min.css')}}'


<div class="relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center py-4 sm:pt-0">
    @if (Route::has('greeting'))
        <div class="hidden fixed top-0 right-0 px-6 py-4 sm:block">
            @auth
                <a href="{{ url('/home') }}" class="text-sm text-gray-700 underline">Home</a>
            @else
                <a href="{{ route('login') }}" class="text-sm text-gray-700 underline">Log in</a>

                @if (Route::has('register'))
                    <a href="{{ route('register') }}" class="ml-4 text-sm text-gray-700 underline">Register</a>
                @endif
            @endauth
        </div>
    @endif

</div>


interpolation
<div class="alert alert-{{ $type }}">
    {{ $message }}
</div>

Passing Data from php to blade component file

public $year;

public function __construct()
{
    $this->year = date('Y');
}
public function render()
{
    $value = ''
    return view('components.footer',['year'=> $value]);

    or

    return view('components.footer')->with('year',$this->year);
}

Passing data to external component

From blade view
<x-componentName  :value="$value" field="adasda"/>



ComponentName.php
-----------------
public $value; //php variable / expression
public $field; // string

public function __construct($value, $field)
{
    $this->value = $value;
    $this->field = $field;
}

ComponentName.blade.php
-----------------------
{{$value}}


ternary operator
{{$year ?? ''}}


Within blade / html files
@php
    echo '<pre>';
      var_dump($variable);
    echo '</pre>';
@endphp

full path
<a href="{{ url('/home') }}">Home</a>

DB connection
- configure environment variables .env
- verify database.php config/database.php

@php
    use Illuminate\Support\Facades\DB;


    $contents = DB::select('SELECT * FROM app_content_view');


@endphp

@foreach ($contents as $content)
    <p>{{ $content->post_name }}</p>
@endforeach


PHP
Functions
//creates unique array from array object by field
array_unique(array_column($arr, 'fieldName'));


array_push(  $arr, 'someValue')


//filter_by_value
function filter_by_value ($array, $index, $value){
        if(is_array($array) && count($array)>0)
        {
            foreach(array_keys($array) as $key){
                $temp[$key] = $array[$key][$index];

                if ($temp[$key] == $value){
                    $newarray[$key] = $array[$key];
                }
            }
          }
      return $newarray;
    }

php
Split on newline
explode("\n", $str)

multiline
$str =<<<EOT

EOT;




Express
npm install express --save

create server.js


server.js
--------
var express = require('express');
var app = express();

//Get - Page request
app.get('/', function (req, res) {
   res.send('Hello World');
})

//post request
app.post('/', function (req, res) {res.send('Hello POST')})

var server = app.listen(8081, 'localhost',function () {
   var host = server.address().address
   var port = server.address().port

   console.log("Example app listening at http://%s:%s", host, port)
})

node server.js




Serving Static Files
app.use(express.static('public'));

node_modules
server.js
public/images

http://127.0.0.1:8081/images/logo.png


var express = require('express');
var app = express();
app.use(express.static('public'));


Passing Json data

var fs = require("fs");

app.get('/pageName', function (req, res) {
   fs.readFile( __dirname + "/" + "users.json", 'utf8', function (err, data) {
      console.log( data );
      res.end( data );
   });
})


NodeJs - MongoDB

Installation
https://www.mongodb.com/try/download/community
Download Tar file
Untar

sudo cp mongodb/bin/* /usr/local/bin/
sudo ln -s  mongodb/bin/* /usr/local/bin/
sudo mkdir -p /usr/local/var/mongodb
sudo mkdir -p /usr/local/var/log/mongodb


mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork

Verify that MongoDB has started successfully
ps aux | grep -v grep | grep mongod

mongo


npm install mongodb --save


var MongoClient = require('mongodb').MongoClient;
var url = "mongodb://localhost/mydb";

MongoClient.connect(url, function(err, db) {
  if (err) throw err;
  console.log("Database created!");
  db.close();
});

MongoClient.connect(url, function(err, db) {
  if (err) throw err
  else{

    var dbo = db.db("mydb")

    //list collections
    dbo.listCollections().toArray(function(err, collInfos) {
      console.log(collInfos)
    });

    //insert
    var someObject = require('./public/data.json')
    dbo.collection("cheatsheet").insertMany( someObject,function(err, res) {
      if (err) throw err;
      console.log("Collection created!");
      db.close();
    })

    //select
    //.find().limit(number)
    // find().sort({fieldName: 1}) // asc 1, desc -1
    dbo.collection("cheatsheet").find({}).toArray(function(err, result) {
      if (err) throw err;

      res.send(JSON.stringify(result));
      db.close();
    })

    //delete collection
    dbo.collection("collectionName").drop(function(err, delOK) {
      if (err) throw err;
      if (delOK) console.log("Collection deleted");
      db.close();
    });

    //update
    var myquery = { fieldName: 'value'};
    var newvalues = {$set: {fieldName: "newValue"} };

    //dbo.collection("customers").updateOne()
    dbo.collection("customers").updateMany(myquery, newvalues, function(err, res) {
    if (err) throw err;
    console.log(res.result.nModified + " document(s) updated");
    db.close();
    });

    //delete
    var myquery = { fieldName: 'value'};
    dbo.collection("customers").deleteMany(myquery, function(err, obj) {
        if (err) throw err;
        console.log(obj.result.n + " document(s) deleted");
        db.close();
      });

      dbo.collection('collectionName').aggregate([
      { $lookup:
       {
         from: 'otherCollection',
         localField: 'collection_id', //collectionName.collection_id
         foreignField: '_id', //otherCollection._id
         as: 'joinedCollection'
       }
      }
      ]).toArray(function(err, res) {
      if (err) throw err;
      console.log(JSON.stringify(res));
      db.close();
      });
  }



})

JS String Search
Gets index of regex matched

var re = new RegExp(`^${variableName}`,'i')
str.search(re)


JS Reduce
Total Sum

nums.reduce( (total,num) => total + num , 0)


JS Replace special characters
str.replace(/[^a-zA-Z0-9 ]/g,'')



C#
Multi dimensional arrays
int[,] bookings = new int[3, 3]{
           { 1, 2, 10 },
           { 2, 3, 20 },
           { 2, 5, 25 }
       };


size
bookings.GetLength(0)


//Iterate through all values in multi dimensional array
foreach(var item in bookings)
{
    if(item < 0)
    {
        arrLst.Add(item);
    }
}

Concat Array to ArrayList

using System.Collections;

ArrayList myArrayList = new ArrayList();
myArrayList.AddRange(arr);


C#
Split String to Array
string[] strArr = "2003-03-01".Split("-");

Convert String to Array
"asdad".ToArray()


Datetime
string[] strArr = "2003-03-01".Split("-");
DateTime initDay = new DateTime(Convert.ToInt32(strArr[0]), 1, 1);
DateTime dt = new DateTime( Convert.ToInt32(strArr[0]) , Convert.ToInt32(strArr[1]), Convert.ToInt32(strArr[2]) );

Date Substraction

(dt - initDay)
.TotalDays
.TotalHours


ArrayList
Get IndexOf and RemoveAt

ArrayList strArr = new ArrayList();

//From Array to ArrayList
strArr.AddRange(arr);

int idx = strArr.IndexOf(value);
strArr.RemoveAt(idx);


Unique Elements

int[] arr = new int[] { 1, 1, 3, 6, 10, 15 };
HashSet<int> hs = new HashSet<int>(arr);

Unique Array Elements
int[] arr = new int[] { 1, 1, 3, 6, 10, 15 };
int[] uniqueArr = new HashSet<int>(arr).ToArray();


C# Random Numbers

new Random().Next(minVal, maxVal))



ArrayList to Array

using System.Linq;

int[] myArray = nums.Cast<int>().ToArray();

//Object type array
var numArr = nums.ToArray();


StringBuilder Object

using System.Text;
StringBuilder sb = new StringBuilder("Hello World!");


C#
Class Syntax

class ClassName
   {
       public int field;

       public ClassName(int field)
       {
           this.field = field;

       }


   }


c# Linq


//Get elements that meet criteria

using System.Linq;

int[] arr = arr1.Where(n => n == arr2[i]).ToArray();

//Get Elements not in array
arr1.Except(arr2)


//filter by criteria
Where

//sort by field
OrderByDescending
OrderBy

//select single column
Select


C# Abstract Class Syntax

abstract class absClass
    {

        public string funcName()
        {
              string str = "";
              return str;
        }

        public abstract void abstractFuncName();

    }

    class Program:absClass
    {

        //Abstract function implementation
        public override void abstractFuncName(){
        }

        static void Main(string[] args)
        {

            Program pg = new Program();

            string value = funcName();
            pg.abstractFuncName()



        }
    }



C# Interface Syntax

interface IClassName
{
    public void interfaceFunc();
}

    class Program: IClassName
    {

        //implementation
        public void interfaceFunc()
        {
        }

        static void Main(string[] args)
        {

            Program pg = new Program();

            pg.interfaceFunc()

        }
    }



C# Select Row / Col from a multidimensional array

int rowIndex = value;
Enumerable.Range(0, arr.GetLength(0))
                .Select(x => matrix[ rowIndex,x ])
                .ToArray();


int colIndex = value;
Enumerable.Range(0, arr.GetLength(0))
                .Select(x => matrix[ x,colIndex ])
                .ToArray();



ArrayList Insert Method

result.Insert(idx, value);


C# HasTable
Hashtable htmlParser = new Hashtable()
{
    { "&quot;","\""},
    { "&apos;","'"},
    { "&amp;","&"},
    { "&gt;",">"},
    { "&lt;","<"},
    { "&frasl;","/"},
};

StringBuilder text =  new StringBuilder("x &gt; y &amp;&amp; x &lt; y is always false");

//iterating through elements
foreach (DictionaryEntry entry in htmlParser)
{
    text.Replace($"{entry.Key}", $"{entry.Value}");
}


Cast ArrayList to type Array

using System.Linq;

int[] nums = arrList.Cast<int>().ToArray();



AWS Lambda

Create Function
- use blueprint
  - microservice-endpoint-http
- name the function
- create a new role with basic permissions

- API Gateway trigger
  - create an API
  - Rest API
  - Security: Open

- Create
  - Edit code

    const AWS = require('aws-sdk');

    exports.handler = async (event, context) => {
    //console.log('Received event:', JSON.stringify(event, null, 2));

    let body;
    let statusCode = '200';
    const headers = {
        'Content-Type': 'application/json',
    };

    let response = JSON.stringify({
          eventType: `${event.httpMethod}`
    })

    try {
        switch (event.httpMethod) {
            case 'DELETE':
                body = response
                break;
            case 'GET':
                body = response
                break;
            case 'POST':
                body = response
                break;
            case 'PUT':
                body = response
                break;
            default:
                throw new Error(`Unsupported method "${event.httpMethod}"`);
        }
    } catch (err) {
        statusCode = '400';
        body = err.message;
    } finally {
        body = JSON.stringify(body);
    }

    return {
        statusCode,
        body,
        headers,
    };
};



//Find Endpoint for each HTTP Request
Choose "API Gateway" under "Services" in AWS.
Click on your API.
Click on "Stages".  //http Requests
Choose the stage you want to use
Now you can see the entire URL very visible inside a blue box on the top with the heading "Invoke URL"


//To delete Role
AWS Identity and Access Management (IAM)
Roles
Select and delete

//To delete Log Group
CloudWatch
Log Groups
Select
Actions -> delete log groups



C# Regex
using System.Text.RegularExpressions;

//replaces multiple whitespace into single
Regex.Replace(text, @"\s+", " ")


//String array to string
string.Join("", txtArr).Length



Justify content
----------------

string text = " practice   makes   perfect";


string[] txtArr = Regex.Replace(text, @"\s+", " ").Split(" ").Where(_x => _x != "").ToArray();

int spaceNum = (text.Length - string.Join("",txtArr).Length)/ (txtArr.Length -1);
int lastSpacing = (text.Length - string.Join("", txtArr).Length) % (txtArr.Length - 1);

ArrayList result = new ArrayList();


for(int i=0; i < txtArr.Length; i++)
{
    result.Add(txtArr[i]);

    if(i+1 != txtArr.Length)
    result.Add(addSpacing(spaceNum));
}

if(lastSpacing > 0)
{
    result.Add(addSpacing(lastSpacing));
}

// string.Join("",result.Cast<string>().ToArray())


string addSpacing(int num) {

    string space = "";
    for(int i=0; i < num; i++)
    {
        space += " ";
    }

    return space;
}



//Convert object array to string array

Array.ConvertAll(arr, _x => _x.ToString())


Python

//Check for version
python --version

//run code
python program.py

//install pip
curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py
python get-pip.py


//built-in debugger

import pdb;

pdb.set_trace()


on terminal
pp(varname) #prints the value of the expression


React class function

Inside constructor
------------------

this.func = this.func.bind(this)

Declaration
func(){}

Inside dom
 ={This.func}

 --------------------

// Arrow Function
<button  onClick={() => window.open(media.download_url, '_blank')}>


React - Fetch Data in functional component

import React,{useState,useEffect} from 'react';

function App() {

  let [state,setState] = useState([])

  useEffect( ()=>{
    axios({method:'get',url:`https://apiUrl`})
    .then( res => {
      setState(res.data.campaigns)
      //console.log(state)
    })
  },[])

  return (
    <>
    {
      state.map( (item,i)=>  )
      <div  key={item.id}>
        <div>
          <img src={icon_url} height="65" width="65" alt={item.campaign_name}/>
        </div>
      </div>
    }
    <>
  )
}

React - Scroll Horizontal plugin

npm install react-scroll-horizontal --save

import ScrollHorizontal from 'react-scroll-horizontal'


<div style={{ height: `22.7em`,textAlign:`left` }}>
  <ScrollHorizontal>
    <div>
    <img src="" height="" width="" alt="" />
    </div>
  </ScrollHorizontal>
</div>



python

//Sum of list of Dictionary
sum( item["value"] for item in result)

//Ternary operator
'true' if True else 'false'

//regex

import re

//regex term, replace string, string
varname = re.sub(r"[^0-9]","",s)


//index of string
.find()

//loop with index
for idx,value in enumerate(nums):

//filter
filter(fn, list)

scores = [70, 60, 80, 90, 50]
filtered = filter(lambda score: score >= 70, scores)

//map
map( lambda x: int(x) ,list)

//substring(from:to) , slice lists/tuple
str[:]

//creates array from string,lists and also works with associate arrays char["key"]

[char for char in str]

[ str["value"] for str in  sorted( result, key= lambda value: value["idx"] ) ]

//sort list of dictionary values.
//if descending - sorted(arr,lambda,reverse=True)
sorted(arr, key= lambda value: value["distance"])


//array to string
" ".join(arr)


C# multiline string
string str = @"




";


C#
User Defined Exceptions
throw new ArgumentException("some message");




js bracket open/close

var term = "( 5 + 8000 * 50) * ( (30/8 + 800) +3)".replace(/[^0-9()*\/+-]/g,'').split("")


doBracketExpression(term)


function doBracketExpression(term){

  var brackets = []


  for(var i=0; i < term.length;i++){
    if(term[i] == "("){
      brackets.push( {
        op:"(",
        openIdx:i+1,
        closeIdx:null,
        term:"",
        depth:-1

      })

      var counter = depth = 0
      for(var j=0; j < term.length;j++){

        if( j > i){


          if(term[j] == "("){
            counter++
            depth = counter
          }

          if( term[j] == ")"){


            if(counter == 0 ){
                var idx = brackets.length -1
                brackets[idx].closeIdx = j
                brackets[idx].depth = depth
                brackets[idx].term = term.slice(brackets[idx].openIdx ,brackets[idx].closeIdx).join("")
                break
            }

            else{
              counter--
            }

          }
        }

      }
    }
  }
}


Kotlin
-------

Function declaration

fun main(){
  println("Happy Birthday!")
}

//parameters are passed as final/constants
fun displayMessage(msg:String){}

//return value
fun roll(): Int {
       return (1..numSides).random()
}

Variable declaration
--------------------

val -> Constants
var -> any variable

implicitly
val num = 0
var name = "name"


val num:Int = 0
var name:String = "name"


String literal

var age = 5

println("You are already ${age}!")


Loops
-----
repeat(num) {
        print("=")
    }

for (item in collection) print(item)
for (item: Int in ints){}


while () {}

do {

} while ()

if statements
-------------

if(){

}
else if(){

}
else{

}

When Statement
--------------

val rollResult = (1..6).random()

when (rollResult) {
1 -> println("So sorry! You rolled a 1. Try again!")
2 -> println("Sadly, you rolled a 2. Try again!")
3 -> println("Unfortunately, you rolled a 3. Try again!")
4 -> println("You won!")
5 -> println("Don't cry! You rolled a 5. Try again!")
6 -> println("Apologies! you rolled a 6. Try again!")
}

class declaration
-----------------

fun main() {

    var num:Int =  (1..6).random()

    //instantiate class
    val randomNumber = className(num)

    println("Num = ${randomNumber.generateRandomNumber()}")
}

class className(val num: Int) {

    fun generateRandomNumber(): Int {
        return (1..num).random()
    }
}


class instantiation (parameters)
--------------------------------


class Vegetables(val toppings: List<String>)
val veg = Vegetables(listOf("cabbage", "sprouts", "onion"))


//the vararg modifier allows you to pass a variable number of arguments of the same type into a function or constructor. Only one parameter can be marked as vararg and is usually the last parameter in the list.

class Vegetables(vararg val toppings: String)
val vegetables = Vegetables("Cabbage", "Sprouts", "Onion")



Abstraction
----------

abstract class Dwelling(){

  abstract val buildingMaterial: String
  val varname:String = ""
}

class SquareCabin : Dwelling(){

  //override abstract field
   override val buildingMaterial = "Wood"
}

Inheritance
-----------

//classes are final, must use Open keyword
open class RoundHut: Dwelling() {
    override val buildingMaterial = "Straw"
}

//subclass
class RoundTower: RoundHut() {

    override val buildingMaterial = "Stone"

}



open class Item(val name: String, val price: Int)

class Noodles : Item("Noodles", 10)


fun main() {
    val noodles = Noodles()
    println(noodles.name)
    println(noodles.price)
}


with
----


//Instantiate class
val squareCabin = SquareCabin()

//with is used to access an object's members and methods without having to refer to the object once per access

with(squareCabin) {
        println("\nSquare Cabin\n============")
        println("Capacity: ${capacity}")
        println("Material: ${buildingMaterial}")
        println("Has room? ${hasRoom()}")
        println("Floor area: ${floorArea()}")
}

//regex replace
val re = Regex("[^0-9]")
val tipValue = re.replace(findViewById<RadioButton>(selectedId).getText().toString(),"")


formatting Numbers
------------------
import java.text.NumberFormat

//currency
val msg:String = NumberFormat.getCurrencyInstance().format(num)



Lists(arrays)
-------------

//read-only
val numbers: List<Int> = listOf(1, 2, 3, 4, 5, 6)
val numbers = listOf(1, 2, 3, 4, 5, 6)


//Methods
first()
last()
contains()
sorted()
reversed()


Mutable Lists
-------------

var entrees = mutableListOf(1, 2, 3, 4, 5, 6)
var entrees = mutableListOf<String>()
var entrees: MutableList<String> = mutableListOf()


//Methods
add()
addAll() - entrees.addAll(moreItems)
remove() - value
removeAt() - idx
clear()
isEmpty()

iterating through Lists
-----------------------

//lst[index]
for (value in lst) {
    println(value)
}



Override toString() method
--------------------------

 The default implementation of this method just returns the object type with a memory address for the instance


class Noodles : Item("Noodles", 10) {
 override fun toString(): String {
     return name
 }
}

-----------------------------------

Collections
-----------
Set
---
// It's a group of related items, can't be any duplicates, and the order doesn't matter.

val set1 = setOf(1,2,3)
var set2 = mutableSetOf(3,2,1)


Methods
intersect()
union()

map
---
//A map is useful when you have pairs of data, and you can identify each pair based on its key

val peopleAges = mutableMapOf<String, Int>(
        "Fred" to 30,
        "Ann" to 23
    )
println(peopleAges)


Iterators
---------

forEach
-------
//forEach uses the special identifier it


peopleAges.forEach { print("${it.key} is ${it.value}, ") }


Map
---
//applies a transformation to each item in a collection.

println(peopleAges.map { "${it.key} is ${it.value}" }.joinToString(", ") )



filter
------
//The filter() function returns the items in a collection that match, based on an expression.

peopleAges.filter { it.key.length < 4 }
words.filter { it.startsWith("b", ignoreCase = true) }



Function type / Lambda

val triple: (Int) -> Int = { a: Int -> a * 3 }

//shorthand
val triple: (Int) -> Int = { it * 3 }




Higher-order functions
----------------------
//This just means passing a function (in this case a lambda) to another function, or returning a function from another function.


val and const usage
-------------------

val keyword must be used to declare for run time values and const keyword must be used to declare compile time values.


Android (Kotlin)
----------------

App Setup
---------
Android is XML Based
- To load an activity
  - Create one under res(resource)/Layout
  - Load this xml file in fileName.KT

    - override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        //Loads XML activity
        setContentView(R.layout.activity_main)
    }

app -> src -> main -> MainActivity (kotlin/java)
                      * Res/Layout/activity_main.xml (Main layout)

AndroidManifest.xml
* This file includes all activities and their intents

//Sets up main activity and icon
<activity android:name=".MainActivity">
    <intent-filter>
        <action android:name="android.intent.action.MAIN" />

        <category android:name="android.intent.category.LAUNCHER" />
    </intent-filter>
</activity>

Create Android emulator / Virtual Device (AVD)

Tools -> AVD Manager


Pulling data from resource directory (res)
------------------------------------------

//drawable - Images
android:roundIcon="@mipmap/ic_launcher_round"

//Strings
android:text="@string/main_activity"


Views and ViewGroups
--------------------

Views
-----
text, images, buttons, and many other types of elements.


ViewGroups
----------
ViewGroup is a ConstraintLayout, which helps you arrange the Views inside it in a flexible way.

//New view IDs in your XML file must be defined with the @+id prefix, which tells Android Studio to add that ID as a new resource ID.
To declare ids on views (+)
android:id="@+id/MainTextView"


to reference views based on id
android:id="@id/MainTextView"



density-independent pixels (dp) - unit of measure for distances on the screen
scalable pixels (sp) which is used when setting the size of text.


View Positioning
----------------
you can use design view
- position view where you want it
  - Click on Design view
    - Under Layout Pane
      - Position View using constraint widget
        - This uses dp (Density Pixel)


Layouts
-------

//fills whole division
android:layout_width="match_parent"

//wraps content based on its own width/height
android:layout_width="wrap_content"
android:layout_height="wrap_content"


//based on dp positioning
android:layout_height="533dp"



if using constraint layout
--------------------------

//horizontal constraint to the starting edge of the parent.
app:layout_constraintStart_toStartOf="parent"

//Below view
app:layout_constraintTop_toBottomOf="@id/textView"



//from bottom view
app:layout_constraintTop_toBottomOf="@id/MainTextView"
app:layout_constraintEnd_toEndOf="parent"


//vertical constraint
<Switch
    android:id="@+id/round_up_switch"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:checked="true"
    android:text="Round up tip?"
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintTop_toBottomOf="@id/btn" />



//margins
android:layout_marginStart="16dp"
android:layout_marginLeft="16dp"
android:layout_marginEnd="16dp"
android:layout_marginRight="16dp"

z-index (Component tree)
-----------------------

you can set positioning of z-index by moving views up and down - design view


Attributes
----------
When looking for attributes, click on search icon (Design view)


Accessibility
-------------
importantForAccessibility: yes/no

for images - Add ContentDescription


Reference Views programmatically
-------------------------------
//When you refer to resource IDs in your app code, use R.<type>.<name>; for example, R.string.roll. For View IDs, the <type> is id, for example, R.id.button.


//findViewById
val btn: Button = findViewById(R.id.button)


//add event listener
btn.setOnClickListener{
  //set event
  (Toast.makeText(this, "Dice Rolled!", Toast.LENGTH_SHORT)).show()
}




//change image source
val diceImage: ImageView = findViewById(R.id.imageView)
diceImage.setImageResource(R.drawable.dice_2)

//Accessibility
diceImage.contentDescription = "Description"


// create toast view
val toast = Toast.makeText(this, "Dice Rolled!", Toast.LENGTH_SHORT)
toast.show()


//random numbers in a range
var ranNum = (1..numSides).random()


//comments
<!-- this is a comment in XML -->

<!-- this is a
multi-line
Comment.
And another
Multi-line comment -->


//RadioGroup

<RadioGroup
   android:id="@+id/tip_options"
   android:checkedButton="@id/option_twenty_percent"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   app:layout_constraintTop_toBottomOf="@id/service_question"
   app:layout_constraintStart_toStartOf="parent"
   android:orientation="vertical">

   <RadioButton
       android:id="@+id/option_twenty_percent"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:text="Amazing (20%)" />

</RadioGroup>


//get ID from selected choice

//(RadioGroup)findViewById()
val selectedId = findViewById<RadioGroup>(R.id.tip_options).checkedRadioButtonId


//get value from selected choice
//(RadioButton)findViewById()
findViewById<RadioButton>(selectedId).getText().toString()

//clear choice
val rdGroup: RadioGroup = findViewById(R.id.tip_options)
rdGroup.clearCheck()



<Switch
  android:id="@+id/round_up_switch"
  android:layout_width="match_parent"
  android:layout_height="wrap_content"
  android:layout_marginStart="16dp"
  android:layout_marginLeft="16dp"
  android:layout_marginEnd="16dp"
  android:layout_marginRight="16dp"
  android:checked="true"
  android:text="Round up tip?"
  app:layout_constraintEnd_toEndOf="parent"
  app:layout_constraintStart_toStartOf="parent"
  app:layout_constraintTop_toBottomOf="@id/tip_options" />

val swt:Switch = findViewById(R.id.round_up_switch)
val value:Boolean = swt.isChecked



Reference views using binding
-----------------------------
* build.gradle file (under app)
  In the android section, add the following lines:
    buildFeatures {
        viewBinding = true
    }

* Press Sync Now when prompted


* on Activity file (kt)
class MainActivity : AppCompatActivity() {

  //lateinit -> promise that variable will be initialized before usage

  lateinit var binding: ActivityMainBinding

  override fun onCreate(savedInstanceState: Bundle?) {
      super.onCreate(savedInstanceState)
      binding = ActivityMainBinding.inflate(layoutInflater)

      //binding views to binding variable
      setContentView(binding.root)

      //reference views by id
      // Old way with findViewById()
      val myButton: Button = findViewById(R.id.my_button)
      myButton.text = "A button"

      // Better way with view binding
      val myButton: Button = binding.myButton
      myButton.text = "A button"

      // Best way with view binding and no extra variable
      binding.myButton.text = "A button"
  }


}

//To change theme colors

Add color values in res->values->colors.XML
Use these in res->values->themes.XML


//To use material icons
Resource Manager( Left side tab)
  Click on new (+)
  Vector assets
  Asset type - Clip art
  Click on icon next to clip art label
  choose icon
  rename it if desired
    - filenames start with ic_
  next and finish

Add Icon to ImageView
<ImageView
      app:srcCompat="@drawable/ic_round_up"


//Create Styles
Create a new file named styles.xml in the res > values directory if one doesn't already exist. Create it by right-clicking on the values directory and selecting New > Values Resource File. Call it styles.xml. The new file will have the following contents.

//Convention
name = style name (widget/app-className/component)
parent = inherits from exisiting component


Gravity controls how the content within a view will position itself. Since the actual text content doesn't take up the full 48dp in height, the value center_vertical centers the text within the TextView vertically (but does not change its horizontal position). Other possible gravity values include center, center_horizontal, top, and bottom

TextAppearance is a set of pre-made styles around text size, fonts, and other properties of text

<?xml version="1.0" encoding="utf-8"?>
<resources>
<style name="Widget.AppName.TextView" parent="Widget.MaterialComponents.TextView">
    <item name="android:minHeight">48dp</item>
    <item name="android:gravity">center_vertical</item>
    <item name="android:textAppearance">?attr/textAppearanceBody1</item>
</style>
</resources>


<TextView
    style="@style/Widget.AppName.TextView"
    ... />

or use them on themes.xml

<item name="textInputStyle">@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox</item>
<item name="radioButtonStyle">@style/Widget.TipTime.CompoundButton.RadioButton</item>
<item name="switchStyle">@style/Widget.TipTime.CompoundButton.Switch</item>



//scrollview

<ScrollView
   xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:app="http://schemas.android.com/apk/res-auto"
   xmlns:tools="http://schemas.android.com/tools"
   android:layout_height="match_parent"
   android:layout_width="match_parent">

   <androidx.constraintlayout.widget.ConstraintLayout
       android:layout_width="match_parent"
       android:layout_height="wrap_content"
       android:padding="16dp"
       tools:context=".MainActivity">

       ...
   </ConstraintLayout>

</ScrollView>


//hide keyboard on enter

fun handleKeyEvent(view: View, keyCode: Int): Boolean {
   if (keyCode == KeyEvent.KEYCODE_ENTER) {
       // Hide the keyboard
       val inputMethodManager =
           getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
       inputMethodManager.hideSoftInputFromWindow(view.windowToken, 0)
       return true
   }
   return false
}



The onKey() method takes in 3 input arguments: the view, the code for the key that was pressed, and a key event


binding.costOfServiceEditText.setOnKeyListener { view, keyCode, _ -> handleKeyEvent(view, keyCode) }


//Write log messages
Log.e(String, String) (error)
Log.w(String, String) (warning)
Log.i(String, String) (information)
Log.d(String, String) (debug)
Log.v(String, String) (verbose)


Annotations
-----------
//Annotations are useful because they add additional info to classes, methods, or parameters

import androidx.annotation.DrawableRes
import androidx.annotation.StringRes

data class Affirmation(
   @StringRes val stringResourceId: Int,
   @DrawableRes val imageResourceId: Int
)


----------------------------------------

Intents
-------

<manifest>
   <uses-permission android:name="" />
</manifest>

val sendIntent = Intent().apply {
    action = Intent.ACTION_SEND
    type = "text/plain"
    putExtra(Intent.EXTRA_TEXT, textMessage)
}
startActivity(sendIntent)

Implicit
--------

CATEGORY_APP_MAPS – launching the maps app
CATEGORY_APP_EMAIL – launching the email app
CATEGORY_APP_GALLERY – launching the gallery (photos) app
ACTION_SET_ALARM – setting an alarm in the background
ACTION_DIAL – initiating a phone call


val context = holder.view.context

val intent = Intent(context, DetailActivity::class.java)


intent.putExtra("letter", holder.button.text.toString())

context.startActivity(intent)


//DetailActivity
onCreate(){
  val letterId = intent?.extras?.getString("letter").toString()
}

Companion objects (singleton pattern)
-----------------

//Add this to make constants reusable for other classes


//DetailActivity - above onCreate
companion object {
  const val LETTER = "letter"
}

onCreate(){
  val letterId = intent?.extras?.getString(LETTER).toString()
}

//MainActivity
intent.putExtra(DetailActivity.LETTER, holder.button.text.toString())






//create uri object
-------------------

val queryUrl: Uri = Uri.parse("http://")

//opens up browser
val intent = Intent(Intent.ACTION_VIEW, queryUrl)
context.startActivity(intent)



Activity lifecycle
------------------

resumed -> onResume, onPause
started -> onStart,onRestart  onStop
created -> onCreate, onDestroy
  * initialized
  * destroyed

onStart() is paired with a corresponding onStop() lifecycle method. If the user starts your app and then returns to the device's home screen, the activity is stopped and is no longer visible on screen.



onResume() to give the activity focus and make it ready for the user to interact with it.
onStart() to start it and make it visible on the screen.
onCreate() to create the app.


When your activity is no longer visible on screen, this is known as putting the activity into the background. (The opposite of this is when the activity is in the foreground, or on screen.)

When the user returns to your app, that same activity is restarted and becomes visible again.


when an app is started and onStart() is called, the app becomes visible on the screen. When the app is resumed and onResume() is called, the app gains the user focus, that is, the user can interact with the app. The part of the lifecycle in which the app is fully on-screen and has user focus is called the interactive lifecycle.

when the device is rotated and the activity is shut down and re-created, the activity starts up with default values

Configuration changes
---------------------

When a configuration change occurs, Android invokes all the activity lifecycle's shutdown callbacks. Then Android restarts the activity from scratch, running all the lifecycle startup callbacks.

When Android shuts down an app because of a configuration change, it restarts the activity with the state bundle that is available to onCreate().

As with process shutdown, save your app's state to the bundle in onSaveInstanceState()



Bundle Object
-------------
A Bundle is a collection of key-value pairs, where the keys are always strings. You can put simple data, such as Int and Boolean values, into the bundle. Because the system keeps this bundle in memory, it's a best practice to keep the data in the bundle small

override fun onSaveInstanceState(outState: Bundle) {
   super.onSaveInstanceState(outState)

   outState.putInt(KEY_REVENUE, revenue)
}



Methods
-------
putFloat()
putString()


override fun onCreate(savedInstanceState: Bundle) {

  savedInstanceState.getInt(KEY_REVENUE, 0)

}


A string that acts as the key, for example "key_revenue" for the revenue value.
A default value in case no value exists for that key in the bundle.



fragment
--------

A fragment is simply a reusable piece of your app's user interface

lifecycle
---------

INITIALIZED: A new instance of the fragment has been instantiated.

CREATED: The first fragment lifecycle methods are called. During this state, the view associated with the fragment is also created.

STARTED: The fragment is visible onscreen but does not have "focus", meaning it can't respond to user input.

RESUMED: The fragment is visible and has focus.

DESTROYED: The fragment object has been de-instantiated.


A Fragment provides many methods that you can override
------------------------------------------------------

onCreate(): The fragment has been instantiated and is in the CREATED state. However, it's corresponding view has not been created yet.

onCreateView(): This method is where you inflate the layout. The fragment has entered the CREATED state.
onViewCreated(): This is called after the view is created. In this method, you would typically bind specific views to properties by calling findViewById().

onStart(): The fragment has entered the STARTED state.
onResume(): The fragment has entered the RESUMED state and now has focus (can respond to user input).

onPause(): The fragment has re-entered the STARTED state. The UI is visible to the user

onStop(): The fragment has re-entered the CREATED state. The object is instantiated but is no longer presented on screen.

onDestroyView(): Called right before the fragment enters the DESTROYED state. The view has already been removed from memory, but the fragment object still exists.

onDestroy(): The fragment enters the DESTROYED state.


import androidx.fragment.app.Fragment

class LetterListFragment : Fragment() {

}

//on xml file

tools:context=".LetterListFragment">


.findFragmentById(R.id.navfragment)




MaterialAlertDialogBuilder
--------------------------

//if required
import com.google.android.material.dialog.MaterialAlertDialogBuilder

MaterialAlertDialogBuilder(requireContext())
   .setTitle(getString(R.string.congratulations))
      .setMessage(getString(R.string.you_scored))
      .setCancelable(false)
      .setNegativeButton(getString(R.string.exit))
      .setPositiveButton(getString(R.string.play_again))
      .show()

MutableLiveData
---------------
MutableLiveData is the mutable version of the LiveData, that is, the value of the data stored within it can be changed.

private val _currentScrambledWord = MutableLiveData<String>()


data binding
------------
* build.gradle file (under app)
  In the android section, add the following lines:

buildFeatures {
   dataBinding = true
}

//Add kotlin-kapt
plugins {
   id 'com.android.application'
   id 'kotlin-android'
   id 'kotlin-kapt'
}

//the use of @{} syntax in the assignment expression.
android:text="@{gameViewModel.currentScrambledWord}"



thread
------
//Threads require a lot of resources.

race condition
--------------
This is when multiple threads try to access the same value in memory at the same time.

fun main() {
    val thread = Thread {
        println("${Thread.currentThread()} has run.")
    }
    thread.start()
}

coroutines
----------

Job
---
A cancelable unit of work, such as one created with the launch() function.


CoroutineScope
--------------
Functions used to create new coroutines such as launch() and async() extend CoroutineScope.


Dispatcher
----------
Determines the thread the coroutine will use. The Main dispatcher will always run coroutines on the main thread, while dispatchers like Default, IO, or Unconfined will use other threads.



Object declarations
-------------------
object declarations are used to declare singleton objects


object DataProviderManager {
    fun registerDataProvider(provider: DataProvider) {
        // ...
    }
​
    val allDataProviders: Collection<DataProvider>
        get() = // ...
}

// To refer to the object, use its name directly.
DataProviderManager.registerDataProvider(...)



/**
* This data class defines a Mars photo which includes an ID, and the image URL.
* The property names of this data class are to match the names of values in JSON.
To match the types in our specific JSON response, you use String objects for all the values.
*/
data class MarsPhoto(
   val id: String,
   @Json(name = "img_src") val imgSrcUrl: String
)



imgView.load(imgUri) {
   placeholder(R.drawable.loading_animation)
   error(R.drawable.ic_broken_image)
}



gradle variables
----------------

.gradle(Android Level) under buildscript

//create variables with
ext{
  kotlin_version = "1.5.10"
}

.gradle (app level)

implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"



nullable types
--------------
//For a variable to hold a null value, it must be of a nullable type

val languageName: String? = null

//To throw a Null Pointer Exception use (!!)


Anonymous Functions
-------------------

//Return keyword is optional on single lines
val stringLengthFunc: (String) -> Int = { input ->
    input.length
}





Activities

They dictate the UI and handle the user interaction to the smart phone screen.


Services

They handle background processing associated with an application.


Broadcast Receivers

They handle communication between Android OS and applications.


Content Providers

They handle data and database management issues.



Services
--------
A service is a component that runs in the background to perform long-running operations.


<manifest>
  <application>

    <!-- Mention the service name here -->
    <service android:name=".NewService"/>

    </application>
</manifest>


import android.app.Service
import android.content.Intent
import android.os.IBinder
import android.provider.Settings

class NewService : Service() {



    // execution of service will start
    // on calling this method
    //it can be stopped explicitly using stopService() or stopSelf() methods.
    override fun onStartCommand(intent: Intent, flags: Int, startId: Int) {


    }

    // execution of the service will
    // stop on calling this method
    override fun onDestroy() {
        super.onDestroy()

    }
    //This method is mandatory to implement in android service and is invoked
    override fun onBind(intent: Intent): IBinder? {
        return null
    }
}


//MainActivity file

startService(Intent(this, NewService::class.java))
stopService(Intent(this, NewService::class.java))



LinearLayout
------------
It's a view group that aligns all children in a single direction, vertically or horizontally. You can specify the layout direction with the android:orientation attribute.

<LinearLayout
    xmlns:android="http:// schemas.android.com/apk/res/android"
    xmlns:tools="http:// schemas.android.com/tools"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    //views/components

</LinearLayout>



Create views dynamically
------------------------

val showButton = Button(this)
showButton.setText("Submit")

showButton.setOnClickListener{
  //code
}

val linearLayout = findViewById<LinearLayout>(R.id.l_layout

//Adds it to xml layout
linearLayout.addView(showButton)


Attributes of Layouts
------------------------
//center_vertical,center_horizontal
android:gravity="center_vertical"

//marginLeft,marginRight,marginTop,marginBottom
android:layout_marginLeft





Layouts
-------
FrameLayout
  By default the position is the top-left corner, though the gravity attribute can be used to alter its locations.

LinearLayout
  A LinearLayout aligns each of the child View in either a vertical or a horizontal line. It supports a weight attribute for each child View that can control the relative size of each child View within the available space.

  //vertical/horizontal
  android:orientation="vertical"

RelativeLayout
  It defines the position of each child View relative to the other views and the dimensions of the screen.


    //@id/resourceName
    android:layout_below=""

    android:layout_alignParentRight="true"
    android:layout_alignParentLeft="true"

    //@id/resourceName
    android:layout_toLeftOf=""
    android:layout_toRightOf=""


GridLayout
  the Grid Layout used a rectangular grid of infinitely thin lines to lay out Views in a series of rows and columns


listView
val adapter = ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, myStringArray)
val listView: ListView = findViewById(R.id.listview)
listView.adapter = adapter
listView.onItemClickListener = AdapterView.OnItemClickListener { parent, view, position, id ->
    // Do something in response to the click
}


send data from one activity to another
--------------------------------------

val intent = Intent(this, SecondActivity::class.java)
intent.putExtra("id_value", varName)
startActivity(intent)


//SecondActivity.kt
//intent.extras
val letterId = intent?.extras?.getString("id_value").toString()



Broadcast Receivers
-------------------
Broadcast Receivers simply respond to broadcast messages from other applications or from the system.


<manifest>

    <application

        <receiver android:name="MyReceiver" />


    </application>
</manifest>


class MyReceiver : BroadcastReceiver() {

    override fun onReceive(context: Context, intent: Intent) {
        // TODO: This method is called when the BroadcastReceiver is receiving
        // an Intent broadcast.
        throw UnsupportedOperationException("Not yet implemented")
    }
}﻿


//MainActivity
lateinit var receiver: MyReceiver()
onCreate(){
  //register broadcast
  //Intent.ACTION_AIRPLANE_MODE_CHANGED

  val filter = IntentFilter()
  filter.addAction("com.example.Broadcast")
  registerReceiver(receiver, filter)﻿



}

//to send broadcast
val intent = Intent()
intent.action = "com.example.Broadcast"
intent.putExtra("MyData", 1000)

//it is sent to indicate that the intent is to be allowed to start a component of a stopped application.

intent.flags = Intent.FLAG_INCLUDE_STOPPED_PACKAGES

sendBroadcast(intent)﻿


override fun onStop() {
    super.onStop()
    unregisterReceiver(receiver)
}



Content Providers
-----------------
A content provider component supplies data from one application to others on request.
The data may be stored in the file system, the database or somewhere else entirely.

<manifest>
  <application>
    <provider android:name="StudentsProvider"/>
  </application>
</manifest>

import android.content.ContentProvider

 class className :ContentProvider(){}

The SQLite Database
-------------------
Context.openOrCreateDatabase creates the database file which is located in the application's private data folder
SQLiteDatabase.openOrCreateDatabase can create the database anywhere your app has write access to.


context.openOrCreateDatabase() parameters
-----------------------------------------

name
----
String
The name of the database.

mode
----
FileCreationMode
Operating mode. Use 0 or Private for the default operation, WorldReadable and WorldWriteable to control permissions. Use Android.Content.Context.MODE_ENABLE_WRITE_AHEAD_LOGGING to enable write-ahead logging by default.

factory
------
SQLiteDatabase.ICursorFactory
An optional factory class that is called to instantiate a cursor when query is called.

import android.database.sqlite.SQLiteDatabase

class DataManager(context:Context){

  val db: SQLiteDatabase = context.openOrCreateDatabase(
  "dbName",
  context.Mode_Private,
  null
  )

  val createDB = "CREATE TABLE IF NOT EXISTS `dbName` (
    `Code` TEXT NOT NULL,
    `Name` TEXT NOT NULL,
    PRIMARY KEY(`Code`)
    )"

  db.execSQL(createDB)


  fun retrieveValues(){
    val cursor = db.rawQuery("SELECT * FROM tableName", null)

    var lst = mutableListOf<String>()

    if (cursor.moveToFirst()) {
        do {
            //retrieves values from query and adds them to list
            lst.add(cursor.getString(cursor.getColumnIndex("Code")))
        } while (cursor.moveToNext())
    }
    cursor.close()
  }

}





SQlite CRUD
-----------

val query = "INSERT INTO tableName (value) VALUES ('${obj.value}')"
db.execSQL(query)


prepared statements
-------------------





When override is needed on classes
----------------------------------
To add skeleton override methods to your classes in Android Studio, select Code > Override Methods or press Control+o (Command+o on Mac)


Mac
---

Android Studio -> Preferences -> General -> Auto Imports



Kotlin
------

Multiline string
val str:String =
"""



"""

//dbHelper instance of SQLiteDatabase
val db = dbHelper.writableDatabase

//insert
val values = ContentValues().apply {
    put(FeedEntry.COLUMN_NAME_TITLE, title)
    put(FeedEntry.COLUMN_NAME_SUBTITLE, subtitle)
}

// Insert the new row, returning the primary key value of the new row
val newRowId = db?.insert(FeedEntry.TABLE_NAME, null, values)

//delete
val selection = "${FeedEntry.COLUMN_NAME_TITLE} LIKE ?"
// Specify arguments in placeholder order.
val selectionArgs = arrayOf("MyTitle")
// Issue SQL statement.
val deletedRows = db.delete(FeedEntry.TABLE_NAME, selection, selectionArgs)


// New value for one column
val title = "MyNewTitle"
val values = ContentValues().apply {
    put(FeedEntry.COLUMN_NAME_TITLE, title)
}

//update
// Which row to update, based on the title
val selection = "${FeedEntry.COLUMN_NAME_TITLE} LIKE ?"
val selectionArgs = arrayOf("MyOldTitle")
val count = db.update(
        FeedEntry.TABLE_NAME,
        values,
        selection,
        selectionArgs)




//fragment

java
----
FragmentTransaction ft = getSupportFragmentManager().beginTransaction();
ft.replace(R.id.container, fragmentObject);
ft.commit();


kotlin_version
---------------
import androidx.fragment.app.FragmentTransaction

val ft:FragmentTransaction()
ft.replace(R.id.container, fragmentObject)
ft.commit()



React native
As a general rule, use props to configure a component when it renders. Use state to keep track of any component data that you expect to change over time.


Fetching data from api

//post
fetch('https://mywebsite.com/endpoint/', {
  method: 'POST',
  headers: {
    Accept: 'application/json',
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
    firstParam: 'yourValue',
    secondParam: 'yourOtherValue'
  })
});

//get
fetch('https://mywebsite.com/endpoint/')
.then((response) => response.json())
    .then((json) => {
      console.log(json)
    })
    .catch((error) => {
      console.error(error);
    });


//async await
const getMoviesFromApiAsync = async () => {
  try {
    const response = await fetch(
      'https://reactnative.dev/movies.json'
    );
    const json = await response.json();
    return json.movies;
  } catch (error) {
    console.error(error);
  }
};


XMLHttpRequest
--------------
var request = new XMLHttpRequest();
request.onreadystatechange = (e) => {
  if (request.readyState !== 4) {
    return;
  }

  if (request.status === 200) {
    console.log('success', request.responseText);
  } else {
    console.warn('error');
  }
};

request.open('GET', 'https://mywebsite.com/endpoint/');
request.send();

WebSocket

var ws = new WebSocket('ws://host.com/path');

ws.onopen = () => {
  // connection opened
  ws.send('something'); // send a message
};

ws.onmessage = (e) => {
  // a message was received
  console.log(e.data);
};

ws.onerror = (e) => {
  // an error occurred
  console.log(e.message);
};

ws.onclose = (e) => {
  // connection closed
  console.log(e.code, e.reason);
};


SwiftUI
-------

//views(components) can be embedded into vertical/horizontal stacks
// Spacer() - adds spaces between views in a stack(VStack,HStack)

import SwiftUI

struct ContentView: View {
    var body: some View {
        //align views by their leading edges
        VStack(alignment: .leading) {
            Text(" ")
                .font(.title)
                //.font(.subheadline)
            HStack {
                //views

            }
        }
        .padding()
    }
}

to adjust image to scale 
element.style {
    width: 100%;
    height: auto;
    border-radius: 100%;
}


//Image View
- Add image to assets folder
  Image("imageName")

- If image is too large
  .renderingMode(.original)
  .resizable(resizingMode: .stretch)

  //.fill -> fills parent container
  .aspectRatio(contentMode: .fit)

- To clip image as circle
  .clipShape(Circle())


// VStack
to align items to the top
-  Spacer()

//spacers always occupy as much space that they can




Setting width/height and margins to views
-----------------------------
//values can be numbers or .infinity (fill whole screen)
 .frame(width: .infinity, height:100, alignment: .center)

 //sets margins, for negative margin use (-)
 .offset(x:,y:)


HTML HR equivalent
------------------
Divider()

Data Binding
------------
Define variable as @State and then refer to it using $

//MKCoordinateSpan
You use the delta values in this structure to indicate the desired zoom level of the map, with smaller delta values corresponding to a higher zoom level.

@State private var region = MKCoordinateRegion(
            center: CLLocationCoordinate2D(latitude: 26.1873779, longitude: -80.1540117),
            span: MKCoordinateSpan(latitudeDelta: 0.2, longitudeDelta: 0.2)
        )

var body: some View {

        VStack(alignment: .center){
            Map(coordinateRegion: $region)
            Spacer()
        }


}

Swift

@State var varName = "value"

State is a value, or a set of values, that can change over time, and that affects a view’s behavior, content, or layout. You use a property with the @State attribute to add state to a view.



Arrays
-----

var languages = [String]()
var sizes: [Int] = [5, 10, 15]

var ids = [Int]()
ids.append(10)
ids.append(20)
ids.append(50)

iterate through arrays
----------------------

for (index, value) in ids.enumerated() {
    // Display indexes and values.
    print("\(index) = \(value)")
}

Create list view
----------------

var sizes: [Int] = [5, 10, 15]


struct ContentView: View {

    var body: some View {
      //use .self when items are unique
      List(sizes,id: \.self) { item in
          VStack(alignment: .leading) {
              Text(String(item))
                  .font(.headline)
          }
      }
  }
}

//Adds static views to a list
List {
            //views
        }

Array of structs
----------------

struct Ocean {
    let name: String
    //unique ids
    let id = UUID()
}

var oceans = [
    Ocean(name: "Pacific"),
    Ocean(name: "Atlantic"),
    Ocean(name: "Indian"),
    Ocean(name: "Southern"),

]

//id value can be number or string
List(oceans,id: \.id) { item in
    VStack(alignment: .leading) {
        Text(item.name)
            .font(.headline)
    }
}


Cast to String
--------------

let x : Int = 42
var myString = String(x)




- Adding Codable conformance makes it easier to load data into the structure from the data file, which you’ll do later in this section.

- Hashable is a type that provides an integer hash value

- Identifiable makes struct unique for list/forEach

struct Ocean:Hashable,Codable,Identifiable {
    let name: String
    //unique ids
    let id = UUID()
}


//creates a reference to an image in assets folder
var image: Image {
        Image(imageName)
}


do {
    let decoder = JSONDecoder()
    return try decoder.decode(T.self, from: data)
} catch {
    fatalError("Couldn't parse \(filename) as \(T.self):\n\(error)")
}




Swift's guard keyword lets us check an optional exists and exit the current scope if it doesn't, which makes it perfect for early returns in methods.



String interpolation

"\(varname)"

nullable types
--------------

var bundlePath:String? =""

"\(bundlePath!)" //forces swift to render it


if rendering from a nullable type use

"\( varname ?? "" )"



Closure Expression (Lambda)

{ (parameters) -> return type in
    statements
}

var varName = {
    () -> String in
    do{
        return try String(contentsOfFile:bundlePath!).data(using: .utf8)

    }catch {
        return "error"
    }
}

//varName()


nil coalescing

//if null, use optional value
let name: String? = nil
let unwrappedName = name ?? "Anonymous"



error handling
--------------

do{

  try //statement
}catch {
    print(error)
    //Terminates execution
    fatalError("Couldn't parse")

}


without do-catch

try? -> returns a null value or nil

try! -> throws error



//gets json data from shared folder

import SwiftUI
import Foundation

//use identifiable in a struct so that is unique (id) when using List or foreach

struct jsonData:Hashable,Codable,Identifiable {
    let id: String
    let lng: String?
    let title: String
    let code: String?
    let editedCode: String?
}

var bundlePath = Bundle.main.path(forResource: "data",ofType: "json")



func getData<T:Decodable>()->T{
    var strData:Data?

    do{
        strData = try String(contentsOfFile:bundlePath!).data(using: .utf8)


    }catch {
        fatalError("error")
    }

    do{
       return try JSONDecoder().decode(T.self,from: strData!)

    }catch {
        print(error)
        fatalError("Couldn't parse")

    }
}


var lstData:[jsonData] = getData()


struct ContentView: View {

    var body: some View {

            VStack{

                List(lstData) { item in
                    VStack(alignment: .leading) {
                        Text("\(item.lng ?? "")")
                            .font(.headline)
                    }
                }
            }

    }
}


function declaration

func sayHelloWorld(varName: String) -> String {
    return "\(varname)"
}

//generic type

func getData<T:Decodable>()->T{

   return try! JSONDecoder().decode(T.self,from: strData!)
}

//returns tuple type

func minMax(array: [Int]) -> (min: Int, max: Int)? {
    var currentMin = array[0]
    var currentMax = array[1]

    return (currentMin, currentMax)
}



//tuples

let http404Error = (404, "Not Found")

//destructuring
let (statusCode, statusMessage) = http404Error

//using index -> http404Error.0


Optional Binding
----------------
//You can include as many optional bindings and Boolean conditions in a single if statement as you need to, separated by commas

//checks for null
if let constantName = someOptional {
    statements
}
else{
  statements
}


//Sets previewLayout width and height to multiple views
static var previews: some View {
        Group {
            //views
        }
        .previewLayout(.fixed(width: 300, height: 70))

    }


//ZStack type, which enables us to stack a series of views in terms of depth, using a back-to-front order.


NavigationView {
    List(landmarks) { landmark in

    //navigates to differentView.swift
    NavigationLink(destination: differentView()){
      //views
    }

    }
}
.navigationTitle("Landmarks")




//lifecycle ->Runs function when view is loaded
view
.onAppear {
                setRegion(param)
            }
or
.onAppear(perform: setRegion(param))


//Allows views to be placed out of their containers
//edges: .top
.ignoresSafeArea()


//Adds scroller
//ScrollView(.horizontal, showsIndicators: false)
ScrollView {}


//Provides device height / width
GeometryReader { geometry in

       ScrollView( showsIndicators: false){
           List(lstData) { item in
               VStack(alignment: .leading) {
                   Text("\(item.lng ?? "")")
                       .font(.headline)
               }
           }.frame(height:geometry.size.height)

       }
   }


constructor
-----------

struct content: View {

    var dsc:String

    //optional
    init(dsc:String = "") {
        self.dsc = dsc
    }
}



//navigationTitle
  - Adds title to view
//navigationBarTitleDisplayMode
  - .inline -> at the top of view
  - .large -> write below back button
  - .automatic -> either one of the above

struct content: View {
  ScrollView{
      VStack{
          Image("profile-pic")
              .resizable(resizingMode: .stretch)
              .aspectRatio(contentMode: .fit)

          Text(dsc.title)
          Spacer()
          Text(dsc.code ?? "")

          Spacer()
      }

  }
  //passed as parameter
  .navigationTitle(dsc.lng!)
  .navigationBarTitleDisplayMode(.inline)
}


Passing data from one view to another
-------------------------------------


ContentView.swift
-----------------

import SwiftUI
import Foundation


struct jsonData:Hashable,Codable,Identifiable {

    //no need to define all values
    let id: String
    let lng: String?
    let title: String
    let code: String?
    //let editedCode: String?
}

//under shared folder
var bundlePath = Bundle.main.path(forResource: "data",ofType: "json")



func getData<T:Decodable>()->T{
    var strData:Data?

    do{
        strData = try String(contentsOfFile:bundlePath!).data(using: .utf8)


    }catch {
        fatalError("error")
    }

    do{
       return try JSONDecoder().decode(T.self,from: strData!)

    }catch {
        print(error)
        fatalError("Couldn't parse")

    }
}


var lstData:[jsonData] = getData()




struct ContentView: View {

var body: some View {

    NavigationView {
        VStack{

            List(lstData) { item in
                NavigationLink(destination: content(dsc:item)){
                    VStack(alignment: .leading) {
                    //interpolation and null checking
                        Text("\(item.lng ?? "")")
                            .font(.headline)
                    }
                }

            }
            //Main title for view
            .navigationTitle("Technologies")

        }

    }


}
}

content.swift
-------------
struct content: View {

    var dsc:jsonData

//    optional constructor
//    init(dsc:String = "default value") {
//        self.dsc = dsc
//    }


    var body: some View {

        ScrollView{
            VStack{
                Image("profile-pic")
                    .resizable(resizingMode: .stretch)
                    .aspectRatio(contentMode: .fit)

                Text(dsc.title)
                Spacer()
                Text(dsc.code ?? "")

                Spacer()
            }

        }
        .navigationTitle(dsc.lng!)
        .navigationBarTitleDisplayMode(.inline)

    }
}

-----------------

//to allow http requests
-info.plist
  -if not there, add
   - App Transport Security Settings
      - Allow arbitrary loads -> true


//structs
- Add modifiers to fields
struct st{
 public var field:String
}



loading data from http request
------------------------------

//for HTTP Request, info.plist must be configured

//ContentView.swift

import SwiftUI
import Foundation


struct ContentView: View {
    @State var ld:[jsonData] = []

var body: some View {


        VStack{
            List(ld) { item in
                VStack(alignment: .leading){
                    Text(item.lng )
                    .font(.headline)



                    Spacer()

                    Text(item.title)
                }
            }
            .onAppear {
                    loadData{(ld) in
                        self.ld = ld

                        //print(self.ld)
                    }
                }
        }


    }
}


//contentProvider.swift

import Foundation

struct jsonData:Hashable,Codable {
      public  let title: String
      public  let lng: String
//   public let id: String
//    let code: String?
//    let editedCode: String?
}


func loadData( completion:@escaping ([jsonData]) -> () ) {

    URLSession(configuration: .default).dataTask(with: URL(string: "http://rcsproductions.us/json-builder.php")!) { (data, response, error) in


        let localArr:[jsonData] = try! JSONDecoder().decode([jsonData].self,from: data!)

        DispatchQueue.main.async {
                    // update our UI
           completion(localArr)

        }

    }.resume()

}


modifier methods
----------------

A modifier returns a view that applies a new behavior or visual change

Text("Hello world!")
   .font(.title)
   .foregroundColor(.purple)


Icons
-----

Image(systemName: "star.fill")
//Because system images are vector based, you can change their color with the foreground
.foregroundColor(.yellow)



Image
-----

//Makes an image fit within specified width and height
  Image("profile-pic")
  .resizable()
  .frame(width: 50, height: 50)


Filter array on property value
------------------------------

var filteredLandmarks: [Landmark] {
      landmarks.filter { landmark in
          (!showFavoritesOnly || landmark.isFavorite)
      }
  }

var landmarkIndex: Int {
        landmarks.firstIndex(where: { $0.id == landmark.id })!
  }



Toggle View
-----------

struct ContentView: View {
    //Binding variables must be initialized before use
    @State private var showFavoritesOnly = true
var body: some View {


        VStack{
        //variable gets updated by using binding
        Toggle(isOn: $showFavoritesOnly) {
                Text("Favorites only")

            }
        }

    }
}

Observable Object
-----------------
An observable object is a custom object for your data that can be bound to a view from storage in SwiftUI’s environment


import Combine

final class ModelData: ObservableObject {


}


Button
------

struct FavoriteButton: View {
    @Binding var isSet: Bool

    var body: some View {
        Button(action: {
            isSet.toggle()
        }) {
            Image(systemName: isSet ? "star.fill" : "star")
                .foregroundColor(isSet ? Color.yellow : Color.gray)
        }
    }
}


Button("button label") {

    if (){

    }
    else{

    }

}


Navigating Views programmatically
---------------------------------

import SwiftUI
import Foundation



struct ContentView: View {
    @State private var selection:String? = nil
var body: some View {


    NavigationView {
            VStack{

                //programmatically
                NavigationLink(destination: content(), tag: "A", selection: $selection){}


                Button("Tap to show A") {
                    selection = "A"
                }

            }
            //Main title for view
            .navigationTitle("Technologies")

        }

    }
}


Data Binding & Singleton
------------------------
@State bings variables to its own view

@StateObject binds variables to application level
//swift file must be added to main file



Singleton
---------
@main
struct ios_projectApp: App {
    @StateObject private var modelData = ModelData()
    var body: some Scene {
        WindowGroup {
            ContentView()
                .environmentObject(modelData)
        }
    }
}


//ModelData
import Foundation
import Combine

final class ModelData: ObservableObject {
    @Published  var varname:String = "value"
}


import SwiftUI
import Foundation



struct ContentView: View {
    @EnvironmentObject var modelData: ModelData
    @State private var selection:String? = nil

var body: some View {


    NavigationView {
            VStack{

                NavigationLink(destination: content(), tag: "A", selection: $selection){}
                Button("Tap to show A") {

                    if (modelData.varname == "value"){
                        modelData.varname = "other value"
                    }
                    else{
                        modelData.varname = "value"
                    }
                    selection = "A"
                }



            }
            //Main title for view
            .navigationTitle("navigationTitle")

        }

    }
}


//content.swift
import SwiftUI


struct content: View {

    @EnvironmentObject var modelData: ModelData

    var body: some View {

        ScrollView{
            VStack{
                Text(modelData.varname)
            }

        }
        //.navigationTitle("")
        //.navigationBarTitleDisplayMode(.inline)

    }
}

if using PreviewProvider

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
        //for singleton to work
        .environmentObject(ModelData())
    }
}


//ZStack overlays views on top of each other.
ZStack {
   Circle().fill(Color.green)
   Circle().fill(Color.yellow).scaleEffect(0.8)
   Circle().fill(Color.orange).scaleEffect(0.6)
   Circle().fill(Color.red).scaleEffect(0.4)
}


Animations
----------

.animation(.easeInOut)
.animation(.spring())


Button("label",action: {
                    withAnimation(.easeInOut(duration: 4)) {}
      })



//Extensions add new functionality to an existing class, structure, enumeration, or protocol type.
extension AnyTransition {
    static var moveAndFade: AnyTransition {
        AnyTransition.slide
    }
}


extension AnyTransition {
    static var moveAndFade: AnyTransition {
        let insertion = AnyTransition.move(edge: .trailing)
            .combined(with: .opacity)
        let removal = AnyTransition.scale
            .combined(with: .opacity)
        return .asymmetric(insertion: insertion, removal: removal)
    }
}


.transition(.moveAndFade)



drawing shapes
--------------

Path { path in
   path.move(to: CGPoint(x: 20, y: 0))
   path.addLine(to: CGPoint(x: 20, y: 200))
   path.addLine(to: CGPoint(x: 220, y: 200))
   path.addLine(to: CGPoint(x: 220, y: 0))
}
.fill(
   LinearGradient(
       gradient: .init(colors: [Color.green, Color.blue]),
       startPoint: .init(x: 0.5, y: 0),
       endPoint: .init(x: 0.5, y: 0.5)
   )
)


//creates tab view

import SwiftUI
import Foundation

enum Tab {
       case featured
       case list
   }

struct ContentView: View {

   @State private var selection:Tab = .featured


var body: some View {

    TabView(selection: $selection) {

                //fetaured.swift
                featured()
                    .tabItem { Label("Featured", systemImage: "star")
                                    }
                    .tag(Tab.featured)

                //content.swift
                content()
                    .tabItem {
                        Label("Content", systemImage: "list.bullet")
                                    }
                    .tag(Tab.list)
            }

    }
}


//toolbar


@EnvironmentObject var modelData: ModelData
@State private var showingProfile = false

NavigationView {
            List {

              //views
              .listRowInsets(EdgeInsets())

            }

            .navigationTitle("Featured")
            .toolbar {
                Button(action: { showingProfile.toggle() }) {
                    Image(systemName: "person.crop.circle")
                        .accessibilityLabel("User Profile")
                }
            }
            .sheet(isPresented: $showingProfile) {
                //ProfileHost.swift
                ProfileHost()
                    .environmentObject(modelData) //adds model to view instance
            }
}

Built-in Edit mode
------------------

//built in edit mode
@Environment(\.editMode) var editMode


HStack {
        Spacer()
        EditButton()



        if editMode?.wrappedValue == .inactive {
                            content()
                        } else {
                            Text("Profile Editor")
                        }

}
.padding()


VStack( alignment: .trailing) {


   Button("\(btnLabel)") {
       if editMode?.wrappedValue == .active{
           editMode?.wrappedValue = .inactive
           btnLabel = "Edit"


       }else{
           editMode?.wrappedValue = .active
           btnLabel = "Done"
       }
   }



if editMode?.wrappedValue == .inactive {

               content()

           } else {

               VStack{

                   Text("Profile Editor")

                   Spacer()
               }

           }

Spacer()
}



//date function
var goalDate = Date()

//date format
Text(goalDate, style: .date)



//accessibility

view
.accessibilityLabel("User Profile")


//using built in Edit Mode


import SwiftUI

struct featured: View {

    //makes reference to editMode view
    @Environment(\.editMode) var editMode
    @State var btnLabel:String = "Edit"

    var body: some View {


        VStack( alignment: .trailing) {


                Button("\(btnLabel)") {
                    if editMode?.wrappedValue == .active{
                        editMode?.wrappedValue = .inactive
                        btnLabel = "Edit"


                    }else{
                        editMode?.wrappedValue = .active
                        btnLabel = "Done"
                    }
                }



            if editMode?.wrappedValue == .inactive {
                content()
                        }
            else {
                    VStack{

                        Text("Profile Editor")

                        Spacer()
                    }

            }

            Spacer()
        }
        .padding()

    }
}


Text on Image
-------------
struct ImageOverlay: View {
    var body: some View {
        ZStack {
            Text("")
                .font(.callout)
                .padding(6)
                .foregroundColor(.white)
        }.background(Color.black)
        .opacity(0.8)
        .cornerRadius(10.0)
        .padding(6)
    }
}

struct ContentView: View {
    var body: some View {
        VStack {
            Image("fall-leaves")
                .resizable()
                .scaledToFit()
                .overlay(ImageOverlay(), alignment: .bottomTrailing)
            Spacer()
        }
    }
}


//azure

//Create Ubuntu VM Machine

-Virtual Machines
  - create

- subscription
- create new resource group (if needed)
- VM name
- Pick Region
- Image (Machine type)
- Pick Size


Administrator Account
- SSH Public Key
- username
- Generate Key pair
- Key pair name

Inbound rules
- Allow selected ports (http 80, https 443, ssh22)

- Review and create


SSH to instance

CD to where pem file is saved
ssh -i "ubuntu_key.pem" azureuser@ip_address

Install Web Server
sudo apt-get -y update
sudo apt-get install  -y apache2

for cloud services, firewall configuration is not needed

//to restart apache service
sudo systemctl restart apache2

//Installing mysql

sudo apt-get install -y mysql-server

sudo mysql_secure_installation
  - When prompted
    - VALIDATE PASSWORD COMPONENT
      *Enabling this feature is something of a judgment call. If enabled, passwords which don’t match the specified criteria will be rejected by MySQL with an error. (y/n)

    - Add new password
    - Remove anonymous users? Y
    - Disallow root login remotely?  Y
    - Remove test database and access to it? Y
    - Reload privilege tables now? Y





//Installing php
sudo apt-get install -y php libapache2-mod-php php-mysql

//php extensions for phpmyadmin
sudo apt-get install -y  php-mbstring php-zip php-gd php-json php-curl


//Adding directory permissions

/*adds apache and username to groups*/
sudo usermod -a -G www-data $USER


/*Logout and check membership*/
Exit
Re-connect (SSH)
groups

/*grants user and apache ownership*/
sudo chown -R $USER:www-data /var/www

/*To add group write permissions and to set the group ID on future subdirectories*/
sudo chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;

/*To add group write permissions, recursively change the file permissions of /var/www and its subdirectories:*/
find /var/www -type f -exec sudo chmod 0664 {} \;

/*creates php file*/

//Check for disable_functions - system(),exec()...
echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php


//Installing phpmyadmin


//list installed packages
sudo apt list --installed | grep php

//uninstall packages
sudo apt-get remove -y php-fpm


/*Install wget */
sudo apt-get install -y wget

/*Import file*/
wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz

/*Create directory and extract*/
mkdir phpMyAdmin && tar -xvzf phpMyAdmin-latest-all-languages.tar.gz -C phpMyAdmin --strip-components 1

/*Browse*/
http://domain-name/phpMyAdmin

//troubleshooting
- can't login
  - sudo mysql
    CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';
    GRANT ALL PRIVILEGES ON * . * TO 'newuser'@'localhost';






//mysql
- show current user
  - SELECT user();




wordpress
---------
Render different view when database fails
- create file db-error under wp-content
  <?php
    header('Location: /projects');
  ?>


  /*mod_rewrite should be enabled*/

  httpd
  =====

  Remove # if disabled
  /etc/httpd/conf.modules.d/00-base.conf

  /*Check for htaccess */

  if not found, create one

    # Disables directory listing
    Options -Indexes

    RewriteEngine On
    RewriteBase /
    RewriteRule ^index\.php$ - [L]
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule . /index.php [L]


  /*Grant Override all to www/html */


    //if needed
    sudo vi /etc/httpd/conf/httpd.conf

     <Directory /var/www/html>
        AllowOverride All
     </Directory>

  /*Finally restart apache*/
  sudo systemctl restart httpd


apache2
=======

//enabling mod_write (apache2)

- For Htaccess to work
  - sudo vi /etc/apache2/apache2.conf
  <Directory /var/www/>
      Options Indexes FollowSymLinks
      #AllowOverride None
      AllowOverride All
      Require all granted
</Directory>

- sudo a2enmod rewrite

#verifies if changes are correct
- sudo apache2ctl configtest

- sudo systemctl restart apache2


//Move domain to azure

Create a DNS Zone ,fill out the following
- name (domain)
- subscription
- resource group
- location

Once created, click on Record Set
- Leave name blank
- Add Alias type  (A)
- Add Ip address of VM

- Get NS records and copy those to aws to make transfer request

-once you get confirmation
  - Record set
    - create cname
    - name -> www
    - type ->cname
    - alias -> domain name w/o www
    - create
- change might take a few minutes


//wordpress
To run site on a different ip address (new instance)

//site_url,home
//replace ip address with domain name when done
update option_name on wp_options



hackerrank output
-----------------
fs.createWriteStream(process.env.OUTPUT_PATH).write("Your Output");
process.stdout.write()



JS closure
----------

function joinedLogger(level,sep){

  var msg = ""
  function createLog(logs){



    for(var i=0; i < logs.length;i++){
      if(logs[i].level >= level){
        msg+= logs[i].text+""+sep
      }
    }


    console.log(msg.substring(0,msg.length-1))

  }

  return createLog
}


const myLog = joinedLogger(15, ";");


let messages = [
 {level:10,text:"foo"},
 {level:20,text:"bar"},
 {level:30,text:"baz"}

];

myLog(messages);



//Promise and async/await Javascript

'use strict';

const request = require('request');

async function getNumTransactions(username) {
    // write your code here
    // API endpoint: https://jsonmock.hackerrank.com/api/article_users?username=<username>
    // API endpoint: https://jsonmock.hackerrank.com/api/transactions?&userId=<userId>
    return new Promise((resolve, reject) => {
    request(`https://jsonmock.hackerrank.com/api/article_users?username=${username}`, function (error, response, body) {
      if(error) reject("error")

      else {

          console.log(body)

          if(JSON.parse(body).data.length == 0 ){
           resolve("Username Not Found")
          }
          else{

          var id = JSON.parse(body).data.data[0].id
          request(`https://jsonmock.hackerrank.com/api/transactions?&userId=${id}`, function (error, response, body) {
            if(error) reject("error")

            else {

                  resolve(JSON.parse(body).total)
            }
          });
          }

      }
    });
  });




}

async function main() {
    const result = await getNumTransactions(username);
    ws.write(result.toString());
}



//react functional component

import React, { useState } from 'react';

export default function Example() {
  const [count, setCount] = useState(0);


  function funcName(){

  }

return (
  <div>
    <p>You clicked {count} times</p>
    <button onClick={() => setCount(count + 1)}>
    Click me
    </button>
    <button onClick={funcName}>
    Sort Recent
    </button>
  </div>
);
}


//node express
app.js
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');

var indexRouter = require('./routes/index');
var recipeRouter = require('./routes/recipes');

var app = express();

// view engine setup
app.set('view engine', 'jade');

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', indexRouter);
app.use('/recipes', recipeRouter);

var port = process.env.PORT || 8080;

app.listen(port);
console.log('Magic happens on port ' + port);


module.exports = app;

----------
routes/index



var express = require('express');
var router = express.Router();
var recipes = require('../recipes.json');

/* GET home page. */
router.get('/', function(req, res, next) {
  res.send('<p>HTML Data</p>');
});

router.get('/recipes/shopping-list', function(req, res, next) {

  //get get params ?ids=
  var ids = req.query.ids;
  res.send(`<p>recipes${ids}</p>`);
  //res.json({ message: 'hooray! welcome to our api!' });
  //res.json(JSON.stringify(arrObj));
});


module.exports = router;



-----------------

https://stackabuse.com/using-sequelize-orm-with-nodejs-and-express/


//models/reminders

const {Sequelize, DataTypes} = require("sequelize");
const sequelize = new Sequelize("sqlite::memory:");

const Reminder = sequelize.define("reminder", {
    id: {
        type: DataTypes.INTEGER,
        autoIncrement: true,
        primaryKey: true
    },
    description: DataTypes.TEXT,
    date: DataTypes.DATE,
    user : DataTypes.INTEGER
}, {timestamps: false});

module.exports = Reminder;



------------------------------------
//routes/index

var express = require('express');
var router = express.Router();

const Reminders = require('../models/reminders');
const {Op} = require('sequelize');


/*

https://stackabuse.com/using-sequelize-orm-with-nodejs-and-express/

const { Op } = require("sequelize");
Post.findAll({
  where: {
    authorId: {
      [Op.eq]: 2
    }
  }
});


//delete
app.delete('/notes/:id', function(req, res) {
  Note.findByPk(req.params.id).then(function(note) {
    note.destroy();
  }).then((note) => {
    res.sendStatus(200);
  });
});
*/


/* GET home page. */
router.get('/', function(req, res, next) {
  res.send('<p>HTML Data</p>');
});

router.put('/reminders/:id', function(req, res) {
  Reminders.findByPk(req.params.id).then(function(reminder) {
    reminder.update({
      user: req.body.user,
      description: req.body.description
    }).then((reminder) => {
      res.json(reminder);
    });
  });
});

router.post('/reminders', function(req, res, next) {

//curl -d '{"user": 1,"description": "Drink Coffee"}' -H "Content-Type: application/json" -X POST https://endpoint/reminders

  Reminders.create(
    {
      user: req.body.user,
      description: req.body.description,
      date:new Date().toISOString() }
      )
      .then(function(reminder) {
        res.json(reminder);
  });


});


/* GET home page. */
router.get('/reminders', function(req, res, next) {

  Reminders.findAll({
    where: {},
}).then((data) => {

      //console.log("*********************\n\n\n\n\n",data);

      res.status(200);
      res.json(data);
});


});

module.exports = router;


python classes
--------------

#!/bin/python

import math
import os
import random
import re
import sys


class Car:
    def __init__(self, max_speed, speed_unit):
        self.max_speed = max_speed
        self.speed_unit = speed_unit
        self.output = "Car with the maximum speed of " + str(max_speed) +" " +str(speed_unit)

class Boat:
    def __init__(self, max_speed):
        self.max_speed = max_speed
        self.output = "Boat with the maximum speed of " + str(max_speed) + " knots"

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    q = int(raw_input())
    queries = []
    for _ in xrange(q):
        args = raw_input().split()
        vehicle_type, params = args[0], args[1:]
        if vehicle_type == "car":
            max_speed, speed_unit = int(params[0]), params[1]
            vehicle = Car(max_speed, speed_unit)
        elif vehicle_type == "boat":
            max_speed = int(params[0])
            vehicle = Boat(max_speed)
        else:
            raise ValueError("invalid vehicle type")
        fptr.write("%s\n" % vehicle.output)
    fptr.close()



Hackerrank Return Modulo

var MOD=1000000007;
return varName%MOD


GoLang

//structure
var variable_name type = value
var variable_name1, variable_name2 = value1, value2
variable_name := value

//If You declare the variable with an initial value, Go an infer the type of the variable
var <variable_name> = <value>


//Go Language also provides an easy way of declaring the variables with value by omitting the var keyword using

<variable_name> := <value> // declare and assign value.


const variable type = value;
var  i, j, k int;

//implicit
d =  42;







//print values
import "fmt"

var greeting =  "Hello world!"
fmt.Printf("%s", greeting)


//infinite loop
for true  {
       fmt.Printf("This loop will run forever.\n");
}

//for loop with range

numbers := []int{0,1,2,3,4,5,6,7,8}

/* print the numbers */
for i:= range numbers {
  fmt.Println(numbers[i])
}


var i int
for i = 1; i <= 5; i++ {
fmt.Println(i)
    }
}

//if-else
if () {

} else {

}


//function declaration

func function_name( [parameter list] ) [return_types]
{
   body of the function
}

func max(num1, num2 int) int {
   /* local variable declaration */
   result int


   return result
}

//returning multiple values from function


func swap(x, y string) (string, string) {
   return y, x
}

 a, b := swap("value", "value")


 //string methods
var greeting =  "Hello world!"
len(greeting)



//concats multiple values
greetings :=  []string{"Hello","world!"}

//(string values,separator)
fmt.Println(strings.Join(greetings, " "))



//Arrays
var variable_name [SIZE] variable_type


var balance [10] int

var balance = [5]float32{1000.0, 2.0, 3.4, 7.0, 50.0}


//pointers

var var_name *var-type

var ip *int        /* pointer to an integer */
var fp *float32    /* pointer to a float */



//pointer usage

var a int = 20   /* actual variable declaration */
var ip *int      /* pointer variable declaration */


ip = &a

// &ip by reference
// *ip actual value


//null
nil

//Structs
type struct_variable_type struct {
   member definition;
   member definition;
   ...
   member definition;
}


type Books struct {
   title string
   author string
   subject string
   book_id int
}

//declaration
var Book1 Books

Book1.title = "Go Programming"


printBook(Book1)

func printBook( book Books ) {
   fmt.Printf( "Book title : %s\n", book.title);
}

//Associative arrys - map

var countryCapitalMap map[string]string
countryCapitalMap["France"] = "Paris"

//delete map element
delete(countryCapitalMap,"France");


//error handling

//returns multiple values
func Sqrt(value float64)(float64, error) {
   if(value < 0){
      return 0, errors.New("Math: negative number passed to Sqrt")
   }
   return math.Sqrt(value), nil
}

result, err:= Sqrt(-1)

Goroutines

func display() {
}

func main() {

  //invoking the goroutine display()
  go display()

}


Channels

Channels are a way for functions to communicate with each other. It can be thought as a medium to where one routine places data and is accessed by another routine in Golang server.

channel_variable := make(chan datatype)

ch := make(chan int)

//You can send data to a channel using the syntax
//channel_variable <- variable_name

ch <- x


//You can receive data from a channel using the syntax
//variable_name := <- channel_variable

y := <- ch

//The sender who pushes data to channel can inform the receivers that no more data will be added to the channel

close(channel_name)



//flag is true if data is received from the channel
//flag is false when the channel is closed

x, flag := <- ch



func display(ch chan int) {
	ch <- 1234
  close(ch)
}

func main() {
	ch := make(chan int)
	go display(ch)
	x := <-ch
	fmt.Println("Printing x in main() after taking from channel:",x)
}



Select

/*
  Select can be viewed as a switch statement which works on channels.
  If multiple cases are ready, it will choose a random one. You can have a default case which is executed if none of the cases is ready.
*/


chan1 := make(chan string)
chan2 := make(chan string)

//invoking the subroutines with channel variables
go data1(chan1)
go data2(chan2)


select {
  case x := <-chan1:
      fmt.Println(x)
  case y := <-chan2:
      fmt.Println(y)
  default:
    	fmt.Println("Default case executed")

}


Mutex

/*
  Mutex is used when you don’t want to allow a resource to be accessed by multiple subroutines at the same time. the sync package must be imported and the statements which have to be mutually exclusively executed can be placed inside mutex.Lock() and mutex.Unlock().
*/


import "sync"


//declare a mutex instance
var mu sync.Mutex

mu.Lock()
mu.Unlock()


R programming
-------------

variable declaration

myString <- "Hello, World!"

print ( myString)


Vectors
// values are combined [1] "red"    "green"  "yellow"
apple <- c('red','green',"yellow")

//class = typeof
print(class(apple)) //character


Lists
//vector,numeric,sin function
list1 <- list(c(2,5,3),21.3,sin)


//loop through vector
vec <- c()

for(i in 1:length(vec)) {         # Head of for-loop
  out <- vec[i] + 10              # Create some output
  print(out)                      # Print output to console
}


//add values to vector
vec <- c()
vec <- c(vec,"asdasda")

//gets unique values from data frame column

ads <- unique( df_data$Advertisement )

for(i in 1:length(ads)) {
  print(ads[i])
}


//vector to dataframe

//number of elements must be the same
Name <- c()
gender <- c()

//as.data.frame(x)
dataframe<- data.frame(Name,gender)

//adds column names based of vector values
colnames(dataframe) <- c()

//creates dataframe with column names
dataframe = data.frame(num=c(1:3),branches=c("IT","CSE","ECE"))


//creates column in data frame
dataframe$column_name = c( value 1,value 2 . . . , value n)


//gets n rows from dataframe
data_frame <- head(dataframe,5)

//data[row.index, column.index]
//using sequence
data_frame <- dataframe[1:5,]


nodejs express

//pretty print
app.set('json spaces', 2)


sequelize ORM
-------------

sequelizeObj.js
---------------
//instantiate sequelize object and define model for table
//https://sequelize.org/v5/manual/data-types.html

const {Sequelize, DataTypes} = require("sequelize");

const sequelize = new Sequelize('rcs_code', 'root', '',{
  // The `host` parameter is required for other databases
  host: 'localhost',
  dialect: 'mysql'
});


const objSpecs = sequelize.define("cheatSheet", {
    id:{
        type: DataTypes.INTEGER,
        primaryKey: true
    },
    lng:DataTypes.STRING,
    title:DataTypes.STRING,
    dsc:DataTypes.STRING(1000),
    code:DataTypes.TEXT,
    editedCode:DataTypes.TEXT
  },
  {
    timestamps: false,
    //avoids sequelize to set plural names to tables
    freezeTableName: true,
    tableName:"cheatSheet"
  }
);

module.exports = {sequelize,objSpecs};

server.js
---------

const SequelizeObj = require('./model/sequelizeObj');
app.get('/', function (req, res) {


  SequelizeObj.sequelize
    .authenticate()
    .then(() => {

      console.log('Connection has been established successfully.');


      //with where clause findAll({ where: { fieldName: req.query.fieldName, } })

      SequelizeObj.objSpecs.findAll().then(notes => res.json(notes));


    })
    .catch(err => {
      res.json({err:"error"})
      console.error('Unable to connect to the database:', err);
    });
})


nodejs express
get - req.query.fieldName
post/put - req.body.note
'/notes/:id' - req.params.id



unity
-----
to import package to project
- Assets -> import package
- Go to scene and open

to add assets to the scene view
 - just add it to the hierarchy view (left sidebar) or game view
 - to focus on asset, click on it and press F or just double click on asset name in the hierarchy view
 - to move around the view, Hold alt(option)+left-click to rotate around the focal point
 - to undo , ctrl z
 - to move/rotate/scale, select asset and use tools above the hierarchy view

 Rename assets
  - either right click on asset (hierarchy view) and rename or use the Inspector view to rename it


// moves object 20 meters/second
transform.Translate(Vector3.forward * Time.deltaTime * 20) ;


// to reference gameobject inside scripts
- go to script inside inspector view and select object to be referenced




//you want Unity’s Camera to follow or track your player or avatar. In Unity, to tie the position of object A (Camera) to object B (player or avatar), a common tactic is to set object A as a child of the controlling object B.

//copies position from object
public GameObject player;
transform.position = player.transform.position;

//left/right, upward/downward,forward/backward
new Vector3(0, 5, -10);


//creates offset
transform.position = player.transform.position + new Vector3(0, 5, -10);

lifecycles
- Awake() -> runs before start()
- Start() -> runs once before update (init function)
- FixedUpdate -> deals with physics and calculations
- Update() //for every frame
- LateUpdate() -> for camera view purposes


to check game controllers
- edit -> project settings -> inputManager
  - Input.GetAxis("Vertical"); // Horizontal


//moves forward
//Input.GetAxis("Vertical") // Horizontal
transform.Translate(Vector3.forward * Time.deltaTime * speed * verticalInput);

//rotates on y axis
transform.Rotate(Vector3.up, horizontalInput * Time.deltaTime * speed);


//creates objects based on character's position and rotation values

public GameObject projectilePrefab;

if (Input.GetKeyDown(KeyCode.Space))
{
    Instantiate(projectilePrefab, transform.position, projectilePrefab.transform.rotation);
}


//removes object from game
Destroy(gameObject);

//When overriding prefabs (scripts/dimensions), click on overrides (inspector view) and apply all


//An scene can have perspective and isometric views (gizmo) and
the camera can have perspective and Orthographic projections (inspector view)


//publish unity to browser
https://learn.unity.com/tutorial/how-to-publish-for-webgl#5d92519bedbc2a130fa21789
-webgl
  - build settings -> webgl
    - player settings
      -Publishing settings
        - Format compression -> disabled






//Add colliders
- on prefabs
  - add box collider
  - click on edit collider, adjust as needed
  - check isTrigger

- on game object
  - add box collider (same as above)
  - add rigidbody
  - uncheck use gravity

  - add script
  public void OnTriggerEnter(Collider other)
    {
        Destroy(gameObject);
        Destroy(other.gameObject);
    }


//to console log
debub.Log("some message");


//moves characters left/right


public float speed = 10.0f;

void Update(){
  horizontalInput = Input.GetAxis("Horizontal");
  transform.Translate(Vector3.right * Time.deltaTime * speed * horizontalInput);
}


//to create plane area
hierarchy -> new gameObject -> 3d plane
  - On transform, reset
  - To scale, just change the x and z values



//game orientation

For a top-down game, position the camera at (0, 10, 0) directly over the player and rotate it 90 degrees on the X axis
For a side-view game, rotate the Plane by -90 degrees on the X axis
For an third-person view game, move the camera up on the Y and Z axes and increase its rotation on the X axis


//to export project
- right click on Assets and export

//to set a new background
Select the Background object in the hierarchy, then in the Sprite Renderer component > Sprite, select image


//makes character jump on space key

private Rigidbody playerRb;

// Start is called before the first frame update
void Start()
{
    playerRb = GetComponent<Rigidbody>();

    //controls gravity for character
    Physics.gravity *= 1.5f;

}

// Update is called once per frame
void Update()
{
    if(Input.GetKey(KeyCode.Space))
    {

        playerRb.AddForce(Vector3.up * 1 ,ForceMode.Impulse);
    }

}

Rigidbody
-useGravity -> deals with Physics
-isKinematic -> uses transform method
- it can have constraints for position and rotation
- just freeze the axis that are not needed for character



//to create tags on gameObjects
inpsector -> tag
  - add a new tag if needed


//to compare tags
gameObject.CompareTag("obstacle")

// to make a reference to a field in a different script

private PlayerController playerControllerScript;

void Start()
{
    playerControllerScript = GameObject.Find("Player").GetComponent<PlayerController>();
}

void Update()
{
  if(playerControllerScript.gameOver == false)
  {

  }
}

//to remove gameObjects based on axis bound values
if(transform.position.x < leftBound)
{
    Destroy(gameObject);
}

// to repeat backgrounds

private Vector3 startPos;
private float repeatWidth;

// Start is called before the first frame update
void Start()
{
    startPos = transform.position;
    repeatWidth = GetComponent<BoxCollider>().size.x / 2;
}

// Update is called once per frame
void Update()
{
    if(transform.position.x < startPos.x - repeatWidth)
    {
        transform.position = startPos;
    }
}

//on Animator view/panel
Window-> Animation -> Animator

//to preview / render animation
double click on any node of the flowchart diagram

- you can preview character animations
  - Parameters panel
    - speed_f determines when the animation starts

  - Inspector view
    - you can set the speed of movement

  - Movement panel
    - you can set the default movement for character


//Animation fields can be modified inside scripts


private Animator playerAnimation;

void Start()
{
    //gets gameObject's animation component
    playerAnimation = GetComponent<Animator>();
}

void Update(){

  //enables jumping animation
  playerAnimation.SetTrigger("Jump_trig");

}

void OnCollisionEnter(Collision collision)
{
    if( collision.gameObject.CompareTag("obstacle") )
    {
        //enables death animation
        playerAnimation.SetBool("Death_b", true);

        //this can be defined under animator/parameters
        playerAnimation.SetInteger("DeathType_int", 1);
    }
}

//Particle GameObjects
- these can be added directly to other gameobjects

- to render them on start
  - check Play on awake


//using the interface, add reference to particle object
public ParticleSystem dirtParticle;

void Update()
{
  if(boolField)
      dirtParticle.Play();
  else
      dirtParticle.Stop();

}

//to add background music to game
-add audiosource component to camera ,add audio clip and check loop

//to play audio clips on events

private AudioSource playerAudio;

//make audio clip reference using the interface
public AudioClip jumpSound;

void Start()
{
    playerAudio = GetComponent<AudioSource>();
}

void Update(){
  if (Input.GetKey(KeyCode.Space){
    playerAudio.PlayOneShot(jumpSound);
  }
}

//to create colors
-> assets -> right click -> create -> material
  -> to add images
    -In the Inspector window, select the circle icon next to the Albedo property. Albedo encompasses the reflective properties of the Material, based on a solid color or an image.


//an object can have movement by changing its position or adding force to the rigidBody component

public float speed;
private Rigidbody playerRb;

// Start is called before the first frame update
void Start()
{
    playerRb = GetComponent<Rigidbody>();
}

// Update is called once per frame
void Update()
{
    //moves forward
    //transform.Translate(Vector3.forward * Time.deltaTime * speed * verticalInput);

    //moves forward
    playerRb.AddForce(Vector3.forward  * speed * Input.GetAxis("Vertical"));
}


//to control friction and bounciness on collider gameObjects
Assets -> right click -> create physic material -> add it to object


//follows object based on position and rigidbody
//normalized -> adjusts vector magnitude
enemyRb.AddForce((player.transform.position - transform.position).normalized * speed);


//coroutines

StartCoroutine(PowerupCountdownRoutine());

IEnumerator PowerupCountdownRoutine() {

  Debug.Log($"PowerUp {hasPowerup}");

  yield return new WaitForSeconds(7);

  hasPowerup = false;
  Debug.Log($"PowerUp {hasPowerup}");

}

//objects can be rendered visible / hidden

//uncheck active checkmark on inspector view
public GameObject powerupIndicator;

powerupIndicator.SetActive(true);


//finds objects currently on game
enemyCount = FindObjectsOfType<Enemy>().Length;
enemyCount = GameObject.FindGameObjectsWithTag("Enemy").Length;


//to get a Vector away from the player, you should subtract the [enemy position] minus the [player’s position]


private Rigidbody targetRb

void Start(){

//adds rotation
targetRb = gameObject.GetComponent<Rigidbody>();

targetRb.AddTorque(Random.Range(-10F, 10f),
                            Random.Range(-10F, 10f),
                            Random.Range(-10F, 10f),
                            ForceMode.Impulse);
}

//to spawn random objects into game

public List<GameObject> targets;
public bool isGameActive = true;

void Start()
{
  StartCoroutine(SpawnTarget());
}

IEnumerator SpawnTarget()
{
    while (isGameActive)
    {
        yield return new WaitForSeconds(1);

        int idx = Random.Range(0, targets.Count - 1);

        Instantiate(targets[idx],
            RandomPos(),
            targets[idx].transform.rotation);
    }

}

Vector3 RandomPos()
{
    return new Vector3(Random.Range(-4.0F, 4.0F), -6.0f);
}



//create random gameObject at intervals

void Start(){

  //startDelay -> seconds after the game is initialized
  //spawnInterval -> in seconds
  InvokeRepeating("SpawnRandomAnimal",startDelay,spawnInterval);
}


void SpawnRandomAnimal(){

        xAxis = Random.Range(xRangeL, xRangeR);

        animalIndex = Random.Range(0, animalPrefabs.Length);

        Instantiate(animalPrefabs[animalIndex], new Vector3(xAxis, 0, zAxis), animalPrefabs[animalIndex].transform.rotation);
}

//To add text on game
using TMPro;

- Create ui
  -textmesh-pro
    -position object using anchor view
    -Move text where needed
    -Choose a Font Asset, Style, Size, and Vertex color to look good with your background

//to use UI Components
using UnityEngine.UI;

//to set click event, add the script to gameobject and then make gameobject reference using the interface and finally look up function name
//to set the label, expand button view
public Button restartButton;


//to reload scene
using UnityEngine.SceneManagement;

 SceneManager.LoadScene(SceneManager.GetActiveScene().name);

 //the scene index needs to be to specified under build settings -> scenes in build
 SceneManager.LoadScene(Random.Range(0, SceneManager.sceneCount));

//sets buttons programmatically, add script to UI element
using UnityEngine.UI;

private Button button;

void Start(){
  button = GetComponent<Button>();
  button.onClick.AddListener(SetDifficulty);
}

void SetDifficulty()
{

}

//to nest prefabs
-move prefab into existing prefab
-remove mesh renderer from existing prefab



//material’s resolution
To adjust the material’s resolution, in the Material properties (with the sphere next to it), change the Main Map Tiling X and Y values
To make the material less shiny, in the Material properties, uncheck the “Specular highlights” and “Reflections” settings

//SerializeField -  allows you to render and modify variables in the interface regardless if they are private or not
[SerializeField] private


//to rotate text around the middle
- set its anchor's property to middle center
- Text.transform.Rotate(Vector3.up, Time.deltaTime * RotatingSpeed); //rotates on y axis


//displays text based on deltaTime


using System.Collections.Generic;
using UnityEngine;


public TextMesh Text;
private List<string> TextToDisplay = new List<string> { "Congratulations", "All Errors Fixed" };
private float TimeToNextText;
private int CurrentText;


void Update()
{
    TimeToNextText += Time.deltaTime;


    if (TimeToNextText > 1.5f)
    {
        TimeToNextText = 0.0f;

        Text.text = TextToDisplay[CurrentText++];

        if (CurrentText >= TextToDisplay.Count)
        {
            CurrentText = 0;
        }
    }
}


//conditional compiling
//exits game mode

using UnityEditor; //EditorApplication

#if UNITY_EDITOR
        EditorApplication.ExitPlaymode(); // code to quit Unity on development
#else
        Application.Quit(); // code to quit Application on production build
#endif

//DontDestroyOnLoad:
A method in Unity that marks a GameObject to be saved in memory even when loading or unloading a new scene.

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MainManager : MonoBehaviour
{
    public static MainManager Instance;

    //called as soon as the object is created
    private void Awake()
    {
        //singleton
        if (Instance != null)
        {
            Destroy(gameObject);
            return;
        }

        Instance = this;

        //this script not to be destroyed when the scene changes
        DontDestroyOnLoad(gameObject);
    }
}

//c# serialize and deserialize (Data Persistence between sessions)


//JsonUtility doesn’t work on primitive types, arrays, lists, or dictionaries.



using System.IO;


//[Serializable]
[System.Serializable]
public class PlayerData
{
    public int level;
    public Vector3 position;
    public string playerName;
}

PlayerData myData = new PlayerData();
myData.level = 1;
myData.position = new Vector3(3.0f, 4.4f, 2.3f);
myData.playerName = "John";

//serialize
{
    “level”: 1,
    “position”: {
        “x” : 3.0,
        “y” : 4.4,
        “z” : 2.3 },
    “playerName”: “John”
}

string json = JsonUtility.ToJson(myData);


//deserialize
PlayerData myData = JsonUtility.FromJson<PlayerData>(json);


//save to file


[System.Serializable]
class SaveData
{
    public Color TeamColor;
}

SaveData data = new SaveData();
data.TeamColor = TeamColor;

string json = JsonUtility.ToJson(data);

File.WriteAllText(Application.persistentDataPath + "/savefile.json", json);


//deserialize from file
string path = Application.persistentDataPath + "/savefile.json";
if (File.Exists(path))
{
    string json = File.ReadAllText(path);
    SaveData data = JsonUtility.FromJson<SaveData>(json);

    TeamColor = data.TeamColor;
}


//millisecond budget per frame.
The way to calculate this is:
1000 ms / target frames per second = ms budget
So, to reach a target of 60 FPS, each frame has a millisecond budget of 16


//profiler
Window-> Analysis -> profiler


//timeline -> hierarchy -> UpdateBehaviour

Profiler.BeginSample("Handling Time");

HandleTime();

Profiler.EndSample();


//ubuntu
-Add mime.type

sudo vim /etc/mime.types
 -add application/wasm wasm

- sudo systemctl restart apache2

//xampp
- xampp/xamppfiles/etc/mime.types
  -add application/wasm wasm
- restart apache


//Directional Light
Changing the position of the light will not have an influence on the scene but changing the rotation will change the angle of the light in the Scene


//programmatically modifying position,rotation,scale properties

public Vector3 modChange;


void Update()
{
  transform.position += modChange;
  transform.Rotate (modChange);
  transform.localScale += modChange;
}


//3D sound
it may change volume, or even pitch, depending on where you move in the Scene, just as sound behaves in actual space.
Every default Unity Scene has an Audio Listener attached to the Main Camera

-to make it work , add camera inside character's hierarchy
-increase Spatial Blend to 1 in audio source of any external sound object
  - under 3D Sound Settings
    - set min/max values for rolloff (it defines the range in 3D space, and the rate at which it fades at greater distances and becomes inaudible)


//2D Projects

A 2D project is actually a side view of a 3D space, so while the end-user will see a flat 2D view, the actual space that you work in is still 3D. The Rect Transform tool provides a quick and easy way to change the shape and position of your Sprites.

-Changes to scale in the Z direction are not visible to the player.
-Changes to position in Z will place Sprites behind or in front of one another (like the Z-order in other applications)
-In the Scene view, you can switch between a 2D and 3D view by selecting the 2D button at the top of the window.


//RigidBody / Colliders
RigidBody properties control how the GameObject interacts with gravity and air density but when an object are hit by another GameObject, it will pass through it. The Collider Component adds additional properties that determine how objects interact with each other

//RigidBody2D
- to make it unmovable
 - freeze x,y position and z rotation constraints


//makes gameObject moves towards an object


public float speed = 10.0f;
private Rigidbody enemyRb;
public GameObject playerGoal;


void Start()
{
    enemyRb = GetComponent<Rigidbody>();
    playerGoal = GameObject.Find("Player Goal");

}

// Update is called once per frame
void Update()
{
    // Set enemy direction towards player goal and move there
    Vector3 lookDirection = (playerGoal.transform.position - transform.position).normalized;
    enemyRb.AddForce(lookDirection * speed );
}


//gameObject movement in 2D
using UnityEngine;

public class PlayerMovement : MonoBehaviour {
  public float speed = 20;
  private Vector2 motion;

  void Update() {
  motion = new Vector2(Input.GetAxisRaw("Horizontal"), Input.GetAxisRaw("Vertical"));
  transform.Translate(motion * speed * Time.deltaTime);
  }
}

//changing component color (material)
//Mesh Renderer
GetComponent<Renderer>().material.color = Color.blue;


Vector Math
-----------
Magnitude -> Length from origin to point in space
  -Vector3.magnitude

Dot product
-----------
the sum of the product of vectors' axis
- A(x,y) B(x,y)
  Dot Product = (Ax * Bx ) + (Ay * By)
  -if the dot product of two vectors equals 0, then they are perpendicular
  -Vector3.Dot
    - positive value -> upwards
    - negative value -> downwards

Cross Product
-------------
A^B = C
-It creates a new vector perpendicular to both vectors
-Useful for rotation on y axis
  -Vector3.Cross(VectorA,VectorB)


UI Components
-------------

Panel
  - Rect Transform
    - Anchor Preset (holding the shift key sets the pivot location and holding the alt sets the position)
    - to adjust dimensions (width/height), pivot location must be set


Button
-disable the button functionality by making it non-interactable

  using UnityEngine.UI;

  public Button button;

  button.interactable = false;


//To reference multiple gameObjects at once
- Lock Inspector view, and then move objects to establish reference


//to render or hide Components
these should be GameObjects

public GameObject gameOverPanel;

gameOverPanel.SetActive(true);

//to reference components in parent or children
GetComponentInChildren<ComponentName>()
GetComponentInParent<ComponentName>()


//to change colors using rgb values (float)
new Color(r,g,b;

//to create a property with editable fields inside the inspector view

[System.Serializable]
public class Player
{
    public Text text;
    public Button button;
}

public class GameController : MonoBehaviour
{
  public Player playerX;
}


Scenes
------
In Unity, areas of the game that a player can interact with are generally made up of one or more Scenes

GameObjects and components
--------------------------
Every object in the game world exists as a GameObject in Unity. GameObjects are given specific features by giving them appropriate components, which provide a wide range of different functionality. GameObjects come with a Transform component already attached. This component controls the GameObject’s positional properties in the 3D (or 2D) gamespace.

Prefabs
-------
They act as templates, storing the components and properties of a specific GameObject and enabling you to create multiple instances of it within a Scene.


Focusing on a GameObject
------------------------
If you forget where a GameObject is in your Scene, select it in the Hierarchy. Then move your cursor over the Scene view,  and press F to center it.



Quaternion.Euler()
Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis; applied in that order.


//MonoBehaviour
Scripts derive from MonoBehaviour class which contains the variable transform and the function GetComponent, which enables access to a component on a GameObject



MacOs
-----
//Launch finder on terminal
open .


Virtual reality
---------------
//to control the initial headset view
- set the xrig position values
  (x-> left/right, y-> up/down, z->forward/backward)


//XR Device Simulator

To change controller key
  - Inspector view
    -XR Device Simulator script
      - double click on any reference value and add binding


To control the camera: hold right-click.
To control the left controller: hold Left Shift or toggle with T.
To control the right controller: hold the Spacebar or toggle with Y.
To toggle rotation control, press R and move headset
To reset the position and rotation of devices: press V.
To teleport, press G
To move controllers left/right
  - Enable rotation (press R)
To rotate hands
  - Enable rotation (press R) and move around with two fingers
To move around game area
  - set move action into one of the left/right controller
  - Move controller (two fingers - backward/forward) while pressing headset key
To activate,
  press Z - left hand
  press L - right hand
To UI Press,
  press S - left hand
To turn left/right
  press A



//to set up the ability to turn around without physically moving and rotating.

-Select XR Rig (Hierarchy)
  - Add Locomotion System Component
    - Set xr rig reference
  - Add Snap Turn Provider (Action-based) component
    -For the System property, drag and drop the Locomotion System component onto the slot
    - Select the Enable Turn Around property to allow the user to turn 180 degrees when they press the joystick down.
    - Modify , if needed, the Turn Amount and Debounce Time properties

Note:  If you are using the XR Device simulator, you can simulate movement by using T or Y to toggle one of the controllers, then A or D to simulate snap turning.

//teleport

Select the XR Rig object and add a Teleportation Provider component.

For the System property, drag and drop your Locomotion System component to assign it to the property.

Select prefab object to teleport to, add a Teleportation Area component and for the Teleportation Provider property, drag and drop the XR Rig object from the Hierarchy to the empty slot to assign it to the property.

to set teleport orientation (forward z-axis)

to add additional prefab objects to teleport to
  - Select prefab on prefab mode, check auto save and add teleportation anchor component
    - Under teleportation configuration
      - set teleportation orientation (forward z-axis)
  - Exit prefab mode

to add recticle areas on teleportation prefabs
- teleportation area / teleportation anchor
  - colliders -> custom reticle
    - make prefab reference


to set prefab for left/right controller
---------------------------------------

XR Rig > Camera Offset > LeftHand/RightHand Controller.
-for the Model Prefab property, drag and drop your hand prefab of choice to assign it.
- hide prefab controller when grabbing an object
  - XR Rig > Camera Offset > LeftHand / RightHand
    - In the XR Ray Interactor component, enable the Hide Controller on Select setting.


to make prefabs interactable
----------------------------
-Add XR Grab interactable component
-These have built in events that functions can be added to them
- to disable movement when object is grabbed
  - XR Rig > Camera Offset > LeftHand / RightHand Controller object.
    - In the XR Ray Interactor component, disable Anchor control

  -To prevent a dropped object from going through the floor. In the Ball object’s Rigidbody component, set the Collision Detection setting to Continuous Dynamic.

  -To allow the ball’s rigidbody physics to work while in your hand. In the XR Grab Interactable component, ensure that the Movement Type is set to Kinematic.

  -To smooth the motion of the object. In the XR Grab Interactable component, enable the Smooth Position and Smooth Rotation properties.

  -To set position of an object when is grabbed
    - create an empty child object(attach)
      - Reposition and rotate the Attach object so that it matches the desired position and orientation.
      - Assign the attach point to main object
        -  XR Grab Interactable component, locate the Attach Transform property and set attach object as reference


//Attaching Sockets to prefabs
-Select prefab
  - create a new layer for socket (optional)
    - this specifies which objects can interact with socket
    - Inspector view -> layer -> create new

  - create empty object (socket)
    - add sphere collider
      - adjust position and size
      - enable isTrigger
    - add XR Socket Interactor component
      - (optional) Starting selected interactable
        - reference a prefab
    - create empty object (attach)
      - adjust position and rotation if needed
    - Interaction layer mask - select new layer (optional)

  - Assign the Attach object to the Attach Transform property of the Socket Interactor component


-----------------------------------------------
//Adding haptics and audio

Note: If you are using the OpenXR plug-in for development on devices like the HTC Vive or Valve index, this feature may not work.

-select both the RightHand/LeftHand Controllers
-Under XR Ray Interactor component
  -haptic events
    -set intensity and duration (low values)
  -Audio events
    - set audio clip reference

//Reverb Zone
it allows sounds to reverberate around different kinds of rooms.

prefab -> audio -> reverb zone ( set min/max distance and preset )


//Add a Direct Interactor
-if using xr ray interactor
  -remove line visual, line renderer and xr ray interactor

-Add xr direct interactor
-Add sphere collider
  -enable isTrigger
  -set radius
-Get closer to interactable object and press select key



//typeScript

types

string	  represents text data
number	  represents numeric values
boolean	  has true and false values
null	    has one value: null
undefined	has one value: undefined
symbol	  represents a unique constant value


- The :any type allows you to store a value of any type. It instructs the compiler to skip type checking.

- The union (|) type allows you to combine multiple types into one type.

let result: number | string;
result = 10; // OK
result = 'Hi'; // also OK
result = false; // a boolean value, not OK


- Intersection types

An intersection type combines two or more types to create a new type that has all properties of the existing types.

The type order is not important when you combine types.

interface BusinessPartner {
    name: string;
    credit: number;
}

interface Identity {
    id: number;
    name: string;
}

interface Contact {
    email: string;
    phone: string;
}


type Employee = Identity & BusinessPartner & Contact;

let e: Employee = {
    id: 100,
    name: 'John Doe',
    email: 'john.doe@example.com',
    phone: '(408)-897-5684',
    credit: 1000
};




//TypeScript type aliases
type alias = existingType;

type chars = string;
let messsage: chars; // same as string type

//Type annotations in variables and constants
let variableName: type = value;
const constantName: type = value;


//Arrays
let arrayName: type[];

//Storing values of mixed types
let scores : (string | number)[];
scores = ['Programming', 5, 'Software Design', 4];


//Objects

let employee: object;

employee = {
    fieldName: 'value'
};

let employee: {
    fieldName: type;
} = {
    fieldName: 'value'
};

the Object type has the toString() and valueOf() methods that can be accessible by any object.



//Function arguments & return types

let greeting : (name: string) => string;

greeting = function (name: string) {
    return `Hi ${name}`;
};

// : return type
function increment(counter: number) : number {
    return counter++;
}

//A rest parameter allows you a function to accept zero or more arguments of the specified type. In TypeScript, rest parameters follow these rules:

- A function has only one rest parameter.
- The rest parameter appears last in the parameter list.
- The type of the rest parameter is an array type.

function fn(...rest: type[]) {
   //...
}


//Decimal numbers
let counter: number = 0;

//Binary Numbers (0b or 0B)
let anotherBin: number = 0B010;

//Octal Numbers (The digits after 0o are numbers in the range 0 through 7)
let octal: number = 0o10;

//Hexadecimal numbers (0x or 0X).
//The digits after the 0x must be in the range (0123456789ABCDEF)
let hexadecimal: number = 0XA;

//Big Integers (2^53 – 1)
//A Big integer literal has the n character at the end
let big: bigint = 9007199254740991n;


//Multi-line string using the backtick (`
let description = `This TypeScript string can
span multiple
lines
`;


//Tuple
let color: [number, number, number] = [255, 0, 0];

//optional field by adding ?
let headerColor: [number, number, number, number?];


//enum
enum ApprovalStatus {
    draft,
    submitted,
    approved,
    rejected
};

const request =  {
    id: 1,
    status: ApprovalStatus.approved,
    description: 'Please approve this request'
};

if(request.status === ApprovalStatus.approved) {
    // send an email
    console.log('Send email to the Applicant...');
}


//Class
-  To define methods in a class, you just need to declare them without the function keyword.

class Person {
    ssn;
    firstName;
    lastName;

    constructor(ssn, firstName, lastName) {
        this.ssn = ssn;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    getFullName() {
        return `${this.firstName} ${this.lastName}`;
    }
}


let person = new Person('171-28-0926','John','Doe');
console.log(person.getFullName());


Readonly vs. const
The following shows the differences between readonly and const:

readonly
Use for ->     	   Class properties
Initialization	-> In the declaration or in the constructor of the same class

const
Use for	->        Variables
Initialization -> In the declaration



//inheritance


- Use the extends keyword to allow a class to inherit from another class.
- Use super() in the constructor of the child class to call the constructor of the parent class. Also, use the super.methodInParentClass() syntax to invoke the methodInParentClass() in the method of the child class.

- Method overriding
If you want the Employee class has its own version of the describe() method, you can define it in the Employee

class Employee extends Person {
  constructor(
      firstName: string,
      lastName: string,
      private jobTitle: string) {

      // call the constructor of the Person class:
      super(firstName, lastName);
  }

  describe(): string {
        return super.describe() + `I'm a ${this.jobTitle}.`;
    }
}

//Static methods
- To declare a static property, you use the static keyword. To access a static property, you use the className.propertyName syntax

class Employee {
    private static headcount: number = 0;

    public static getHeadcount() {
        return Employee.headcount;
    }
}


//abstract classes

abstract class Employee {
    constructor(private firstName: string, private lastName: string) {
    }
    abstract getSalary(): number

    compensationStatement(): string {
        return `${this.fullName} makes ${this.getSalary()} a month.`;
    }
}

class FullTimeEmployee extends Employee {
    constructor(firstName: string, lastName: string, private salary: number) {
        super(firstName, lastName);
    }
    getSalary(): number {
        return this.salary;
    }
}


//interface
- An interface can extend one or multiple existing interfaces.
- An interface also can extend a class. If the class contains private or protected members, the interface can only be implemented by the class or subclasses of that class.

interface Person {
    firstName: string;
    lastName: string;
    middleName?: string;
}

function getFullName(person: Person) {
    if (person.middleName) {
        return `${person.firstName} ${person.middleName} ${person.lastName}`;
    }
    return `${person.firstName} ${person.lastName}`;
}


interface Json {
   toJSON(): string
}


class Person implements Json {
    toJson(): string {
        return JSON.stringify(this);
    }
}


Type casting
- Use the as keyword or <> operator for type castings.


let input = <HTMLInputElement>document.querySelector('input[type="text"]');

let input = document.querySelector('input[type="text"]') as HTMLInputElement;

console.log(input.value);


//generics

function getRandomElement<T>(items: T[]): T {
    let randomIndex = Math.floor(Math.random() * items.length);
    return items[randomIndex];
}

let numbers = [1, 5, 7, 4, 2, 9];

let randomEle = getRandomElement<number>(numbers);
console.log(randomEle);








//Angular Http.Get Request
app.module.ts

import { HttpClientModule } from '@angular/common/http';

imports: [
  BrowserModule,
  AppRoutingModule,
  NgbModule,
  HttpClientModule,
],


import { HttpClient } from '@angular/common/http';


  constructor(http:HttpClient) {
    http.get("url")
    .subscribe(data => {

      console.log(data)

      })
    }

  or

  http: HttpClient

  constructor(){
    this.http.get("url")
    .subscribe(data => {

      console.log(data)

      })
  }


//angular service
app.module.ts

import { DtProviderService } from './dt-provider.service';

providers: [DtProviderService]



./dt-provider.service

import { HttpClient } from '@angular/common/http';


http: HttpClient

constructor(htp:HttpClient) {

  this.http = htp

}

dtProvider.getApiData(url)
.subscribe(data => {

 this.userData = data as any[]
 console.log("this.userData " , this.userData )

 })

 .component.ts
import {DtProviderService} from '../../dt-provider.service'

constructor(dtProvider:DtProviderService) {

  dtProvider.getApiData(dtProvider.usersApiUrl)
  .subscribe(data => {

    this.userData = data as any[]

    //console.log("this.userData " , this.userData )

    this.userData.forEach(element => {

    });



    })


}



//angular get params from url

.ts
import { RouterLink } from '@angular/router';

.html
<div *ngFor="let user of userData" class="user-div">
  <a [routerLink]="['/page']" [queryParams]="{id: user.id}">{{user.id}}</a>
</div>

//page
.ts

route: ActivatedRoute

constructor(rt: ActivatedRoute) {
  this.route = rt
}

ngOnInit(): void {

  this.route.queryParams
    .subscribe(params => {
      console.log(params)
    }
  );

}

*ngFor
<div *ngFor="let user of userData" class="user-div">
</div>


non binding
aria-label="Cross out {{element.title}}"

binding
[aria-label]="element.title"



<label for="todo" class="sr-only">Cross out {{todos.title}} Todo</label>
<input type="checkbox" id="{{todos.id}}" (change)="changeSelect($event)">

changeSelect(e:any){
  console.log("Event", e.target.checked)
}

checking for null
document.querySelector(`.input-${e.target.id} + p`)!.classList.toggle('crossOutTxt')

//binds to aria-label
[attr.aria-label]="cardDetails"

.HTML
<select id="sortSelect" (change)="changeSelect($event)">
  <option
    *ngFor="let method of sortingMethod; let idx = index"
    value="{{method}}"
    [selected]="idx == 0">
    {{method}}
  </option>
</select>

.TS
changeSelect(e:any){

  let arr = this.userTodos

  if( e.target.value == 'ID'){

    arr.sort( (a,b) => a.id - b.id )

  }
  else{
    arr.sort( (a,b) => a.title.localeCompare(b.title) )
  }

  this.userTodos = arr

}

//binds on key press
(keydown.enter)="onEnter(element.id)"


angular material
-select
app.module.ts
import {MatSelectModule} from '@angular/material/select';
import {MatFormFieldModule} from '@angular/material/form-field';

imports: [
  MatSelectModule,
  MatFormFieldModule
]

.html
<mat-form-field appearance="fill">
  <mat-label>Sort By</mat-label>
  <mat-select [(value)]="selectedOption" (valueChange)="changeSelect($event)">
    <mat-option
      *ngFor="let method of sortingMethod"
      [value]="method">
      {{method}}
    </mat-option>
  </mat-select>
</mat-form-field>

.TS
changeSelect(value:any){

  let arr = this.userTodos

  if( value == 'ID'){

    arr.sort( (a,b) => a.id - b.id )

  }
  else{
    arr.sort( (a,b) => a.title.localeCompare(b.title) )
  }

  this.userTodos = arr

}


table

.html
<table mat-table  class="mat-elevation-z8" [dataSource]="objArr">
  <ng-container matColumnDef="objField">
    <th mat-header-cell *matHeaderCellDef> No. </th>  //remove this if no headers are used
    <td mat-cell *matCellDef="let element"> {{element.objField}} </td>
  </ng-container>

  <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>  //remove this if no headers are used
  <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
</table>

.ts
displayedColumns:string[] = ['objField']


button
<button mat-button>Basic</button>
<button mat-raised-button>Basic</button>
<button mat-stroked-button>Basic</button>
<button mat-flat-button>Basic</button>
<button mat-fab color="primary" aria-label="Example icon button with a delete icon">
<button mat-mini-fab color="primary" aria-label="Example icon button with a menu icon">


<button mat-icon-button
  aria-label="Expand Collapse card"
  (click)="showUserDetails(idx)"
  [class]=" (user.showUserDetails) ? 'expanded-card':'' ">
  <span class="material-icons">chevron_right</span>
</button>

Material design
download https://unpkg.com/material-components-web@latest/dist/material-components-web.css
<div class="mdc-layout-grid">
   <div class="mdc-layout-grid__inner">
      <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-6 demo-cell">
        <span class="material-icons">face</span>
      </div>
   </div>
</div>

//cdn
<head>
  <link href="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>
</head>


//dialog
app.module.ts
import {MatDialogModule} from '@angular/material/dialog';

imports: [

  MatDialogModule
],


.ts
import {MatDialog} from '@angular/material/dialog';

constructor(public dialog: MatDialog ) {

  const dialogRef = this.dialog.open(ModalDeleteComponent,{ data:{checkboxLabel:checkboxLabel} }

}

//ModalDeleteComponent
.ts
import {MAT_DIALOG_DATA} from '@angular/material/dialog';

export class ModalDeleteComponent implements OnInit {

  constructor(@Inject(MAT_DIALOG_DATA) public data:DialogData ) { }

  ngOnInit(): void {
  }

}

interface DialogData {
  checkboxLabel: string;
}

.html
<p>{{data.checkboxLabel}} was deleted</p>



html
link to google maps
https://maps.google.com/?q=<lat>,<lng>

//aria-labelledby
<input name="searchtxt" type="text" aria-labelledby="searchbtn">
<input name="searchbtn" id="searchbtn" type="submit" value="Search">


//Ember

installation
------------
npm install -g ember-cli


new project
-----------
ember new ember-quickstart --lang en
cd ember-quickstart
ember serve

publishing
----------
ember build --environment production

if publishing to a subfolder
you will need to configure the value of rootURL in config/environment.js

if (environment === 'production') {
  ENV.rootURL = 'ember-project';
}

//importing environment variables
//config/environment.js
import config from 'ember-project/config/environment';

config.modulePrefix;


//generate routes
ember generate route scientists

- routes/ .js - code behind

  export default class ConsumeRoute extends Route {

    model(){
      console.log('route', this.get('routeName'))

      return 'route'
    }
  }


  import Route from '@ember/routing/route';
  import { getOwner } from '@ember/application';

  export default class ConsumeRoute extends Route {

    model(){

      let logger = getOwner(this).lookup('service:logger');

      console.log("logger", logger)

      return  logger.propName
    }
  }

- templates/ .hbs  - html

  {{@model}}

  <LinkTo @route="scientists">
    scientists
  </LinkTo>

  {{#if @model}}
    asdasdas
  {{/if}}

//router.js
Router.map(function () {
  this.route('template', { path: '/' });
  this.route('consume');
  this.route('produce');
});


//generate components

components/.hbs
ember generate component people-list

.hbs
<h2>{{@param}}</h2>
{{this.rootURL}}


<PeopleList @param="List of Scientists"/>


.js

//@glimmer/component, good for services
ember generate component-class logger-component


//has lifecycles
import Component from '@ember/component';

export default Component.extend({
  init() {
    this._super(...arguments);
    console.log('init')
  },

  didUpdateAttrs() {
    this._super(...arguments);
    console.log('didUpdateAttrs')
  },


});


//index.html

<head>
  {{content-for "head"}}

    <link rel="icon" type="image/x-icon" href="{{rootURL}}img/fabicon.ico">

  {{content-for "head-footer"}}
</head>

<body>
  {{content-for "body"}}

  <script src="{{rootURL}}js/somefile.js"></script>

  {{content-for "body-footer"}}
</body>

//comments on hbs files
{{!-- The following component displays Ember's default welcome message. --}}

//.hbs files
{{page-title "EmberProject"}}


//Fetch example
import fetch from 'fetch';

export default class PhotosRoute extends Route {
  async model() {
    const response = await fetch('/my-cool-end-point.json');
    const photos = await response.json();

    return { photos };
  }
}

//services
ember generate service logger

import Service from '@ember/service';

export default class Logger extends Service {

  fnName(){

  }
}

//Accessing Services

.js

import Component from '@glimmer/component';
import { inject as service } from '@ember/service';

export default class CartContentsComponent extends Component {

  //@service logger; or
  @service('logger') logger;

  //this.logger.fnName()

}

.hbs
{{ this.logger.propertyName }}


//hbs

ember install ember-truth-helpers --save

{{#if (eq this.logger.filesArr.length 0)}}

{{/if}}

{{#each this.logger.filesArr as |logs index|}}
<a class="mdc-list-item mdc-list-item--activated" href="#" aria-current="page">
  <span class="mdc-list-item__ripple"></span>
  <i class="material-icons mdc-list-item__graphic" aria-hidden="true">description</i>
  <span class="mdc-list-item__text">{{logs.logName}}  {{index}}</span>
</a>
{{/each}}


//event handling

.js

import Component from '@glimmer/component';
import { tracked } from "@glimmer/tracking";
import { action } from "@ember/object";

export default class LoggerComponentComponent extends Component {

  @tracked log

  @action
  renderLog(idx, type){

      this.log = type
      console.log(idx,type, this.log)

  }
}

.hbs

<button {{on "click" this.renderLog}}>btnLabel</button>

//with parameters
<button {{on "click" (fn this.renderLog 'type')}}>btnLabel</button>


{{#each this.logger.filesArr as |logs index|}}
  <a class="mdc-list-item mdc-list-item--activated"
    href="#" aria-current="page"
    {{on "click" (fn this.renderLog index @type)}}>
      <span class="mdc-list-item__ripple"></span>
      <i class="material-icons mdc-list-item__graphic" aria-hidden="true">description</i>
      <span class="mdc-list-item__text">{{logs.logName}}</span>
  </a>
{{/each}}



//interpolation

ember install ember-truth-helpers --save

{{#each this.logger.filesArr as |logs index|}}
<a class="mdc-list-item  {{if (eq index 0)  'mdc-list-item--activated' ''}}" href="#">
  {{logs}}
</a>
{{/each}}

//to bind arrays
.js
import { A } from '@ember/array';
export default class ConsumeViewComponent extends Component {
  processFiles = A([]);
  //this.processFiles.pushObject(fileObj)
}

.hbs
<ul>
  {{#each this.processFiles as |logs|}}
  <li>
      {{logs.totalLogs}} logs
   </li>
  {{/each}}
</ul>

//to get routename in a component
.js
import { inject as service } from '@ember/service';
export default class NavComponent extends Component {
  @service router
}

.hbs
{{this.router.currentRouteName}}


//route to index page
<LinkTo @route="index" class="mdc-icon-button project-title" role="button">
  <span class="mdc-top-app-bar__title">
    Ember Project
  </span>
</LinkTo>

//js
window.location.protocol = “http:”
window.location.host = “css-tricks.com”
window.location.pathname = “/example/index.html”
window.location.search = “?s=flexbox”




//developer tools
to freeze dom
select sources tab
win -> f8
mac -> fn + f8

//js scoping
It's permissible in javascript to declare same variable twice in the same scope with var

The function declaration in the block uses ES6 declaration semantics (like let or const), which does not allow redeclarations.


//js
access aria-label attribute
document.querySelector('.mdc-list > a').getAttribute('aria-label')


//How to import local json file data
Using require module

const data = require('./employees.json');
console.log(data);


Spring Boot Rest API
--------------------

Start new project
- start.spring.io (Spring Web Dependency)
  - download project

If using Eclipse
  - MarketPlace
    - install Spring Tool Suite
  -Open project as spring boot

To pretty print json
  src/main/resources
    -application.properties
      spring.jackson.serialization.INDENT_OUTPUT=true




  package com.example.demo;

  import org.springframework.boot.SpringApplication;
  import org.springframework.boot.autoconfigure.SpringBootApplication;
  import org.springframework.web.bind.annotation.GetMapping;
  import org.springframework.web.bind.annotation.RequestParam;
  import org.springframework.web.bind.annotation.RestController;
  import java.util.concurrent.atomic.AtomicInteger;
  import java.util.*;


  @RestController
  @SpringBootApplication
  public class DemoApplication {

  	public AtomicInteger retId = new AtomicInteger();

  	public static void main(String[] args) {
  		SpringApplication.run(DemoApplication.class, args);
  	}


/*
    @GetMapping(value = "/users")
      public Users getUsers() {
    }
    //post request
    @PostMapping(value = "/users")
      public User createUser(User user) {
    }

    @GetMapping(value = "/users/{id}")
      public User getUser(@PathVariable("id") String id) {
    }
  */

  	@GetMapping("/")
  	public Retvals index(@RequestParam(value = "name", defaultValue = "World") String name) {


  		Retvals returnValue = new Retvals(retId.incrementAndGet() ,String.format("Hello %s!", name));

      //returns as json object
  		return returnValue;
  	}

    @GetMapping("/retList")
    	public ArrayList<Retvals> index(@RequestParam(value = "name", defaultValue = "World") String name) {

    		ArrayList<Retvals> retList = new ArrayList<Retvals>();
    		retList.add(new Retvals(retId.incrementAndGet() ,String.format("Hello %s!", name)));
    		retList.add(new Retvals(retId.incrementAndGet() ,String.format("Hello %s!", name)));

    		return retList;
    	}

  }


  package com.example.demo;

  public class Retvals {

  	public int id;
  	public String value;

  	public Retvals(int id, String value){
  		this.id = id;
  		this.value = value;
  	}

  }


//eclipse
installing jdbc driver
https://dev.mysql.com/downloads/connector/j/
-download platform independent
-untar/unzip file

- to add dependencies
  right click on project
    -Properties
      - Java build path
        - classpath
          reference the untar/unzip file


//Java db request
- install jdbc driver

package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.sql.*;
import java.util.*;
import java.util.concurrent.atomic.AtomicInteger;


@RestController
@SpringBootApplication
public class DemoApplication {

	public AtomicInteger retId = new AtomicInteger();
	public ArrayList<Retvals> retList;

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
	}

	@GetMapping("/")
	public ArrayList<Retvals> index(@RequestParam(value = "name", defaultValue = "World") String name) {

		retList = new ArrayList<>();
		String url = "jdbc:mysql://localhost:3306/rcs_code";
		String username = "root";
		String password = "";
		Connection connection = null;
		String sql = "SELECT * FROM `cheatSheet`";
		Statement statement = null;
		ResultSet rs = null;


		System.out.println("Connecting database...");

		try {

			try {
				Class.forName("com.mysql.jdbc.Driver");
			    System.out.println("Driver loaded!");
			}
			catch(ClassNotFoundException e) {
				System.out.println(e);
			}


			connection = DriverManager.getConnection(url, username, password);

      /*
      PreparedStatement statement = connection.prepareStatement("select * from students where age> ? and name = ?");
      statement.setInt(1,10);
      statement.setString(2,"Chhavi");
      */
			statement = connection.createStatement();

			rs = statement.executeQuery(sql);

			while (rs.next()) {


			    retList.add(new Retvals(rs.getInt("id")  ,rs.getString("lng") ));
			}



			System.out.println("Database connected!");
		}
		catch (SQLException e) {
			System.out.println("Cannot connect the database!");
		}
		finally{
			try {
				connection.close();
			} catch (SQLException e) {
				System.out.println(e);
			}

		}


		return retList;
	}

}


//ubuntu
-add packages
sudo apt-get -y packagename

-remove packages
sudo apt-get -y purge --auto-remove packagename

- enable modules
sudo a2enmod moduleName

-verifies if changes are correct
sudo apache2ctl configtest

//python

//Running python on cli
python -c "import flask; print(flask.__version__)"


//installing flask

- pip install flask
- create flask init page
  - if the file is named app.py or wsgi.py, you don’t have to set the FLASK_APP environment variable.

  #app.py
  from flask import Flask, render_template

  app = Flask(__name__)

  @app.route("/")
  def hello_world():
    #return "<p>Hello, World!</p>"

    #templates directory must be created
    return render_template('index.html')

  #templates/index.html
  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <title>Python</title>
  </head>
  <body>
     <h1>Python</h1>
  </body>
  </html>

- flask run


//reference static folder assets
<link rel="stylesheet" href="{{ url_for('static', filename= 'css/styles.css') }}">

//routing
app.py

from flask import Flask, render_template
app = Flask(__name__)

@app.route("/")
def func_definition():
  #templates directory must be created
  return render_template('index.html')

.html
//uses function name
<a class="navbar-brand" href="{{ url_for('func_definition')}}">Python</a>

<a class="navbar-brand" href="/python">Python</a>

//Flask handling http requests

//get request
@app.route("/")
def index():
  print(request.args.get('param'))
  return render_template('index.html')

//post
@app.route('/post', methods=['POST'])
def postPage():
    print(request.form.get('param'))
    return render_template('index.html')


//extending base pages

.index.html
<body>
   <h1>Index page</h1>
   {% block title %}  {% endblock %}
   {% block content %} {% endblock %}

</body>

.template.html

{% extends 'index.html' %}

{% block title %}
  <h1>Template Page</h1>
{% endblock %}

{% block content %}
    <a class="navbar-brand" href="{{ url_for('index')}}">Index page</a>
{% endblock %}

//http Request

pip install requests

import requests

response = requests.get("http://rcsproductions.us/content-builder.php?type=asp")
print(response.json())





//db connection

pip install requests

.template.html

{% extends 'index.html' %}

{% block title %}
  <h1>Template Page</h1>
{% endblock %}

{% block content %}
    <a class="navbar-brand" href="{{ url_for('index')}}">Python</a>
    {% for row in rows %}
      <h2>{{ row[1] }}</h2>
    {% endfor %}
{% endblock %}

from flask import Flask, render_template
from mysql.connector import connect, Error


app = Flask(__name__)

@app.route("/template")
def python_page():

    try:
        with connect(
            host="localhost",
            user="root",
            password="",
            database="rcs_code"
        ) as connection:
            print(connection.cursor())
            cursor = connection.cursor()
            cursor.execute("select * from cheatSheet")
            rows = cursor.fetchall()


    except Error as e:
        print(e)

    finally:
        print(connection)
        connection.close()
    #returns template and tuple
    return render_template('template.html',rows=rows)

python
import json


json.loads('{param:"asdad"}') //string
json.dumps() //Python object

//macos
display file permissions in octal
stat -f '%A %N' *


//to execute python scripts on xampp
httpd.conf
-add .py
  AddHandler cgi-script .cgi .pl .py
  - restart apache

-create file and chmod 755 index.py


//ubuntu
list available packages

apt-cache search keyword


//How To Install mod_wsgi on Ubuntu
sudo apt-get -y update
sudo apt-get -y install apache2 apache2-utils libexpat1 ssl-cert python
sudo apt-get -y install libapache2-mod-wsgi
sudo systemctl restart apache2

sudo vi /var/www/html/python-project/test_script.py
  -def application(environ,start_response):
    status = '200 OK'
    html = '\n' \
           '\n' \
           ' mod_wsgi is working\n' \
           '\n' \
           '\n'
    response_header = [('Content-type','text/html')]
    start_response(status,response_header)
    return [html]

sudo vi /etc/apache2/conf-available/wsgi.conf
- WSGIScriptAlias /python-project /var/www/html/python-project/

sudo a2enconf wsgi
sudo systemctl reload apache2
sudo systemctl restart apache2


vim
comment out code
esc - ctrl + v (visual mode)
  - up/down keys to highlight code
  - ctrl + i (insert mode)
  - enter symbol ( /,#)
    - esc

//django
creates a virtual project environment
- python3 -m venv ~/.virtualenvs/djangodev
- source ~/.virtualenvs/djangodev/bin/activate
  - to exit
    - deactivate

//installs django
python -m pip install Django
python -m django --version

//creates a new project
django-admin startproject mysite
- cd mysite
-python manage.py startapp projectApp
  - python manage.py runserver

-python manage.py migrate
  //creates tables in the sqlite db




//routing
mysite/urls.py

from django.contrib import admin
from django.urls import path,include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('polls/',include('polls.urls'))
]


//polls/urls.py
from django.urls import path

from . import views

urlpatterns = [
    path('', views.index, name='index'),
]

//polls.views.py
from django.http import HttpResponse
from .models import Question


def index(request):
    #return HttpResponse("Hello, world. You're at the polls index.")

    #string format
    #response = "You're looking at the results of question %s."
    #return HttpResponse(response % question_id)

    latest_question_list = Question.objects.order_by('-pub_date')[:5] #descending and limit
    output = ', '.join([q.question_text for q in latest_question_list])
    return HttpResponse(output)

//django api terminal

python manage.py shell
- to disconnect ctrl + d

>>> from polls.models import Choice, Question

# Make sure our __str__() addition worked.
>>> Question.objects.all()
<QuerySet [<Question: What's up?>]>

# Django provides a rich database lookup API that's entirely driven by
# keyword arguments.
>>> Question.objects.filter(id=1)
<QuerySet [<Question: What's up?>]>
>>> Question.objects.filter(question_text__startswith='What')
<QuerySet [<Question: What's up?>]>

//sqlite cli commands

//connect to instance
sqlite instance.db

//disconnect instance
ctrl + d

//show tables
.tables

//Getting the structure of a table
.schema table_name

----------------------------------

//creates model

//projectApp - polls/models.py

import datetime

from django.db import models
from django.utils import timezone


class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')

    def __str__(self):
      return self.question_text

    def was_published_recently(self):
        return self.pub_date >= timezone.now() - datetime.timedelta(days=1)

//project root - settings.py

INSTALLED_APPS = [
    'polls.apps.PollsConfig',

]

python manage.py makemigrations polls
python manage.py migrate


//admin page - /admin
python manage.py createsuperuser


//adding projectApp to admin page
//polls/admin.py

from django.contrib import admin

from .models import Question


class QuestionAdmin(admin.ModelAdmin):
    #arranges fields into view
    fields = ['pub_date', 'question_text']

    #creates fieldsets
    fieldsets = [
          (None,               {'fields': ['question_text']}),
          ('Date information', {'fields': ['pub_date']}),
      ]

    #adds a “Filter” sidebar which filters the change list by the pub_date field:
    list_filter = ['pub_date']
    search_fields = ['question_text']

admin.site.register(Question, QuestionAdmin)


//Adding related models
from django.contrib import admin

from .models import Question, Choice

#admin.TabularInline
class ChoiceInline(admin.StackedInline):
    model = Choice
    extra = 3

class QuestionAdmin(admin.ModelAdmin):
    fieldsets = [
        ('Date information', {'fields': ['pub_date']}),
        (None,               {'fields': ['question_text']}),
    ]
    inlines = [ChoiceInline]

    #renders a tuple of field names to display, as columns, on the change list page
    list_display = ('question_text', 'pub_date', 'was_published_recently')

admin.site.register(Question,QuestionAdmin)

//passing objects to templates
//polls/views.py

from django.template import loader
from django.shortcuts import render

def index(request):
    latest_question_list = Question.objects.order_by('-pub_date')[:5]
    #request, templates/index.html,object
    return render(request, 'index.html', {'field': 'asdada'})

//templates/index.html

{{ field }}

<ul>
{% for question in question_list %}
    <li><a href="/polls/{{ question.id }}/">{{ question.question_text }}</a></li>
{% endfor %}
</ul>

//setting debug False
settings.py

DEBUG = False
ALLOWED_HOSTS = ['*']


//data manipulation


//polls.views.py
from django.http import Http404
from django.shortcuts import render

from .models import Question

def detail(request, question_id):
    try:
        question = Question.objects.get(pk=question_id) # dbFieldName=

    except Question.DoesNotExist:
        raise Http404("Question does not exist")
    return render(request, 'detail.html', {'question': question})

#shortcut
def detail(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    return render(request, 'detail.html', {'question': question})


//links

//polls/urls.py
path('<int:question_id>/', views.detail, name='detail'),

//templates/ .html
<li><a href="/polls/{{ question.id }}/">{{ question.question_text }}</a></li>
<li><a href="{% url 'detail' question.id %}">{{ question.question_text }}</a></li>

//namespacing

//polls/urls.py
app_name = 'polls'
urlpatterns = []

//templates/ .html
<li><a href="{% url 'polls:detail' question.id %}">{{ question.question_text }}</a></li>


//binding

<form action="{% url 'polls:vote' question.id %}" method="post">
{% csrf_token %}
<fieldset>
    <legend><h1>{{ question.question_text }}</h1></legend>
    {% if error_message %}<p><strong>{{ error_message }}</strong></p>{% endif %}
    <!-- Selects all choices bound by question id-->
    {% for choice in question.choice_set.all %}
        <input type="radio" name="choice" id="choice{{ forloop.counter }}" value="{{ choice.id }}">
        <label for="choice{{ forloop.counter }}">{{ choice.choice_text }}</label><br>
    {% endfor %}
</fieldset>
<input type="submit" value="Vote">
</form>


//csrf_token
all POST forms that are targeted at internal URLs should use the {% csrf_token %} template tag.

<form action="{% url 'polls:vote' question.id %}" method="post">
{% csrf_token %}
</form>

//generic views
//polls/urls.py
from django.urls import path

from . import views

app_name = 'polls'

urlpatterns = [
    #polls/generic-list
    path('generic-list', views.GenericList.as_view(), name='generic-list'),

    #/polls/5/generic-detail'/
    path('<int:pk>/generic-detail', views.GenericDetail.as_view(), name='generic-detail'),
]

//polls.views.py

from django.views import generic

class GenericList(generic.ListView):
    template_name = 'index.html'
    context_object_name = 'latest_question_list'

    def get_queryset(self):
        return Question.objects.order_by('-pub_date')[:5]

#generic.DetailView requires PK-id in url - polls/5/generic-detail'/
class GenericDetail(generic.DetailView):
    model = Question
    template_name = 'detail.html'

//testing models
//polls/tests.py

import datetime
from django.test import TestCase
from django.utils import timezone

from .models import Question

class QuestionModelTests(TestCase):

    def test_was_published_recently_with_future_question(self):
        """
        was_published_recently() returns False for questions whose pub_date
        is in the future.
        """
        time = timezone.now() + datetime.timedelta(days=30)
        future_question = Question(pub_date=time)
        self.assertIs(future_question.was_published_recently(), False)

//testing Views in api terminal

from django.test.utils import setup_test_environment
setup_test_environment()

from django.test import Client
client = Client()
#using namespace app_name = 'polls' //polls/urls.py
response = client.get(reverse('polls:index'))
response
response.content
response.context['latest_question_list']


//reference static resources

//polls/static/css/styles.css

.html
{% load static %}

<link rel="stylesheet" type="text/css" href="{% static 'css/styles.css' %}">


//deploying app
settings.py

- have a separate settings.py file for production
- DEBUG This should be set as False in production (DEBUG = False).
- SECRET_KEY This is a large random value used for CSRF protection etc. It is important that the key used in production is not in source control or accessible outside the production server.


python
file handling
with open('/etc/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()



//string format
html="""
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
  </head>
  <body>
    {type}
  </body>
</html>
"""


html.format(type = 'works')

//wsgi
querystring

#!/usr/bin/env python

import os,json
from cgi import parse_qs, escape

def application(environ,start_response):
    status = '200 OK'
    html="""
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
  </head>
  <body>
    {queryStringField}
  </body>
</html>
"""
    response_header = [('Content-type','text/html')]
    start_response(status,response_header)
    queryValues = parse_qs(environ['QUERY_STRING'])
    return [
      html.format(queryStringField = queryValues['queryStringField'][0])
    ]

//try except
try:
  result = open('adad.html','r')
  print(result.read())
except Exception,e:
  print(e)


homebrew
--------
brew install packageName
brew uninstall packageName


sudo ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew --version

//run the below command to ensure everything is configured correctly.
brew doctor

//to upgrade
cd "$(brew --repo)" git fetch && git reset --hard origin/master && brew update

//to uninstall
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)"


//installing apache

//Removes built-in Apache server (if any) from your system
sudo apachectl stop
sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist

//starts apache
sudo brew services start httpd  //localhost:8080


//enable module for htaccess
LoadModule rewrite_module lib/httpd/modules/mod_rewrite.so

vi /usr/local/etc/httpd/httpd.conf
Find the line with
Listen 8080

and change it to
Listen 80

//The default document root
cd /usr/local/var/www

<Directory /usr/local/var/www>
   AllowOverride all
</Directory>

ServerName localhost

/*
if you changed the default document root

User user_name  //users
Group staff   //groups
*/




#sudo apachectl stop
#sudo apachectl start
sudo apachectl -k restart


//install php
brew install php

 vi /usr/local/etc/httpd/httpd.conf
To enable PHP in Apache add the following to httpd.conf and restart Apache:
    LoadModule php_module /usr/local/opt/php/lib/httpd/modules/libphp.so

    <FilesMatch \.php$>
        SetHandler application/x-httpd-php
    </FilesMatch>

Finally, check DirectoryIndex includes index.php
    DirectoryIndex index.php index.html


sudo apachectl -k restart

//to verify php version

export PATH=/usr/local/etc/php/8.0:$PATH

php -v


echo "<?php phpinfo(); ?>" > /usr/local/var/www/phpinfo.php

http://localhost/phpinfo.php


//If you have both versions of PHP installed, you can switch between versions using the link and unlink brew commands.
For example, to switch between PHP 7.4 and PHP 7.3

brew unlink php@7.4
brew link php@7.3


//install mysql
brew install mysql


brew services start mysql
#brew services stop mysql

//to change port
vi /usr/local/etc/my.cnf

port=23306

brew services restart mysql

//install phpmyadmin

brew install phpmyadmin


vi /usr/local/etc/httpd/httpd.conf

Alias /phpmyadmin /usr/local/share/phpmyadmin
<Directory /usr/local/share/phpmyadmin/>
    Options Indexes FollowSymLinks MultiViews
    AllowOverride All
    <IfModule mod_authz_core.c>
        Require all granted
    </IfModule>
    <IfModule !mod_authz_core.c>
        Order allow,deny
        Allow from all
    </IfModule>
</Directory>

//allow root w/o password
vi /usr/local/etc/phpmyadmin.config.inc.php

//allows roots w/o password - development
$cfg['Servers'][$i]['AllowNoPassword'] = true;

//sets mysql port if needed
$cfg['Servers'][$i]['host'] = 'localhost:23306';

//magento

https://magento.com/tech-resources/download?_ga=2.19204666.384218413.1637291931-84529853.1637291931

composer install

find . -type f -exec chmod 644 {} \;
find . -type d -exec chmod 755 {} \;
chmod -Rf 777 var
chmod -Rf 777 pub/static
chmod -Rf 777 pub/media
chmod 777 ./app/etc
chmod 644 ./app/etc/*.xml
chmod -Rf 775 bin

find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +
find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +
chown -R :staff .
chmod u+x bin/magento

//disables Magento_Elasticsearch
php bin/magento module:disable {Magento_Elasticsearch,Magento_Elasticsearch6,Magento_Elasticsearch7}

php bin/magento setup:install  --base-url="http://localhost:8080/" --db-host="localhost:23306" --db-name="magento2" --db-user="root" --db-password="" --admin-firstname="admin" --admin-lastname="admin" --admin-email="rc336@njit.edu" --admin-user="admin" --admin-password="admin123" --language="en_US" --currency="USD" --timezone="America/Chicago" --use-rewrites="1" --backend-frontname="admin"

//troubleshooting
-Memory limit has been reached
  - php.ini
    memory_limit = 768M
    max_execution_time = 18000


//structure
Structural block is used to separate the theme into sections
  -Header
  -Left
  -Content
  -Right
  -Footer

//adding css/js

<action method="addCss">
  <stylesheet>css/styles.css</stylesheet>
</action>
<action method="addJs">
  <script>varien/js.js</script>
</action>
<action method="addItem">
  <type>skin_css</type>
  <name>css/styles-ie.css</name>
  <params/>
  <if>lt IE 8</if>
</action>


//adding products
- admin interface
  - catalog
    - add product

- adding product list widget on pages
  - admin interface
    - content
      - pages
        - select page - edit
          - hide / show editor
            - insert widget



- changing layout on pages
  - admin interface
    - content
      - pages
        - select page - edit
          - design


- to create modules
  -create folder app/code/Magento/NewModule
    - NewModule/etc
      - module.xml
        <?xml version="1.0"?>
        <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
            <module name="Magento_NewModule" setup_version="1.0.0"/>
        </config>

    - NewModule/registration.php
      <?php
      use Magento\Framework\Component\ComponentRegistrar;
      ComponentRegistrar::register(ComponentRegistrar::MODULE, 'Magento_NewModule', __DIR__);

    - checks if module was created
      php bin/magento module:status

    - to enable module
      - app/etc/config.php
      <?php
      return [
          'modules' => [
              'Magento_NewModule' => 1,

      or

      php bin/magento module:enable Magento_NewModule
      // php bin/magento module:disable Magento_NewModule

     - php bin/magento setup:upgrade

     - troubleshooting
        - php bin/magento setup:static-content:deploy


- to create module's controller

  //Route’s in magento are divided into 3 parts: Route frontname, controller and action as following example:

  http://domain/frontname/controller/action

  - NewModule/Controller/Index/Test.php
  - http://localhost:8080/new-module/index/test

  - NewModule/etc/frontend/routes.xml
    <?xml version="1.0"?>
    <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
        <router id="standard">
            <route id="newmodule" frontName="new-module">
                <module name="Magento_NewModule"/>
            </route>
        </router>
    </config>


  - NewModule/Controller/Index/Test.php
    <?php
    namespace Magento\NewModule\Controller\Index;

    use Magento\Framework\App\Action\Context;
    use Magento\Framework\View\Result\PageFactory;

    class Test extends \Magento\Framework\App\Action\Action
    {
      protected $_pageFactory;

      public function __construct(
        Context $context,
        PageFactory $pageFactory)
      {
        $this->_pageFactory = $pageFactory;
        return parent::__construct($context);
      }

      public function execute()
      {
        echo "Hello World";
        exit;
      }
    }



  - php bin/magento cache:clean
  - browse http://localhost:8080/new-module/index/test


  - creates index page for module

    - NewModule/Controller/Index/Index.php
      <?php
      namespace Magento\NewModule\Controller\Index;

      use Magento\Framework\App\Action\Context;
      use Magento\Framework\View\Result\PageFactory;

      class Index extends \Magento\Framework\App\Action\Action
      {
        protected $_pageFactory;

        public function __construct(
          Context $context,
          PageFactory $pageFactory)
        {
          $this->_pageFactory = $pageFactory;
          return parent::__construct($context);
        }

        public function execute()
        {
          return $this->_pageFactory->create();
        }
      }

    - NewModule/Block/index.php  //code behind for templates
      <?php
      namespace Magento\NewModule\Block;
      class Index extends \Magento\Framework\View\Element\Template
      {
          public function displayH1()
          {
            return __('<h1>New Module</h1>');
          }
      }

    - NewModule/view/frontend/layout/newmodule_index_index.xml
    //{router_id}_{controller_folder_name}_{action_filename}.xml.

      <?xml version="1.0"?>
      <page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
          <referenceContainer name="content">
              <block class="Magento\NewModule\Block\Index" name="newmodule_index_index" template="Magento_NewModule::index.phtml" />
          </referenceContainer>
      </page>

    -- NewModule/view/frontend/layout/templates/index.phtml
      <?php
      echo $block->displayH1();

      ?>
      <p>It works</p>

    - php bin/magento cache:clean
    - browse http://localhost:8080/new-module

//to clear cache
php bin/magento cache:clean


//create database table for CRUD models

- NewModule/etc //set setup_version
  - module.xml
    <?xml version="1.0"?>
    <config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Module/etc/module.xsd">
        <module name="Magento_NewModule" setup_version="1.0.0"/>
    </config>

- NewModule/Setup
  - installSchema.php  //runs once when module is installed
  - UpgradeSchema.php  //runs only when setup_version is different

  <?php

  namespace Magento\NewModule\Setup;

  use Magento\Framework\Setup\InstallSchemaInterface;
  use Magento\Framework\Setup\SchemaSetupInterface;
  use Magento\Framework\Setup\ModuleContextInterface;
  use Magento\Framework\DB\Ddl\Table;

  // class UpgradeSchema
  class InstallSchema implements InstallSchemaInterface
  {

    //public function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)
  	public function install(SchemaSetupInterface $setup, ModuleContextInterface $context)
  	{
  		$installer = $setup;
  		$installer->startSetup();

      //if(version_compare($context->getVersion(), '1.1.0', '<')){}
  		if (!$installer->tableExists('newmodule_post')) {
  			$table = $installer->getConnection()->newTable(
  				$installer->getTable('newmodule_post')
  			)
  				->addColumn(
  					'post_id',
  					Table::TYPE_INTEGER,
  					null,
  					[
  						'identity' => true,
  						'nullable' => false,
  						'primary'  => true,
  						'unsigned' => true,
  					],
  					'Post ID'
  				)
  				->addColumn(
  					'name',
  					Table::TYPE_TEXT,
  					255,
  					['nullable => false'],
  					'Post Name'
  				)
  				->addColumn(
  					'url_key',
  					Table::TYPE_TEXT,
  					255,
  					[],
  					'Post URL Key'
  				)
  				->addColumn(
  					'post_content',
  					Table::TYPE_TEXT,
  					'64k',
  					[],
  					'Post Post Content'
  				)
  				->addColumn(
  					'tags',
  					Table::TYPE_TEXT,
  					255,
  					[],
  					'Post Tags'
  				)
  				->addColumn(
  					'status',
  					Table::TYPE_INTEGER,
  					1,
  					[],
  					'Post Status'
  				)
  				->addColumn(
  					'featured_image',
  					Table::TYPE_TEXT,
  					255,
  					[],
  					'Post Featured Image'
  				)
  				->addColumn(
  						'created_at',
  						Table::TYPE_TIMESTAMP,
  						null,
  						['nullable' => false, 'default' => Table::TIMESTAMP_INIT],
  						'Created At'
  				)->addColumn(
  					'updated_at',
  					Table::TYPE_TIMESTAMP,
  					null,
  					['nullable' => false, 'default' => Table::TIMESTAMP_INIT_UPDATE],
  					'Updated At')
  				->setComment('Post Table');
  			$installer->getConnection()->createTable($table);

  		}
  		$installer->endSetup();
  	}
  }

- php bin/magento setup:upgrade

  //if upgrading, update module.xml
    - <module name="Magento_NewModule" setup_version="1.1.0"/>


//uninstall schema
- NewModule/Setup/Uninstall.php
- php bin/magento setup:uninstall

    <?php
    namespace Magento\NewModule\Setup;

    use Magento\Framework\Setup\UninstallInterface;
    use Magento\Framework\Setup\SchemaSetupInterface;
    use Magento\Framework\Setup\ModuleContextInterface;

    class Uninstall implements UninstallInterface
    {
    	public function uninstall(SchemaSetupInterface $setup, ModuleContextInterface $context)
    	{
    		$installer = $setup;
    		$installer->startSetup();

    		$installer->getConnection()->dropTable($installer->getTable('mageplaza_helloworld_post'));

    		$installer->endSetup();
    	}
    }

//gets DB data from controller

<?php
namespace Magento\NewModule\Controller\Index;

use Magento\Framework\App\Action\Context;
use Magento\Framework\View\Result\PageFactory;

class Test extends \Magento\Framework\App\Action\Action
{
	protected $_pageFactory;

	public function __construct(Context $context,PageFactory $pageFactory)
	{
		$this->_pageFactory = $pageFactory;

		return parent::__construct($context);
	}

public function execute()
{
    $objectManager =   \Magento\Framework\App\ObjectManager::getInstance();
    $connection = $objectManager->get('Magento\Framework\App\ResourceConnection')->getConnection('\Magento\Framework\App\ResourceConnection::DEFAULT_CONNECTION');
    $result1 = $connection->fetchAll("SELECT * FROM newmodule_post");


    echo "<pre>";
      print_r($result1);
    echo "</pre>";

  exit;

}

//Troubleshooting
  - Exception printing is disabled by default for security reasons
    - rename pub/local.xml.sample to pub/local.xml


//creates model
- app/code/Magento/NewModule/Model/Post.php

<?php
namespace Magento\NewModule\Model;

use  Magento\Framework\Model\AbstractModel;


class Post extends AbstractModel
{

	protected function _construct()
	{
		$this->_init('Magento\NewModule\Model\ResourceModel\Post');
	}

}

- app/code/Magento/NewModule/Model/ResourceModel/Post.php
  <?php
  namespace Magento\NewModule\Model\ResourceModel;

  use Magento\Framework\Model\ResourceModel\Db\AbstractDb;
  use Magento\Framework\Model\ResourceModel\Db\Context;


  class Post extends AbstractDb
  {

  	public function __construct(Context $context)
  	{
  		parent::__construct($context);
  	}

  	protected function _construct()
  	{
  		$this->_init('newmodule_post', 'post_id');
  	}

  }

- app/code/Magento/NewModule/Model/ResourceModel/Post/Collection.php
  <?php
  namespace Magento\NewModule\Model\ResourceModel\Post;

  use Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection;

  class Collection extends AbstractCollection
  {

    protected function _construct()
    {
      $this->_init('Magento\NewModule\Model\Post', 'Magento\NewModule\Model\ResourceModel\Post');
    }

  }

//to use the model

app/code/Magento/NewModule/Block/Test.php

  <?php
  namespace Magento\NewModule\Block;

  //Dependency injection, no need to create this class
  use Magento\NewModule\Model\PostFactory;

  use Magento\Framework\View\Element\Template\Context;
  use Magento\Framework\App\ObjectManager;

  class Test extends \Magento\Framework\View\Element\Template
  {

      protected $_postFactory;

    	public function __construct(Context $context,PostFactory $postFactory)
    	{
    		$this->_postFactory = $postFactory;
    		parent::__construct($context);
  	   }

      public function displayH1()
    	{
    		return __('<h1>New Module</h1>');
    	}

      public function showPosts(){

        $post = $this->_postFactory->create();
        return $post->getCollection();

      }
  }

- app/code/Magento/NewModule/Controller/Index/Test.php

  <?php
  namespace Magento\NewModule\Controller\Index;

  use Magento\Framework\App\Action\Context;
  use Magento\Framework\View\Result\PageFactory;

  class Test extends \Magento\Framework\App\Action\Action
  {
  	protected $_pageFactory;

  	public function __construct(Context $context,PageFactory $pageFactory)
  	{
  		$this->_pageFactory = $pageFactory;
  		return parent::__construct($context);
  	}

  	public function execute()
  	{
  		return $this->_pageFactory->create();
  	}

  }

- app/code/Magento/NewModule/view/frontend/layout/newmodule_index_test.xml

  <?xml version="1.0"?>
  <page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
      <referenceContainer name="content">
          <block class="Magento\NewModule\Block\Test" name="newmodule_index_test" template="Magento_NewModule::test.phtml" />
      </referenceContainer>
  </page>

- app/code/Magento/NewModule/view/frontend/templates/test.phtml
  <?php
  echo $block->displayH1();

  $collection = $block->showPosts();

  foreach($collection as $item){
    echo "<pre>";
    print_r($item->getData());
    echo "</pre>";
  }

  ?>
  <p>It works</p>

  //to reference model

  <?php
  namespace Magento\NewModule\Block;

  use Magento\NewModule\Model\PostFactory;
  use Magento\Framework\View\Element\Template\Context;
  use Magento\Framework\App\ObjectManager;


  class Test extends \Magento\Framework\View\Element\Template
  {

      protected $_postFactory;

    	public function __construct(Context $context,PostFactory $postFactory)
    	{
    		$this->_postFactory = $postFactory;
    		parent::__construct($context);
  	   }

      public function showPosts(){

        //$objectManager = ObjectManager::getInstance();
        //$newPost = $objectManager->create('Magento\NewModule\Model\Post');

        $newPost = $this->_postFactory->create();

        $newPost->setName('new post');
        $newPost->setUrl_key('new post');
        $newPost->save();


        $data = [
      			'name'         => "How to Create SQL Setup Script in Magento 2",
      			'post_content' => "In this article, we will find out how to install and upgrade sql script for module in Magento 2. When you install or upgrade a module, you may need to change the database structure or add some new data for current table. To do this, Magento 2 provide you some classes which you can do all of them.",
      			'url_key'      => '/magento-2-module-development/magento-2-how-to-create-sql-setup-script.html',
      			'tags'         => 'magento 2,mageplaza helloworld',
      			'status'       => 1
      		];

    		$newPost->addData($data)->save();



        return $this->_postFactory->create()->getCollection();


      }
  }




  - XML Naming Rules
    Element names are case-sensitive
    Element names must start with a letter or underscore
    Element names cannot start with the letters xml (or XML, or Xml, etc)
    Element names can contain letters, digits, hyphens, underscores, and periods
    Element names cannot contain spaces
    Any name can be used, no words are reserved (except xml).

    <element></element>

    You can also use a so called self-closing tag:
    <element />


//Creates Admin Configuration

- app/code/Magento/NewModule/etc/adminhtml/system.xml

<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <tab id="newmodule" translate="label" sortOrder="10">
            <label>New Module</label>
        </tab>
        <section id="newmodule_section" translate="label" sortOrder="130" showInDefault="1" showInWebsite="1" showInStore="1">
            <class>separator-top</class>
            <label>New Module</label>
            <tab>newmodule</tab>
            <resource>Magento_NewModule::newmodule_config</resource>
            <group id="general" translate="label" type="text" sortOrder="10" showInDefault="1" showInWebsite="0" showInStore="0">
                <label>General Configuration</label>
                <class>separator-top</class>
                <field id="enable" translate="label" type="select" sortOrder="1" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Module Enable</label>
                    <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                </field>
                <field id="display_text" translate="label" type="text" sortOrder="1" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Display Text</label>
                    <comment>This text will display on the frontend.</comment>
                </field>
            </group>
        </section>
    </system>
</config>

- app/code/Magento/NewModule/etc/config.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Store:etc/config.xsd">
    <default>
        <newmodule_section>
            <general>
                <enable>1</enable>
                <display_text>Hello World - new module</display_text>
            </general>
        </newmodule_section>
    </default>
</config>

// gets values from config.xml

- app/code/Magento/NewModule/Block/Index.php

<?php
namespace Magento\NewModule\Block;

use Magento\NewModule\Helper\Data;
use Magento\Framework\View\Element\Template\Context;

class Index extends \Magento\Framework\View\Element\Template
{

    protected $_helperData;

    public function __construct(Context $context,Data $helperData)
    {
      $this->_helperData = $helperData;
      parent::__construct($context);
    }

    public function getConfigValues()
  	{

      //echo $this->_helperData->getGeneralConfig('enable');
  		return $this->_helperData->getGeneralConfig('display_text');

  	}
}

- app/code/Magento/NewModule/view/frontend/templates/index.phtml
<?php
echo $block->getConfigValues();
?>
<p>It works</p>

//creates acl and sidebar menu

-app/code/Magento/NewModule/etc/adminhtml/system.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <system>
        <tab id="newmodule" translate="label" sortOrder="10">
            <label>New Module</label>
        </tab>
        <section id="newmodule_section" translate="label" sortOrder="130" showInDefault="1" showInWebsite="1" showInStore="1">
            <class>separator-top</class>
            <label>New Module</label>
            <tab>newmodule</tab>
            <resource>Magento_NewModule::newmodule_configuration</resource>
            <group id="general" translate="label" type="text" sortOrder="10" showInDefault="1" showInWebsite="0" showInStore="0">
                <label>General Configuration</label>
                <class>separator-top</class>
                <field id="enable" translate="label" type="select" sortOrder="1" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Module Enable</label>
                    <source_model>Magento\Config\Model\Config\Source\Yesno</source_model>
                </field>
                <field id="display_text" translate="label" type="text" sortOrder="1" showInDefault="1" showInWebsite="0" showInStore="0">
                    <label>Display Text</label>
                    <comment>This text will display on the frontend.</comment>
                </field>
            </group>
        </section>
    </system>
</config>

- app/code/Magento/NewModule/etc/config.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Store:etc/config.xsd">
    <default>
        <newmodule_section>
            <general>
                <enable>1</enable>
                <display_text>Hello World - new module</display_text>
            </general>
        </newmodule_section>
    </default>
</config>

- app/code/Magento/NewModule/etc/acl.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Acl/etc/acl.xsd">
    <acl>
        <resources>
            <resource id="Magento_Backend::admin">
                <resource id="Magento_NewModule::newmodule" title="New Module" sortOrder="51">
                    <resource id="Magento_NewModule::post" title="Posts" sortOrder="10"/>
                    <resource id="Magento_NewModule::newmodule_configuration" title="Configuration" sortOrder="99" />
                </resource>
                <resource id="Magento_Backend::stores">
                    <resource id="Magento_Backend::stores_settings">
                        <resource id="Magento_Config::config">
                            <resource id="Magento_NewModule::newmodule_config" title="New Module"/>
                        </resource>
                    </resource>
                </resource>
            </resource>
        </resources>
    </acl>
</config>

- app/code/Magento/NewModule/etc/adminhtml/menu.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Backend:etc/menu.xsd">
    <menu>
        <add id="Magento_NewModule::newmodule" title="New Module" module="Magento_NewModule" sortOrder="51" resource="Magento_NewModule::newmodule"/>
        <add id="Magento_NewModule::post" title="Manage Posts" module="Magento_NewModule" sortOrder="10" action="magento_newmodule/post/index" resource="Magento_NewModule::post" parent="Magento_NewModule::newmodule"/>
        <add id="Magento_NewModule::newmodule_configuration" title="Configuration" module="Magento_NewModule" sortOrder="99" parent="Magento_NewModule::newmodule" action="adminhtml/system_config/edit/section/newmodule_section" resource="Magento_NewModule::newmodule_configuration"/>
    </menu>
</config>


//setting developer mode

bin/magento deploy:mode:show
bin/magento deploy:mode:set developer

//to check for errors / list commands
php bin/magento list


//creates template in admin site
- app/code/Magento/NewModule/etc/adminhtml/routes.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:App/etc/routes.xsd">
    <router id="admin">
        <route id="Magento_Newmodule" frontName="magento_newmodule">
            <module name="Magento_Newmodule"/>
        </route>
    </router>
</config>



- app/code/Magento/NewModule/Controller/Adminhtml/Post/Index.php
http://domain/admin/magento_newmodule/post/index

<?php

namespace Magento\NewModule\Controller\Adminhtml\Post;

use Magento\Backend\App\Action;
use Magento\Backend\App\Action\Context;
use Magento\Framework\View\Result\PageFactory;

class Index extends Action
{
	protected $resultPageFactory = false;

	public function __construct(Context $context,PageFactory $resultPageFactory)
	{
    $this->resultPageFactory = $resultPageFactory;
		parent::__construct($context);
	}

	public function execute()
	{
		$resultPage = $this->resultPageFactory->create();
		$resultPage->getConfig()->getTitle()->prepend((__('Post')));

		return $resultPage;

	}


}

- app/code/Magento/NewModule/view/adminhtml/layout/magento_newmodule_post_index.xml
<?xml version="1.0"?>
<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
    <referenceBlock name="page.title">
        <action method="setPageTitle">
            <argument name="title" xsi:type="string">Greetings</argument>
        </action>
    </referenceBlock>
    <body>
        <referenceContainer name="content">
            <block class="Magento\Backend\Block\Template" template="Magento_NewModule::posts.phtml"/>
        </referenceContainer>
    </body>
</page>

- app/code/Magento/NewModule/view/adminhtml/templates/posts.phtml
<p>It works</p>

admin grid
----------
- app/code/Magento/NewModule/Block/Adminhtml/Post.php

<?php
namespace Magento\NewModule\Block\Adminhtml;

class Post extends \Magento\Backend\Block\Widget\Grid\Container
{

	protected function _construct()
	{
		$this->_controller = 'adminhtml_post';
		$this->_blockGroup = 'Magento_NewModule';
		$this->_headerText = __('Posts');
		$this->_addButtonLabel = __('Create New Post');
		parent::_construct();
	}
}

- app/code/Magento/NewModule/view/adminhtml/layout/magento_newmodule_post_index.xml

<?xml version="1.0"?>
<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">
    <update handle="styles"/>
    <body>
        <referenceContainer name="content">
            <block class="Magento\NewModule\Block\Adminhtml\Post" name="magento_post_grid">
                <block class="Magento\Backend\Block\Widget\Grid" name="magento_post_grid.grid" as="grid">
                    <arguments>
                        <argument name="id" xsi:type="string">post_id</argument>
                        <argument name="dataSource" xsi:type="object">Magento\NewModule\Model\ResourceModel\Post\Collection</argument>
                        <argument name="default_sort" xsi:type="string">id</argument>
                        <argument name="default_dir" xsi:type="string">ASC</argument>
                        <argument name="save_parameters_in_session" xsi:type="string">1</argument>
                    </arguments>

                    <block class="Magento\Backend\Block\Widget\Grid\Massaction" name="magento.newmodule.massaction" as="grid.massaction">
                        <arguments>
                            <argument name="massaction_id_field" xsi:type="string">post_id</argument>
                            <argument name="form_field_name" xsi:type="string">ids</argument>
                            <argument name="use_select_all" xsi:type="string">1</argument>
                            <argument name="options" xsi:type="array">
                                <item name="disable" xsi:type="array">
                                    <item name="label" xsi:type="string" translate="true">Delete</item>
                                    <item name="url" xsi:type="string">*/*/massDelete</item>
                                </item>
                            </argument>
                        </arguments>
                    </block>

                    <block class="Magento\Backend\Block\Widget\Grid\ColumnSet" name="magento_post_grid.grid.columnSet" as="grid.columnSet">
                        <arguments>
                            <argument name="rowUrl" xsi:type="array">
                                <item name="path" xsi:type="string">*/*/edit</item>
                            </argument>
                        </arguments>
                        <block class="Magento\Backend\Block\Widget\Grid\Column" as="post_id">
                            <arguments>
                                <argument name="header" xsi:type="string" translate="true">ID</argument>
                                <argument name="index" xsi:type="string">post_id</argument>
                                <argument name="type" xsi:type="string">text</argument>
                                <argument name="column_css_class" xsi:type="string">col-id</argument>
                                <argument name="header_css_class" xsi:type="string">col-id</argument>
                            </arguments>
                        </block>
                        <block class="Magento\Backend\Block\Widget\Grid\Column" as="name">
                            <arguments>
                                <argument name="header" xsi:type="string" translate="true">Name</argument>
                                <argument name="index" xsi:type="string">name</argument>
                                <argument name="type" xsi:type="string">text</argument>
                                <argument name="column_css_class" xsi:type="string">col-id</argument>
                                <argument name="header_css_class" xsi:type="string">col-id</argument>
                            </arguments>
                        </block>
                        <block class="Magento\Backend\Block\Widget\Grid\Column" as="created_at">
                            <arguments>
                                <argument name="header" xsi:type="string" translate="true">Created</argument>
                                <argument name="index" xsi:type="string">created_at</argument>
                                <argument name="type" xsi:type="string">date</argument>
                                <argument name="column_css_class" xsi:type="string">col-id</argument>
                                <argument name="header_css_class" xsi:type="string">col-id</argument>
                            </arguments>
                        </block>
                        <block class="Magento\Backend\Block\Widget\Grid\Column" as="updated_at">
                            <arguments>
                                <argument name="header" xsi:type="string" translate="true">Modified</argument>
                                <argument name="index" xsi:type="string">updated_at</argument>
                                <argument name="type" xsi:type="string">date</argument>
                                <argument name="column_css_class" xsi:type="string">col-id</argument>
                                <argument name="header_css_class" xsi:type="string">col-id</argument>
                            </arguments>
                        </block>
                    </block>
                </block>
            </block>
        </referenceContainer>
    </body>
</page>

//catch events

Magento use area definition to manage the store, a frontend area and admin area.

Admin area: module/etc/adminhtml/events.xml
Frontend area: module/etc/frontend/events.xml
Global area: module/etc/events.xml

- app/code/Magento/NewModule/etc/frontend/events.xml
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">
    <event name="magento_newmodule_display_text">
        <observer name="mp_display_text" instance="Magento\NewModule\Observer\ChangeDisplayText" />
    </event>
</config>

- app/code/Magento/NewModule/Observer/ChangeDisplayText.php
<?php

namespace Magento\NewModule\Observer;

use Magento\Framework\Event\Observer;

class ChangeDisplayText implements \Magento\Framework\Event\ObserverInterface
{
	public function execute(Observer $observer)
	{
    $displayText = $observer->getData('mp_text');

		$displayText->setText('Module: '.' '.$displayText->getText());

		return $this;
	}
}

- app/code/Magento/NewModule/Block/Index.php
<?php
namespace Magento\NewModule\Block;

use Magento\Framework\View\Element\Template\Context;
use Magento\Framework\DataObject;

class Index extends \Magento\Framework\View\Element\Template
{

    public function __construct(Context $context)
    {
      parent::__construct($context);
    }

    public function getEventValue()
  	{

      $textDisplay = new DataObject(array('text' => 'Mageplaza'));
  		$this->_eventManager->dispatch('magento_newmodule_display_text', ['mp_text' => $textDisplay]);

  		return  $textDisplay->getText();

  	}
}

- app/code/Magento/NewModule/view/frontend/templates/index.phtml

<?php
echo $block->getEventValue();
?>
<p>It works</p>


// Adding commands to cli
- app/code/Magento/NewModule/etc/di.xml

<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
   <type name="Magento\Framework\Console\CommandList">
       <arguments>
           <argument name="commands" xsi:type="array">
               <item name="exampleSayHello" xsi:type="object">Magento\NewModule\Console\Sayhello</item>
           </argument>
       </arguments>
   </type>
</config>

- app/code/Magento/NewModule/Console/SayHello.php
<?php

namespace Magento\NewModule\Console;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Input\InputOption;

class Sayhello extends Command
{

	const NAME = 'name';

	protected function configure()
	{

		$options = [
			new InputOption(
				self::NAME,
				null,
				InputOption::VALUE_REQUIRED,
				'Name'
			)
		];

		$this->setName('example:sayhello')
			->setDescription('Demo command line')
			->setDefinition($options);

		parent::configure();
	}

	protected function execute(InputInterface $input, OutputInterface $output)
	{
		if ($name = $input->getOption(self::NAME)) {

			$output->writeln("Hello " . $name);


		} else {

			$output->writeln("Hello World");

		}

		return $this;

	}
}

// gets block functions
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$helloWorldBlock = $objectManager->get('Mageplaza\HelloWorld\Block\HelloWorld');
echo $helloWorldBlock->isHomePage();


//adds config view under sales tab
<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  <system> xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">
    <section id="newmodule_sales_section" translate="label" type="text" sortOrder="301" showInDefault="1" showInWebsite="1" showInStore="0">
        <label>File upload NewModule</label>
        <tab>sales</tab>
        <resource>Magento_Sales::config_sales</resource>
        <group id="custom_group" translate="label" type="text" sortOrder="6" showInDefault="1" showInWebsite="1" >
            <label>File upload</label>
        </group>
    </section>
  </system>
</config>

//gets base urls, currency,groups
- app/code/Magento/NewModule/Block/Index.php

<?php
namespace Magento\NewModule\Block;

use Magento\Framework\View\Element\Template\Context;


class Index extends \Magento\Framework\View\Element\Template
{

    protected $_urlInterface;

    public function __construct(
      Context $context,
      Data $helperData,
      \Magento\Framework\UrlInterface $urlInterface,
      \Magento\Store\Model\StoreManagerInterface $storeManager,
      \Magento\Directory\Model\Currency $currency,
      \Magento\Customer\Model\ResourceModel\Group\Collection $customerGroup ){

        $this->_urlInterface= $urlInterface;

        echo $this->_urlInterface->getCurrentUrl() . '<br />';
        echo $this->_urlInterface->getBaseUrl() . '<br />';

        echo $storeManager->getStore()->getBaseCurrencyCode() . ' getBaseCurrencyCode <br />';
        echo $storeManager->getStore()->getCurrentCurrencyCode() . ' getCurrentCurrencyCode <br />';
        echo $storeManager->getStore()->getDefaultCurrencyCode(). ' getDefaultCurrencyCode <br />';
        echo $storeManager->getStore()->getAvailableCurrencyCodes(). 'getAvailableCurrencyCodes <br />';
        echo $storeManager->getStore()->getAllowedCurrencies(). 'getAllowedCurrencies <br />';
        echo $storeManager->getStore()->getCurrentCurrencyRate(). 'getCurrentCurrencyRate <br />';
        echo $currency->getCurrencySymbol(). 'getCurrencySymbol <br />';

        $customerGroup->toOptionArray();

        echo json_encode($customerGroup);

        parent::__construct($context);
      }
}


//to get block in phtml
- app/code/Magento/NewModule/view/frontend/templates/test.phtml
<?php

echo $this->getLayout()
          ->createBlock('Magento\NewModule\Block\Index')
          ->setTemplate('Magento_NewModule::index.phtml')
          ->toHtml();
?>



//Get all needed information in your cart.
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$cart = $objectManager->get('\Magento\Checkout\Model\Cart');

// get quote items collection
$itemsCollection = $cart->getQuote()->getItemsCollection();

// get array of all items what can be display directly
$itemsVisible = $cart->getQuote()->getAllVisibleItems();

// get quote items array
$items = $cart->getQuote()->getAllItems();

foreach($items as $item) {
    echo 'ID: '.$item->getProductId().'<br />';
    echo 'Name: '.$item->getName().'<br />';
    echo 'Sku: '.$item->getSku().'<br />';
    echo 'Quantity: '.$item->getQty().'<br />';
    echo 'Price: '.$item->getPrice().'<br />';
    echo "<br />";
}
//Get the number of items in cart and total quantity in cart.
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$cart = $objectManager->get('\Magento\Checkout\Model\Cart');

$totalItems = $cart->getQuote()->getItemsCount();
$totalQuantity = $cart->getQuote()->getItemsQty();

//Get base total price and grand total price of items in cart.
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$cart = $objectManager->get('\Magento\Checkout\Model\Cart');

$subTotal = $cart->getQuote()->getSubtotal();
$grandTotal = $cart->getQuote()->getGrandTotal();
Get chosen billing and shipping addresses.
$objectManager = \Magento\Framework\App\ObjectManager::getInstance();
$cart = $objectManager->get('\Magento\Checkout\Model\Cart');

$billingAddress = $cart->getQuote()->getBillingAddress();
echo '<pre>'; print_r($billingAddress->getData()); echo '</pre>';

$shippingAddress = $cart->getQuote()->getShippingAddress();
echo '<pre>'; print_r($shippingAddress->getData()); echo '</pre>';



//to set logo
- set theme
  - Default Store View
    - edit
      - applied theme

      - header
        - upload logo

-----------

Homebew 
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"


https://rm-cortez.github.io/lbr/

==> Next steps:
- Run these commands in your terminal to add Homebrew to your PATH:
    echo >> /Users/ronaldcortez/.zprofile
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/ronaldcortez/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
- brew help to get started



Php 

Brew install php

The php.ini and php-fpm.ini file can be found in:
    /opt/homebrew/etc/php/8.3/


ssh-keygen -t ed25519 -C “rm.cortez94@gmail.com”





Project
https://github.com/LBRInt/DocNavInterview-rm-cortez/tree/main/php/models

https://rm-cortez.github.io/lbr/


curl --request POST \
  --url http://localhost:8000/api/query/grid \
  --header 'Authorization: Bearer daoijsdsa:oiajsdlasjd' \
  --header 'Content-Type: application/json' \
  --data '{
  "search": {
    "target_name": "patent_cases",
    "criteria": [{
          "name":"case_date",
          "joinpath_name":"case_terminated_date",
          "value": {"before":"2010-02-04", "after":"2006-01-01"}
    }],
    "field_names": ["case_id"],
    "section_names":[]
  },
  "orders": ["case_id DESC"],
  "start":0,
  "limit":10
}'


———————

Stupid123
rcs-productions.eastus.cloudapp.azure.com

4.246.196.66
https://rm-cortez.github.io/

Indeed resume
https://profile.indeed.com/p/ronaldc-p25rg6f

cd /Applications/XAMPP/xamppfiles/htdocs
/Users/ronaldcortez/documents/projects/

/Applications/XAMPP/xamppfiles/bin/php


Composer 

Installation

/Users/ronaldcortez/composer.phar

Download composer.phar file
- move it to a users directory
  /Users/username/.local/bin
  sudo chmod 755 composer.phar

Create alias
  - ~/.profile or ~/.bash_profile
    alias composer="php /Users/username/.local/bin/composer.phar"

Reset Terminal
Source ~/.profile
composer -v

Php /Users/ronaldcortez/composer.phar -v


php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"


Axis

get

axios({method:’get’,url:`http://localhost:8000/api/query/targets`})
    .then(response => {




                    let data = response.data
                    console.log('resp',data)

                  })//axios fetch
                  .catch(err => {
                    console.log('err')
                  })


Post

 axios.defaults.headers.common = {
      'Authorization': `bearer daoijsdsa:oiajsdlasjd'`,
      'Content-Type':'application/json'
  }

  var dt = `{
    "search": {
      "target_name": "trademark_cases",
      "criteria": [{
            "name":"case_date",
            "joinpath_name":"case_terminated_date",
            "value": {"before":"", "after":"2006-01-01"}
      }],
      "field_names": ["case_id","case_name","case_number","case_filing_date","court_abbreviation"],
      "section_names":[]
    },
    "orders": ["case_id DESC"],
    "start":0,
    "limit":10
  }`


  //axios({method:'post',url:`http://localhost:8000/api/query/targets`})
  axios.post('http://localhost:8000/api/query/grid',dt)
 .then(response => {




                    let data = response.data
                    console.log('resp',data)

                  })//axios fetch
                  .catch(err => {
                    console.log('err')
                  })


——————————
JS Interpolation

Var str = `${var}`



—————
Js export variable 

// utils.js
export const myVariable = "Hello from utils!";


import { myVariable } from './utils.js';


`${myVariable}`
———————


esLint 
To disable

Top of the file /block
/* eslint-disable */


————————

React 


React deploy subfolder
package.json

Homepage field - “homepage”:”/subdirectory/“

To pre-render
Update the child to have the attribute 'key' equal to the name. The component will re-render every time the key changes.

<div key={this.props.bar}>{this.props.bar}</div>



——————
Linux

/*Adding npm packages to path*/
.bash_profile
------------------------------
export PATH=~/.npm-global/bin:$PATH
export PATH=~/.npm-global/lib/node_modules/sass/sass.js:$PATH

Use .bash_profile (Home Directory)
on Terminal
-----------
source ~/.profile

/Users/ronaldcortez/.npm/




JS Frameworks 
React
npx create-react-app projectName. (Mac sudo)
cd projectName
npm start

React deploy subfolder
package.json

Homepage field - “homepage”:”/subdirectory/“


Vue
npm install --global @vue/cli@latest (Mac sudo)

vue create projectName
cd projectName
npm run serve
vue ui


To deploy on subfolder
Create / modify 

Vue.config.js

const { defineConfig } = require('@vue/cli-service')
module.exports = defineConfig({

  publicPath: '/vue-project/'
 —————————————
})







Angular
npm install -g @angular/cli (Mac sudo)
ng new projectName
cd projectName
ng serve

Subfolder release

   <base href="/angular-project/">.
   ng build --base-href /angular-project/



Npm install bootstrap —save

* Import Bootstrap CSS:
    * Open your Angular project's angular.json file.    
    * Locate the styles array within the build options.    
    * Add the path to the Bootstrap CSS file, typically: "node_modules/bootstrap/dist/css/bootstrap.min.css".  

New Angular
 No more modules
Components are imported from @component decorators

import {CommentsComponent} from './comments.component';

@Component({
  selector: 'app-root',
  template: `
    <div>
      <h1>How I feel about Angular</h1>
      <article></article>
      <comments />
    </div>
  `,
  standalone: true,
  imports: [CommentsComponent],
})

———————————————

Angular interpolation

<div class="col-md-12 known-for my-5" [class]=" this.counter == this.states.length? 'd-none':'' ">

—————


Show hidden files 
Shift, Command (⌘), and period symbol (.)
ls -a


defaults write com.apple.Finder AppleShowAllFiles true
killall Finder


ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMWmVbuADzNTe7hIQSo/Vx9aLuliFw5wWzDynH4Wq56U “rm.cortez94@gmail.com”


sudo ssh -i azure.pem azureuser@4.246.196.66


find . -type f -exec grep "productions.com” {} \; 



UPDATE wp_options 
SET option_value = replace(option_value, 'oldurl.com', 'newurl.com') WHERE option_name = 'home' OR option_name = 'siteurl';

UPDATE wp_posts SET guid = replace(guid, 'oldurl.com','newurl.com');


UPDATE wp_posts SET post_content = replace(post_content, 'oldurl.com', 'newurl.com'); 


UPDATE wp_postmeta SET meta_value = replace(meta_value,'oldurl.com','newurl.com');


————————
www settings

Apache Config - vi /usr/local/etc/httpd/httpd.conf
sudo apachectl stop
sudo apachectl start

Mysql config - vi /usr/local/etc/my.cnf
brew services start mysql
brew services stop mysql



aws

vpc-5722f83c
UN: ron
Pwd h3

Ssh-un = ec2-user	

Cd ~/Downloads
ssh -i "awsInstance.pem" ec2-user@ec2-18-221-124-88.us-east-2.compute.amazonaws.com



Azure 
———
168.61.37.78

ssh -i "ubuntu_key.pem" azureuser@168.61.37.78
cd /var/www/html


http
——

 //to access as root
sudo su          

/*system info*/
cat /etc/system-release

/*updates ec2 system*/
sudo yum update -y

/*install apache and db*/
 sudo yum install -y httpd mariadb-server

/*install php*/
sudo yum install -y php php-mysqlnd php-pdo php-gd php-mbstring

php-cli.x86_64                  
php-common.x86_64               
php-fpm.x86_64                  
php-gd.x86_64                   
php-json.x86_64                
php-mbstring.x86_64             
php-mysqlnd.x86_64              
php-pdo.x86_64  
php-xml.x86_64
php-common.x86_64
php-xmlrpc.x86_64
php-opcache.x86_64

/*Use the chkconfig command to configure the Apache web server to start at each system boot.*/
sudo chkconfig httpd on

/*Start apache*/ 
sudo systemctl enable httpd
sudo systemctl start httpd
sudo systemctl status httpd

/*restart apache*/
sudo systemctl restart httpd 

/*Set permissions*/

/*adds apache and username to groups*/
sudo usermod -a -G apache ec2-user

/*Logout and check membership*/
Exit 
Re-connect
groups

/*grants user and apache ownership*/
sudo chown -R ec2-user:apache /var/www

/*To add group write permissions and to set the group ID on future subdirectories*/
sudo chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;

/*To add group write permissions, recursively change the file permissions of /var/www and its subdirectories:*/
find /var/www -type f -exec sudo chmod 0664 {} \;

/*creates php file*/
echo "<?php phpinfo(); ?>" > /var/www/html/phpinfo.php


//sudo yum list installed httpd mariadb-server php-mysqlnd

/* on AWS Interface open up http/https:443/ SSH:22 (Inbound rules) */
* Type: HTTP /HTTPS / SSH 
* Protocol: TCP 
* Port Range: 80 
* Source: Custom 
Cidr 0.0.0.0/0 // any ipv4 address


https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html#sg-rules-web-server

Win RDP - port:3389 type:tcp inbound rule
—————

DB
—
/*Starts db engine*/
sudo systemctl start mariadb

/*runs prompts that enables to change pwd and run configurations*/
sudo mysql_secure_installation

/*Starts DB engine on reboot*/
sudo systemctl enable mariadb

/*stops DB*/
sudo systemctl stop mariadb

DB login
———-
mysql -u root -p
Db-pwd: RCSH3llo123 



———————————————
/*starts db on every boot
sudo chkconfig mysqld on */



/*list installed packages by name*/
yum list installed | grep ftp

Loaded Configuration File	/etc/php.ini


SSH (SFTP) Filezilla.
* Edit-> Settings -> Connection -> SFTP
* Click on "Add Keyfile" button.
* Browse to the location of your key file (.pem file provided by Amazon)		

/*setup connection*/
* Go to Site manager -> New site
* 		Fill in the following information
    * 		Host: DNS name of EC2 instance.
    * 		File transfer protocol: SFTP-SSH.
    * 		Logon Type: Normal.
    * 		User: Your default username.
    * 		Password: Leave it as empty.
    * 		Click Connect button.





when url links do not work, check the following 
———————————————————————

/*mod_rewrite should be enabled*/

Remove # if disabled
/etc/httpd/conf.modules.d/00-base.conf

/*Check for htaccess */

if not found, create one

/*Grant Override all to www/html -  use sudo*/

 <Directory /var/www/html>
    AllowOverride All
 </Directory>

/*Finally restart apache*/
sudo systemctl restart httpd 

https://devops.ionos.com/tutorials/install-and-configure-mod_rewrite-for-apache-on-centos-7/
——————————————————————————


https://www.internalpointers.com/post/right-folder-permission-website
https://medium.com/tensult/configure-ftp-on-aws-ec2-85b5b56b9c94


======================================================



Map EC2 instance to a domain
———————————————
 Register domain
 Get ipv4 / elastic ip

Go to Route 53
	- Hosted zones
	- Select domain that needs to be mapped
	- Click on create Record set
		-  leave name blank
		- enter value for ip
		- choose simple for routing 
		- save

	- Click on create Record set
		-fill out name with - www
		- select alias
		- alias target - type in domain name
		-routing policy - simple 
		-save



———————
Google analytics

<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-36533527-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>







React deployment on subfolder

Set variable for refs (dev / prod)
Create export variable for this
//let baseURL = '/'
    let baseURL = '/react-project/' //production


Use variable for base name
<Router basename={baseURL}>

//append baseURL 
href={baseURL + (route.permLink) }


For Routes only add /
<Route exact path={'/'} component={Home} />

.htaccess

RewriteEngine On
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# Fallback all other routes to index.html
RewriteRule ^ /path/to/subfolder/index.html [L]







Path

 If it does not compile, run source ~/.profile on
* sass --watch sass/styles.scss css/custom-css.css
* sass sass/styles.scss css/custom-css.css

export PATH=~/.npm-global/bin:$PATH
export PATH=~/.npm-global/lib/node_modules/@angular:$PATH
export PATH=~/.npm-global/lib/node_modules/@vue:$PATH
export PATH=~/.npm-global/lib/node_modules/sass/sass.js:$PATH


.npm-global located under main user

/func, duration, effect, delay, alternate effect/
 animation: example 5s linear 2s infinite alternate;

Regex
———
Escape forward slash \
/href="\//g


aria_sync_log_dir	NEWFILE
basedir	/Applications/XAMPP/xamppfiles
character_sets_dir	/Applications/XAMPP/xamppfiles/share/charsets/
datadir	/Applications/XAMPP/xamppfiles/var/mysql/
innodb_data_home_dir	/Applications/XAMPP/xamppfiles/var/mysql/
innodb_log_group_home_dir	/Applications/XAMPP/xamppfiles/var/mysql/
innodb_tmpdir	
lc_messages_dir	
plugin_dir	/Applications/XAMPP/xamppfiles/lib/mysql/plugin/
slave_load_tmpdir	/Applications/XAMPP/xamppfiles/temp/mysql
tmpdir	/Applications/XAMPP/xamppfiles/temp/mysql
wsrep_data_home_dir	/Applications/XAMPP/xamppfiles/var/mysql/
/Applications/XAMPP/xamppfiles/htdocs



Scp 
scp -i awsInstance.pem ec2-user@ec2-3.129.71.135.us-east-2.compute.amazonaws.com: /Applications/XAMPP/xamppfiles/htdocs/info.php  /var/www/html/

GMAPI - AIzaSyCkTqkS2H8tQmSvjcUwoH7C5nhdBXVHhzU

Delete passArr


windows server
——————————————————
If changing the ip 
 - update RDP File
- This document (see below) 

Launch windows server instance
- Launch Instance
    - Choose windows server
    - Launch




When stopping instance, update route 53 (dns)
Use public ip
————————————————————————

aws 
UN: ron
Pwd h3

http://rcsproductions.us/wp-admin
Prod-WP
Un:admin
Pwd
2q0diFP1%qemSqrEh)HeNA#J

Rdp-client
3.139.66.61
ec2-3-139-66-61.us-east-2.compute.amazonaws.com\Administrator
ABj9Z$RiD?smYJhJhHg77iQ6*n5@*bSy

Or use downloaded rdp file

SQLSERVER
Un:SA
Pwd: SRH3

Security Group
80	TCP	0.0.0.0/0	launch-wizard-2
22	TCP	0.0.0.0/0	launch-wizard-2
3389	TCP	0.0.0.0/0	launch-wizard-2
443	TCP	0.0.0.0/0	launch-wizard-2

-	Go to instance , click on connect
- RDP CLient
    - Either download RDP file or download RDP Client
    -  Login 
        - domain\Administrator
        - Password
	
Adding Users

1. Press the Start button -> select Administrative Tools -> Active Directory Users and Computers.
2. Right-click the domain on which you want to create the user on -> choose New -> User.
3. Type the user‘s name in the respective boxes.
4. Choose a user logon name (needs to be unique in the respective domain).
5. Type the required password twice correctly.
6. Choose any options that you want to apply to the password.
7. Click Next -> verify that the entire set of information is correct.


In Windows 8.x, choose Desktop.  In Windows 10, click the Start button.
Open the Control Panel.
Choose Folder Options under Appearance and Personalization.
Click the Options icon on the right of the ribbon.
In the Folder Options dialog box, select the View tab.
Select Show hidden files, folders, and drives.
Deselect Hide extensions for known file types and click OK.



-------------


DB login
———-
Rcsproductions
Localhost
mysql -u root -p
Db-pwd: RCSH3llo123 

UPDATE wp_options 
SET option_value = 'newurl.com'
WHERE option_name = 'home' OR option_name = 'siteurl';

Select * from wp_options  WHERE option_name = 'home' OR option_name = 'siteurl'





http://rcs-productions.eastus.cloudapp.azure.com/wp-content/uploads/2020/08/profile-pic-1.jpeg

https://hr.fiu.edu/careers/ , select "Prospective Employees" and reference job opening ID # 531905 under "Search Jobs”



dockerfile 
/home/ronald/fru_git/frudock/workspace/Dockerfile


your bible
/home/ronald/fru_git/frudock/README.md


------------------------------------------------------------------

https://github.com/FreeRateUpdate/frudock


Starting / Stopping Docker Containers
Your containers will automatically turn off if you shut down your machine. To shut them down directly, you can also run docker compose stop from the frudock directory.

To start the containers again after starting your machine, you can run docker compose start from the frudock directory. You can also re-run ./scripts/init.sh, which will run through the configuration again and give you the option of reinstalling dependencies or restore a partial database backup.



window explorer
    network/ubuntu/20-04
     right click
        terminal 

            wsl -u ronald  
            cd /home/ronald/fru_git/


-----------------------------------------------------------
Production Admin Page

https://admin.freerateupdate.com/mlogin

RonaldC 
FreerateRC24

--------------------------------------------------------------

development Admin Page codeigniter

ronald-admin.freerateupdate.com


ronaldc : Freerate1



to change to testing db from api level (laravel)

/home/ronald/fru_git/laravel-api/.env



for internal csr view 
/home/ronald/fru_git/fru-com/nexus/application/config/database.php


for mysql 

$db['default']['hostname'] = 'db-testing.freerateupdate.com';
$db['default']['username'] = 'developer';
$db['default']['password'] = 'SdWLzq4Rv27fIf8m';
$db['default']['database'] = 'freerate_freerate';



to backup to most current
so in essence, if I run the partial db restore script, it should delete the current data and update it with the most current right?


from docker container 

/home/ronald/fru_git/frudock

sh ./scripts/restore-partial-db.sh

-----------------------------------------------------------------


<?php

//To use the db-testing server
//Use this as your config/development/database.php
//db-testing is restored from backups every night
//Only use when needed, not as your constant dev db

$active_group = 'default';
$db['default']['hostname'] = 'db-testing.freerateupdate.com';
$db['default']['username'] = 'developer';
$db['default']['password'] = 'SdWLzq4Rv27fIf8m';
$db['default']['database'] = 'freerate_freerate';
$db['default']['dbdriver'] = 'mysqli';
$db['default']['encrypt']['ssl_verify'] = true;
$db['slave'] = $db['default'];
$db['slave']['skip_replication_check'] = true;
$db['reporting'] = $db['slave'];



---------------------------------------------------------------------

from docker container 

cd /home/ronald/fru_git/frudock

sh ./scripts/restore-partial-db.sh



docker compose start
docker compose restart


changes to dockerfile

docker compose build workspace
docker compose up -d workspace


ssh-keygen -t rsa -b 4096 -C "ronaldc@freerateupdate.com"


git repo
cd /home/ronald/fru_git/frudock

docker compose start


ssh keys
cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC8icTurWuREZ2JcybTAR7FvMg2EBZy9ehDzcQSLWjZfiInR+uCVQGs/az6DN4Mi7eqiWqJv1Fzjtl9vlj0darzDkAFemK81h+T2dxJ24n1/3qoUt9kXtDZ2/2Gg+TJOVVQz8pFHAeDNTnwERjMljZrnZiA7XYpSHLI3N/aVWeP249XE+Mt3VSfuSdYQwC0VWqbrYOGGmHsQqlBcLgukn9JXX+E4jiPic6CPhUevEVB3gldNJw95/pHl5otL0YCSdYCJwt6589gVnQbZYrwxk/nzfyz58wKJsFZPQP9SbexAZKftD7zCDTZzEx7ZHcg5PLXEnxd8NJXJHsi2bXBJPb5lH0y1CQXXuNBjOkf5LqFqOSShtsIRSFGttYuznkUkFtwxyj5TSEmm8+ThRpU0ZdLnTTSvOtg1Rm6aKUzzX+5i7pdbRsjU3qLCZz2xLCZ8Wu/H52HQptpkeAYSOCe8Il5Fndpn6u/h1TQEtr6paD7YZTBT2IG2I/eP3IZ9DVkzB1HTV5CifllPG7E3KIdruPEYedyKHw9Swa7J07J82xEsx1rJBHXTlDbyq+Ig8HMGJZ30hJWWRRQ4Gg9KfCnF6yz0kRtOoNnNLuxkEt8E5+jXFdib84d5yCjTUPc8ekOLsP2hjDP9FJf0dIsj1Z2t59jPIZpePz64WTeqOsUcOjSAQ== ronald@Ronald




cat /etc/hosts
172.18.0.1 fru.local
172.18.0.1 ronald.freerateupdate.com
172.18.0.1 ronald-admin.freerateupdate.com
172.18.0.1 leads.ronald.freerateupdate.com
172.18.0.1 ronald-api.freerateupdate.com
172.18.0.1 ronald-ratetables.freerateupdate.com
172.18.0.1 ronald.lendercontact.com
172.18.0.1 ronald-leads.freerateupdate.com
172.18.0.1 ronald-www.freerateupdate.com
172.18.0.1 ronald.searchmortgagerate.com
172.18.0.1 ronald.harp-2.org
172.18.0.1 ronald.houseequityoptions.com
172.18.0.1 ronald.homeequitychoice.com
172.18.0.1 ronald-thisisdog.freerateupdate.com
172.18.0.1 ronald-fru-api.freerateupdate.com
172.18.0.1 ronald-web.freerateupdate.com
172.18.0.1 ronald-soketi.freerateupdate.com
172.18.0.1 ronald-www.pathtohome.com
172.18.0.1 ronald.pathtohome.com
172.18.0.1 ronald-www.pathtohome.ai
172.18.0.1 ronald.pathtohome.ai
172.18.0.1 ronald-www.pathtohomebuying.com
172.18.0.1 ronald.pathtohomebuying.com
172.18.0.1 ronald-www.personalloansavvy.com
172.18.0.1 ronald.personalloansavvy.com
172.18.0.1 ronald-www.personalloanrate.com
172.18.0.1 ronald.personalloanrate.com
172.18.0.1 ronald-www.mortgageloandeals.com
172.18.0.1 ronald.mortgageloandeals.com
172.18.0.1 ronald.airatefinder.com
172.18.0.1 ronald-www.besthomeequityloan.com
172.18.0.1 ronald.besthomeequityloan.com
172.18.0.1 ronald.lowratefinder.ai



done 

--------------------------------------

Then in the `fru-com` repository copy the following files from `nexus/application/config/production` to the `nexus/application/config/development` folder
* `beanstalkd.php`
* `config.php` - Change all URLs to be prefixed with your `DEVUSER-`. i.e. `admin.freerateupdate.com` becomes `username-admin.freerateupdate.com`. See the domains the init.sh script prompted you to add to your hosts file.


-------------------------------------------

/home/ronald/fru_git/fru-com/nexus/application/config/production/constants.php


Change `DEVELOPER_EMAIL` to your email address

----------------------------------------

Update the URLs at the top of the script, prefixing them with your username as in `config.php`, down to `www.harp-2.org`

Some will require replacing the www with your username instead of prepending. Again look at the domains you added to your hosts file while installing to compare.


define('WWW_DOMAIN', 'ronald-freerateupdate.com');
define('ADMIN_DOMAIN', 'ronald-admin.freerateupdate.com');
define('LEADS_DOMAIN', 'ronald-leads.freerateupdate.com');
define('RATETABLES_DOMAIN', 'ronald-ratetables.freerateupdate.com');
define('API_DOMAIN', 'ronald-api.freerateupdate.com');
define('LENDERCONTACT_DOMAIN', 'ronald-lendercontact.com');
define('THISISDOG_DOMAIN', 'ronald-thisisdog.freerateupdate.com');
define('SOKETI_DOMAIN', 'ronald-soketi.freerateupdate.com');
define('HARP2_DOMAIN', 'ronald-harp-2.org');



------------------------------------

Update `FRU_API_URL` to `https://DEVUSER-api.freerateupdate.com:8002`, and `FRU_API_URL_PUBLIC` to `https://DEVUSER-fru-api.freerateupdate.com`, where DEVUSER is again your username.

define('FRU_API_URL', 'https://ronald-api.freerateupdate.com:8002');
define('FRU_API_URL_PUBLIC', 'https://ronald-fru-api.freerateupdate.com');


https://ronald-www.freerateupdate.com

------------------------------

db restored

docker compose up -d
docker compose exec -T workspace mysql -hmaster -uroot -proot -e "create database if not exists freerate_freerate;"
docker compose exec -T workspace mysql -hmaster -uroot -proot -e "create user if not exists 'freerate_freerat'@'%' identified by '@mT5cTdGNzny';"
docker compose exec -T workspace mysql -hmaster -uroot -proot -e "alter user 'freerate_freerat'@'%' identified by '@mT5cTdGNzny';"
docker compose exec -T workspace mysql -hmaster -uroot -proot -e "grant all on *.* to 'freerate_freerat'@'%';"
echo "Downloading database backup"
docker compose exec -T workspace aws s3 --region=us-west-2 --profile=partial cp s3://fru-db-backups/galera/partial/latest.sql.gz /tmp/
echo "Unzipping database backup"
docker compose exec -T workspace gunzip -f /tmp/latest.sql.gz
echo "Restoring Backup"
sleep 5
docker compose exec -T workspace /bin/bash -c 'mysql -ufreerate_freerat -p@mT5cTdGNzny -hmaster freerate_freerate < /tmp/latest.sql'
echo "Done"

--------------------------------------------------

DB credentials
$db['default']['hostname'] = 'master';
$db['default']['username'] = 'root';
$db['default']['password'] = 'root';
----------------------------------------



main projects

https://ronald-www.freerateupdate.com/
https://ronald.houseequityoptions.com
https://ronald.homeequitychoice.com
https://ronald.searchmortgagerate.com


docker

/home/ronald/fru_git/frudock

docker compose start


slack

freerateupdategroup.slack.com 



Setup the configuration files in fru-com as described in the frudock readme
When you're on Slack, you can message Joe Terranova for your admin password to view the developer environment admin site.




----------------------------

go to line 
ctrl + G



costco
https://lm.lifemart.com/group/lifemart/discount?category=1&subcategory=-7&article=650148296&discount=840660&bipath=5&bipage=2&sortBy=


theme parks
https://www.ticketsatwork.com/affiliates/lifecare/pages.php?sub=all_theme_parks&xcid=125790402~281567562~5a0e7f2d-e91d-4201-8c61-142c7c8f21b9#pennsylvania

https://www.ticketsatwork.com/affiliates/lifecare/pages.php?sub=AMC-THEATRES

https://www.homechef.com/the-best?utm_source=lifecare&utm_medium=Affinity&voucher=life20&vmClickId=ac322f87-e9c3-4e01-851c-6bf12787a134




------------------------------------------------

jquery helper functions 

to post  

$.post("/site_content_tab/landing_page_edit_save_advertising_disclosures"
			, $(this).serialize()
			, function(){
				get_advertising_disclosures(disclaimer, "SAVED");
			}
    );


to find elements 

$('#testnew').find("input[type=text],textarea").val("");

.text()
.html()
.fadeOut(4000);
.hide();
.show();
$(this).closest("form").attr("disclaimer");


$("#disclaimer-tab").on("click", ".edit-disclaimer-link", function(e){
		e.preventDefault();

		$form = $(this).closest("form");

		// Swap text
		$form.find(".disclaimer-text").hide();
		$form.find("[name=text]").show();

		// Show Submit
		$form.find("[type=submit]").show();

	});



--------------------------------------------------------------------------
Fru-com 
code igniter Admin Page

src="<?= JS_PATH; ?>/tiny_mce/tinymce.min.js">
         --------

views 
------

site_content/


//passes data to view 
<?php $this->load->view('site_content/includes/subnav', array('title' => 'Landing Page Manager')); ?>
<style>



models 
-----------

extends My_Model
/home/ronald/fru_git/fru-com/nexus/application/models/My_model.php

throw new Exception('The $table variable must be set in a model to use this fucntion.');



public function update($id, $data, array $options = array())



public function delete($id, array $options = array())
    $id_column = $this->id;
    $id_column = (isset($options['id_column'])) ? $options['id_column'] : 'id';



$sql = "CREATE TEMPORARY TABLE `{$tmp}` SELECT * FROM `{$this->table}` WHERE `{$id_column}` = '{$id_from}'";
$this->db->query($sql);


$this->db->where($id_column, $id_from)->update("`{$tmp}`", [$id_column => $id_to]);


------------------------------------------------

$this->load->model(['admin']);

Admin.php


/home/ronald/fru_git/fru-com/nexus/application/models/Admin.php


$query = $this->db_slave
			->select('id')
			->from('cit_admin')
			->where('userid', trim($userId))
			->get();

if (!empty($query) && $query->num_rows() > 0) {
    return true;
} else {
    return false;
}


$query = $this->db_slave->get_where('cit_admin', ['sales_link' => $id]);

//by field
$this->db_slave->get_where('cit_admin', ['userid' => $admin_id])->row()->time_zone;



//join 
$query = $this->db_slave
			->select('cit_admin.*')
			->from('cit_admins_groups')
			->join('cit_admin', 'cit_admin.userid = cit_admins_groups.admin_id', 'inner')
			->where('cit_admin.status !=', self::STATUS_TRASH)
			->where_in('cit_admins_groups.group_id', $group_ids)
			->order_by('first_name')
			->get();


//specified
$this->db_slave->where('cit_admin.group_id !=', 20);



->order_by('RAND()')
->limit(1)
->get();


$subquery = $this->db_slave
    ->select('cit_requests_log.user')
    ->from('cit_requests_log')
    ->where('cit_requests_log.summary', Requests_Log::SUMMARY_LIVE_TRANSFERED)
    ->where('cit_requests_log.request_id', $lead_id)
    ->order_by('cit_requests_log.date DESC')
    ->get_compiled_select();


php multi-line string 

$sql = 'SELECT ul.*, cc.note
                FROM cit_userclient_log as ul
                INNER JOIN cit_clients as cc
                    ON cc.id = ul.client
                WHERE user = \'' . $user . '\'
                AND action = \'Linked\'
                AND date < ' . $end_u . '
                ORDER BY cc.note ASC, date ASC

                AND cb.status = \'confirmed\'
        ';

$query = $this->db_slave->query($sql);

$query->result_array()


$this->load->model('internal_phone_numbers');

$admin = $this->get_admin($admin_id);

if (! isset($admin->userid)) {
    return '';
}

$internal_phone = $this->internal_phone_numbers->get($admin->internal_phone_number_id);

$admin->direct = ($internal_phone ? $internal_phone->phone : null);

$view = $mailchimp === 'mailchimp'
    ? $this->load->view('users/signature_mailchimp', ['admin' => $admin], true)
    : $this->load->view('users/signature', ['admin' => $admin], true);

// Strip extra whitespace
$view = preg_replace('/\s+/', ' ', $view);

return $view;



--------------------------------------------
DB

get_two_factor_secret($admin_id)

$query = $this->db_slave
			->select('two_fa_secret')
			->from($this->table)
			->where('cit_admin.userid =', $admin_id)
			->get();

$result = $query->row();

return $result->two_fa_secret ?? false;


select two_fa_secret,* from cit_admin;



---------------------------------------------------

/home/ronald/fru_git/fru-com/nexus/application/models/Admin.php
$this->load->model(['admin']);



public function create_salt()
public function encrypt_password($password, $userid)
public function encrypt_password_by_id($password, $id)
public function get_active()
public function getUserList(array $status = [self::STATUS_ACTIVE], array $myorder = ['userid', 'asc'])
public function getAgedUserList(array $status = [self::STATUS_ACTIVE], array $myorder = ['userid', 'asc'])
public function get_full_name($admin_id)
public function get_directory_users()

public function email_signature($admin_id, $mailchimp = '')
    $this->load->model('internal_phone_numbers');

    $internal_phone = $this->internal_phone_numbers->get($admin->internal_phone_number_id);

    $admin->direct = ($internal_phone ? $internal_phone->phone : null);

public function is_csr($admin = null)
public function authenticate($userid, $password)
public function login($id)
public function get_admin_on_contact_page()
public function get_csrs($group_ids, $status = Admin::STATUS_ACTIVE)
public function available_to_chat()
public function get_two_factor_secret($admin_id)
public function update_two_factor_secret($secret)
private function encrypt($password, $salt)




















-------------------------------------------------------------


documentation

/**
* Record login for user/session
*
* @param int $admin_id ID of logged in user
* @return void
*/


-----------------------------------------------------------------


$this->load->library(['memcached_library']);

$memcached_info = [
			'key' => $this->get_last_login_key($admin_id),
			'session' => $session,
		];

$this->memcached_library->set($memcached_info['key'], $memcached_info['session'], 0);

------------------------------------------------------


$this->load->model(['admin']);
$this->load->library(['session', 'memcached_library']);



log_message('info:always', 'Recording admin login ' . json_encode($data));

log_message('info', 'check_current_log ' . json_encode([
			'admin_id' => $admin_id,
			'current_session' => $current_session,
			'this_session' => $this->session->session_id,
]));


----------------------------------------

protected $table = 'cit_admin_logins';

$data = [
			'admin_id' => $admin_id,
			'session_id' => $session_id,
		];

$this->db->insert($this->table,$data);


-------------------------------------------------------------------


php self variable reference 

const MEMCACHED_LOGIN_PREFIX = 'last_login_';
self::MEMCACHED_LOGIN_PREFIX


-----------------------------------------------------


$admin_id = empty($this->session->original_admin_id)
			? $this->session->admin->id 
            : $this->session->original_admin_id;


$this->load->model(['admin']);
$admin = $this->admin->get($admin_id);


$current_session = $this->memcached_library->get($this->get_last_login_key($admin_id));



---------------------------------------------------------------------------


DB inserts 

$this->load->helper(['data']);

$inserted = $this->db->insert($this->table, $data);

if ($inserted === true)
{
    return $this->db->insert_id();
}
else
{
    return false;
}


-------------------------------------------

unique id 

['ext_id' => uuidv4()]


array casting 

(array) $data


array_replace() replaces the values of array with values having the same keys in each of the following arrays.

$data = array_replace((array) $data, ['ext_id' => uuidv4()]);




is_array($id)

---------------------------------------------

where clause 

$query = $db->where_in($id_column, $id)->from($this->table)->get();


if ($query->num_rows() > 0)

$query->result_object();

$query->first_row();





---------------------------------------

-------------------------------------------------------


https://freerateupdate.atlassian.net/browse/FRU-15278


clients tab/ changes (sub menu)


/home/ronald/fru_git/fru-com/nexus/application/controllers/admin/Clients_tab.php

public function save_lead_options($client_id) 
public function change_states_status($client_id)


--handles functionality
public function save_lead_filters()






DB 

cit_clients_log
$this->db_slave->where('user', 'anthonyg');



/home/ronald/fru_git/fru-com/nexus/application/helpers/client_helper.php

 $out .= '<a style="padding:0 2px;" href="'. site_url('clients_tab/change_log/'.$id) .'"><img src="'. site_url() .'/images/icon/changelog.png" title="Change Log" alt="Client Change Log" width="15px" /></a>';


/home/ronald/fru_git/fru-com/nexus/application/controllers/admin/Clients_tab.php
function change_log_list($offset = 0)


view 
-------
main view to make adjustments
/home/ronald/fru_git/fru-com/nexus/application/views/admin/clients/client/tabs_lead_filters.php




/home/ronald/fru_git/fru-com/nexus/application/views/admin/email/change_log.php
<td><?= show_client_log_description(($entry ?? null)); ?></td>
<td><?= ($entry->user ?? null); ?></td>


/home/ronald/fru_git/fru-com/nexus/application/views/admin/clients/change_log_list.php
<td><?= date_view_format($entry->date); ?></td>
<td><?= $entry->user; ?></td>

------------------------------------------------------------

/home/ronald/fru_git/fru-com/nexus/application/helpers/client_helper.php

show_client_log_description()


function get_client_log_details_string($details, $summary)



LTV
Loan-to-value ratio


Actial insert 
--------------------
/home/ronald/fru_git/fru-com/nexus/application/models/Log_base.php
public function log($data)

$this->db->insert($this->table, $db_data);



identified conditiona

Admin Interface 
    clients tab 
        specific client 
            edit 
                Lead Filters
                    Minimum LTV Refinance	
                    Max LTV Refinance	

Problem 
It appears that when a change is made to the min or max ltv, the min purchase ltv is also logged as changed, even though no change is made


/home/ronald/fru_git/fru-com/nexus/application/views/admin/clients/client.php
    <? $this->load->view('clients/client/tabs_lead_filters', ['client' => $client, 'lead_options' => $lead_options]); ?>


/home/ronald/fru_git/fru-com/nexus/application/views/admin/clients/client/tabs_lead_filters.php
    <input type="submit" value="Save Changes" />
    $.post("/clients_tab/save_lead_filters/",


/home/ronald/fru_git/fru-com/nexus/application/controllers/admin/Clients_tab.php

    $min_ltv_purchase       = $this->input->post('min_ltv_purchase');

    $this->form_validation->set_rules('min_ltv_purchase', 'Minimum LTV Purchase', 'trim');


    $min_ltv_purchase_changes = $this->clients_min_ltv->save($client_id, Requests::TYPE_PURCHASE, "", $min_ltv_purchase);

    if ($min_ltv_purchase_changes !== false)
        $this->clients_log->log($min_ltv_purchase_log);




-------------------------------


select * from cit_clients  //bank_nanme,note,slug
where id in //client_id
(12379)



/home/ronald/fru_git/fru-com/nexus/application/helpers/client_helper.php
{"changed":"Min refinance LTV","old_value":0,"new_value":" "}

/home/ronald/fru_git/fru-com/nexus/application/views/admin/clients/change_log.php


preg_match("/ LTV /", $entry->summary)) : 


/home/ronald/fru_git/fru-com/nexus/application/controllers/admin/Clients_tab.php
                        
----------------------------------------------------------------------------------------------------------

resolution
    remove it from sql query 
       /home/ronald/fru_git/fru-com/nexus/application/controllers/admin/Clients_tab.php



// -----------------------------------------------------
		/*

		//add limit and offset
		$sqlQueryMain = 'select * from cit_clients_log
                     where (
         ( 
					 summary like \'% LTV %\' and details not like \'%old_value":0,"new_value":" "%\') 
					 or (summary not like \'% LTV %\' )
        )
		 
		
		';

		$sqlQuery = $sqlQueryMain;


		// and cast(date as date) >= \'2024-07-19\'

		if (!empty($this->input->get('user')) && ($this->input->get('user') == 'anthonyg'))
		{
			//$this->db_slave->where('user', 'anthonyg');

			$sqlQuery .= " and user = \'anthonyg\' ";
		}


		

		$sqlQuery .= " order by date desc,id desc ";

		$sqlQuery .= " limit ". $limit;

		if($offset <> 0){
			$sqlQuery .= " offset". $offset;
		}



		//$result = $this->db_slave->get();
		$result = $this->db_slave->query($sqlQuery);
		$entries = $result->result_object();
 		$data['entries'] = $entries;

		// Get total count
		//$this->db_slave->from('cit_clients_log');
		// $entries_count = $this->db_slave->count_all_results();

		$entries_count = $this->db_slave->query($sqlQueryMain)->num_rows();
		$data['entries_count'] = $entries_count;

		*/

		// ------------------------------------------------------------------



git commands

 delete remote branch  

    git push origin -d  FRU-15278


delete local branch 
git branch -D  FRU-15278


-----------------------------------------------------------------------------------

client tab/changes 
https://ronald-admin.freerateupdate.com/clients_tab/change_log/80/


client tab/edit/
https://ronald-admin.freerateupdate.com/clients_tab/change_log_list




lets locate where the log is being saved to the DB

 /home/ronald/fru_git/fru-com/nexus/application/controllers/admin/Clients_tab.php

--handles functionality
public function save_lead_filters()

        $max_ltv_refinance      = $this->input->post('max_ltv_refinance');
        $max_ltv_purchase       = $this->input->post('max_ltv_purchase');
        $min_ltv_refinance      = $this->input->post('min_ltv_refinance');
        $min_ltv_purchase       = $this->input->post('min_ltv_purchase');


*Resolution
if(from an actual value to unset){

    $this->clients_log->log($max_ltv_refinance_log);
    $this->clients_log->log($max_ltv_purchase_log);
    $this->clients_log->log($min_ltv_refinance_log);
    $this->clients_log->log($min_ltv_purchase_log);


    DB 
    cit_clients_log

}

-----------------------------------------------------

Nano editor commit 

ctrl + o 
enter
ctrl + x 

git push 


---------------------------------------------------------------

Angular project 


cd fru-com/

sh ./scripts/bash.sh
cd /var/www/www-ng
sh /opt/scripts/workspace/ng-build.sh




----------------------------

dockerfile example


ARG PHP_VERSION=8.1
FROM sunfoxcz/php:${PHP_VERSION}
ARG PHP_VERSION=8.1
ARG HOST_USER_ID=${HOST_USER_ID}
RUN DEBIAN_FRONTEND=noninteractive
RUN locale-gen en_US.UTF-8
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_ACCESS_KEY_ID_PARTIAL
ARG AWS_SECRET_ACCESS_KEY_PARTIAL
ARG AWS_ACCESS_KEY_ID_PROD
ARG AWS_SECRET_ACCESS_KEY_PROD

ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV LC_CTYPE=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV TERM xterm

EXPOSE 4200

# Install packages
RUN apt-get update && \
    apt-get install -y wget gnupg && \
    wget --directory-prefix=/tmp https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb && \
    dpkg -i /tmp/percona-release_latest.$(lsb_release -sc)_all.deb && \
    percona-release enable-only tools release && \
    apt-get update && \
    apt-get install -y \
    php${PHP_VERSION} \
    php${PHP_VERSION}-memcached \
    php${PHP_VERSION}-curl \
    php${PHP_VERSION}-mysql \
    php${PHP_VERSION}-gd \
    php${PHP_VERSION}-oauth \
    php${PHP_VERSION}-mbstring \
    php${PHP_VERSION}-redis \
    php${PHP_VERSION}-soap \
    php${PHP_VERSION}-xml \
    php${PHP_VERSION}-zip \
    php${PHP_VERSION}-bcmath \
    #php8.1 \
    #php8.1-memcached \
    #php8.1-curl \
    #php8.1-mysql \
    #php8.1-gd \
    #php8.1-oauth \
    #php8.1-mbstring \
    #php8.1-redis \
    #php8.1-soap \
    #php8.1-xml \
    #php8.1-zip \
    #php8.1-bcmath \
    pkg-config \
    libcurl4-openssl-dev \
    libedit-dev \
    libssl-dev \
    libxml2-dev \
    xz-utils \
    git \
    curl \
    ack \
    vim \
    nano \
    percona-xtrabackup-80 \
    awscli \
    gzip \
    mysql-client \
    ruby \
    ruby-sass \
    && apt-get clean
    
# Set PHP version
RUN update-alternatives --set php /usr/bin/php${PHP_VERSION}
RUN update-alternatives --set phar /usr/bin/phar${PHP_VERSION}
RUN update-alternatives --set phar.phar /usr/bin/phar.phar${PHP_VERSION}

# optimize 
RUN mkdir -p /root/.aws
COPY ./config /root/.aws/config

COPY ./credentials /root/.aws/credentials
COPY ./copysecrets.sh /root/copysecrets.sh
RUN chmod +x /root/copysecrets.sh
RUN /root/copysecrets.sh

# Install composer
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php --version=2.5.1 && \
    php -r "unlink('composer-setup.php');" && \
    echo "export PATH=${PATH}:/var/www/vendor/bin" >> ~/.bashrc && \
    mv composer.phar /usr/local/bin/composer

# Create user
ARG PUID=${HOST_USER_ID}
ENV PUID ${PUID}
ARG PGID=${HOST_USER_ID}
ENV PGID ${PGID}
RUN groupadd -g ${PGID} freerate && \
    useradd -u ${PUID} -g freerate -m freerate -G docker_env && \
    usermod -p "*" freerate

# npm/nvm, gulp, bower, angular
USER freerate
ARG NODE_VERSION=18.20.2
ENV NODE_VERSION ${NODE_VERSION}
ARG NPM_REGISTRY
ENV NPM_REGISTRY ${NPM_REGISTRY}
ARG NPM_VERSION=9.6.3
ENV NPM_VERSION=${NPM_VERSION}
ENV NVM_DIR /home/freerate/.nvm

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash && \
    . $NVM_DIR/nvm.sh && \
    nvm install ${NODE_VERSION} && \
    nvm alias default ${NODE_VERSION} && \
    nvm use ${NODE_VERSION} && \
    if [ ${NPM_REGISTRY} ]; then \
    npm config set registry ${NPM_REGISTRY} \
    ;fi && \
    npm install -g npm@${NPM_VERSION} && \
    npm install -g gulp bower vue-cli @angular/cli

RUN echo "" >> ~/.bashrc && \
    echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.bashrc

USER root

RUN echo "" >> ~/.bashrc && \
    echo 'export NVM_DIR="/home/freerate/.nvm"' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.bashrc

ENV PATH $PATH:$NVM_DIR/versions/node/v${NODE_VERSION}/bin

RUN if [ ${NPM_REGISTRY} ]; then \
    . ~/.bashrc && npm config set registry ${NPM_REGISTRY} \
    ;fi

# Set Timezone
ARG TZ=PST8PDT
ENV TZ ${TZ}
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

#RUN mkdir -p /etc/mysql
COPY ./my.cnf /etc/mysql/conf.d/mysqld.cnf

# RUN . ~/.bashrc


---------------------------------------------------------
experience

I would like to be candidate for this position, given the qualifications and experience I possess. I believe I could contribute to projects, tasks and be a great team member for this organization. My desired income is 110000 dollars a year, but please , if there is an interest. Don’t hesitate to send me an offer I could probably consider

At United World Telecom, my role was mainly a full stack engineer. So I had to make updates throughout every side of their application: Front end , back end and database. I had to maintain code that will deliver invoices to their clients as well as automated emails which were tailored depending on the case in which the stored procedure or the scheduled job was triggered. I was also assigned to create a new product for their customers. I gathered requirements and made changes throughout our data meaning changes were applied at the database level , backend and lastly on a front end portal written in Angular. This process even made me earned a raise since the updates went through smoothly and everything was documented and easy to understand.

At Verizon I was tasked with creating many landing pages that we had for our Human Resources department. I also maintained Crowdaround which is the Verizon’s intranet Social Media. There were many updates that had to meet standards set by Verizon. 

These were mitigated in our meetings. We would discuss what we worked on and what was pending. Most updates were approved and mitigated on these meetings

At Verizon , we had many Wordpress applications that required us to use plugins to verify that each landing page had the required SEO / HTML tags. For other online marketing tools, at United World Telecom, I was tasked to gather data from google analytics and display these on applications written in Angular

At United World Telecom I introduced the need of keep everything documented. From code to requirements. Before I was hired, most requirements were verbal and most of the knowledge was not passed on to new employees so by example I demonstrated how helpful keeping this information was. Also code wise we used a php, sql server , angular / typescript, asp.net, C# , apache / IIS , nodeJS and jQuery

-----------




At United World Telecom, my role was mainly a full stack engineer. So I had to make updates throughout every side of their application: Front end , back end and database. I had to maintain code that will deliver invoices to their clients as well as automated emails which were tailored depending on the case in which the stored procedure or the scheduled job was triggered. I was also assigned to create a new product for their customers. I gathered requirements and made changes throughout our data meaning changes were applied at the database level , backend and lastly on a front end portal written in Angular. This process even made me earned a raise since the updates went through smoothly and everything was documented and easy to understand.

At Verizon I was tasked with creating many landing pages that we had for our Human Resources department. I also maintained Crowdaround which is the Verizon’s intranet Social Media. There were many updates that had to meet standards set by Verizon.  


I would like to be candidate for this position, given the qualifications and experience I possess. I believe I could contribute to projects, tasks and be a great team member for this organization 

At United World Telecom, my role was mainly a full stack engineer. So I had to make updates throughout every side of their application: Front end , back end and database. I had to maintain code that will deliver invoices to their clients as well as automated emails which were tailored depending on the case in which the stored procedure or the scheduled job was triggered. I was also assigned to create a new product for their customers. I gathered requirements and made changes throughout our data meaning changes were applied at the database level , backend and lastly on a front end portal written in Angular. This process even made me earned a raise since the updates went through smoothly and everything was documented and easy to understand.

At Verizon I was tasked with creating many landing pages that we had for our Human Resources department. I also maintained Crowdaround which is the Verizon’s intranet Social Media. There were many updates that had to meet standards set by Verizon. 

These were mitigated in our meetings. We would discuss what we worked on and what was pending. Most updates were approved and mitigated on these meetings

At Verizon , we had many Wordpress applications that required us to use plugins to verify that each landing page had the required SEO / HTML tags. For other online marketing tools, at United World Telecom, I was tasked to gather data from google analytics and display these on applications written in Angular

At United World Telecom I introduced the need of keep everything documented. From code to requirements. Before I was hired, most requirements were verbal and most of the knowledge was not passed on to new employees so by example I demonstrated how helpful keeping this information was. Also code wise we used a php, sql server , angular / typescript, asp.net, C# , apache / IIS , nodeJS and jQuery


------------


* Experience


* 
* Have you managed creative content/assets for websites in alignment with marketing campaigns and product updates/releases? If so, please briefly explain

Yes, at Verizon I was tasked with creating many landing pages that we had for our Human Resources department. I also maintained Crowdaround which is the Verizon’s intranet Social Media. There were many updates that had to meet standards set by Verizon





* This role requires a hybrid work schedule (must work in office 2-3x per week)in Bethpage, NY. Are you able to accommodate this requirement? 

Hybrid work is really helpful these days. An engineer must be efficient and also have a quiet environment which it can be found at home and also the availability to do some work after work hours. Creativity must not be ceased or await until the next day. If you are working on a task that can be completed later then having access to work remotely really helps


* Do you have WordPress CMS experience? Please share which platforms you have used.
I created many landing pages using Wordpress for Verizon. Even created a plugin that allowed users to go through a survey and then the application would make a pho request so that the answers would be processed and a score and right answers would be given


* This role will require you to manage web content. Have you built websites/pages? 
As explained before I managed Wordpress applications and created many landing pages for our employees on the Human Resources portal


* Have you assisted in the creation or revision of new or existing sales and marking landing pages? If so, please explain
Yes, at Verizon and even at my latest job at United World Telecom where I was in a sense the only developer tasked to make updates not only to content but also to functionality for their customer portal


* Have you overseen promotional campaigns and new product releases or updates for webpages?
As explained above, at United World Telecom I was assigned to create a new product for their customers. I gathered requirements and made changes throughout our data meaning changes at the database level , backend and displaying these on a front end portal written in Angular. 


* Have you developed project and technical documentation for supporting IT groups, agencies, and other 3rd party partners?


At United World Telecom I introduced the need of keep everything documented. From code to requirements. Before I was hired, most requirements were verbal and most of the knowledge was not passed on to new employees so by example I shower how helpful keeping this information was. Also code wise we used a plugin for PHP for their REST API interface which would generate documentation based on comments pn the code


* Please explain your experience around oversight and validation of website updates.
* 
These were mitigated in our meetings. We would discuss what we worked on and what was pending. Most updates were approved and mitigated on these meetings



* This role is budgeted at 90k with a 10% target bonus. Is this acceptable for you?

I would do my best to meet the 10% percent bonus target so yes, that’s fine with me

* Have you maintained an e-commerce product catalog rollout including pricing, SKUs, and business rules? Please explain
 
At United World Telecom, my role was mainly a full stack developer. So I had to make updates throughout every side of their application front end , back end and database. I had to maintain code that will deliver invoices to their clients as well as automated tailored emails depending on the case in which the stored procedure or the scheduled job was triggered 

These were interesting questions, once again thanks for the interest and talk soon. Just in case I have my personal website where you can find application I built on my spare time. These are written mostly on JAVASCRIPT frameworks so if you have the time please check them out

http://rcs-productions.eastus.cloudapp.azure.com/projects/


At Verizon , we had many Wordpress applications that required us to use plugins to verify that each landing page had the required SEO / HTML tags. For other online marketing tools, at United World Telecom, I was tasked to gather data from google analytics and display these on applications written in Angular




-----------
I would like to be candidate for this position, given the qualifications and experience I possess. I believe I could contribute to projects, tasks and be a great team member for this organization 


--------

What was your workflow/partner in previous roles?

Generally, I start working on the front end, then I move to the database part , creating required queries , stored procedures , views , tables or any necessary object that the application might need. Once that’s done, then I integrate what I have with a server side programming language and start testing. If this process satisfies the requirements, then I create a development/ testing environment to showcase my progress towards acceptance testing.




* Did you take tickets off a board and immediately begin development?

Yes, I am experienced with technologies such as JIRA and Teamworks. They allow developers to be assigned tickets or simply go over the backlog and assign tickets/tasks to themselves 



* Were you part of the requirement-gathering process?

Yes, I feel this is an important part of the whole software development lifecycle. It allows people to exchange ideas and also clarify concepts prior to creating tasks/ tickets


* What, if any, were your interactions with business stakeholders and design team members?

Throughout the whole software development lifecycle, I keep communication with stakeholders, usually providing them with feedback of my progress and that way I make sure I meet requirements 

* What kind of experience do you have in developing an end-to-end solution/functionality?


At United World Telecom, my role was mainly a full stack engineer. So I had to make updates throughout every side of their application: Front end , back end and database. I had to maintain code that will deliver invoices to their clients as well as automated emails which were tailored depending on the case in which the stored procedure or the scheduled job was triggered. I was also assigned to create a new product for their customers. I gathered requirements and made changes throughout our data meaning changes were applied at the database level , backend and lastly on a front end portal written in Angular. This process even made me earned a raise since the updates went through smoothly and everything was documented and easy to understand.


* Do you prefer approaching the problem from a user experience perspective or based on the backend functionality?

User experience, I think that’s the way to go. When you create an application, you create it for a user and sometimes these users may or not may be tech savvy. So keeping that in mind allows you to deliver a product that not only meets requirements but also user’s needs


Do you have any experience in start-up/scrappy teams?

CHNews is a family owned company, even though there are fairly small, they keep up to date with technology. Always trying to use new technologies and making things better for their applications. In my experience, I find there is no small or large team. It all depends on the organization and the standards you set to your products. Following these standards and always striving to meet deadlines is fundamental for success 

-----------


Python


Python

//Check for version
python --version

//run code
python program.py

//install pip
curl https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py
python get-pip.py


//built-in debugger

import pdb;

pdb.set_trace()


on terminal
pp(varname) #prints the value of the expression


Sum of list of Dictionary
sum( item["value"] for item in result)

//Ternary operator
'true' if True else 'false'

//regex

import re

//regex term, replace string, string
varname = re.sub(r"[^0-9]","",s)


//index of string
.find()

//loop with index
for idx,value in enumerate(nums):

//filter
filter(fn, list)

scores = [70, 60, 80, 90, 50]
filtered = filter(lambda score: score >= 70, scores)

//map
map( lambda x: int(x) ,list)

//substring(from:to) , slice lists/tuple
str[:]

//creates array from string,lists and also works with associate arrays char["key"]

[char for char in str]

[ str["value"] for str in  sorted( result, key= lambda value: value["idx"] ) ]

//sort list of dictionary values.
//if descending - sorted(arr,lambda,reverse=True)
sorted(arr, key= lambda value: value["distance"])


//array to string
" ".join(arr)


python classes
--------------

#!/bin/python

import math
import os
import random
import re
import sys


class Car:
    def __init__(self, max_speed, speed_unit):
        self.max_speed = max_speed
        self.speed_unit = speed_unit
        self.output = "Car with the maximum speed of " + str(max_speed) +" " +str(speed_unit)

class Boat:
    def __init__(self, max_speed):
        self.max_speed = max_speed
        self.output = "Boat with the maximum speed of " + str(max_speed) + " knots"

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
    q = int(raw_input())
    queries = []
    for _ in xrange(q):
        args = raw_input().split()
        vehicle_type, params = args[0], args[1:]
        if vehicle_type == "car":
            max_speed, speed_unit = int(params[0]), params[1]
            vehicle = Car(max_speed, speed_unit)
        elif vehicle_type == "boat":
            max_speed = int(params[0])
            vehicle = Boat(max_speed)
        else:
            raise ValueError("invalid vehicle type")
        fptr.write("%s\n" % vehicle.output)
    fptr.close()





——————-



file handling
with open('/etc/secret_key.txt') as f:
    SECRET_KEY = f.read().strip()



//string format
html="""
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
  </head>
  <body>
    {type}
  </body>
</html>
"""


html.format(type = 'works')

//wsgi
querystring

#!/usr/bin/env python

import os,json
from cgi import parse_qs, escape

def application(environ,start_response):
    status = '200 OK'
    html="""
<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
  </head>
  <body>
    {queryStringField}
  </body>
</html>
"""
    response_header = [('Content-type','text/html')]
    start_response(status,response_header)
    queryValues = parse_qs(environ['QUERY_STRING'])
    return [
      html.format(queryStringField = queryValues['queryStringField'][0])
    ]

//try except
try:
  result = open('adad.html','r')
  print(result.read())
except Exception,e:
  print(e)


  ----------

  Django

django
creates a virtual project environment
- python3 -m venv ~/.virtualenvs/djangodev
- source ~/.virtualenvs/djangodev/bin/activate
  - to exit
    - deactivate

//installs django
python -m pip install Django
python -m django --version

//creates a new project
django-admin startproject mysite
- cd mysite
-python manage.py startapp projectApp
  - python manage.py runserver

-python manage.py migrate
  //creates tables in the sqlite db




//routing
mysite/urls.py

from django.contrib import admin
from django.urls import path,include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('polls/',include('polls.urls'))
]


//polls/urls.py
from django.urls import path

from . import views

urlpatterns = [
    path('', views.index, name='index'),
]

//polls.views.py
from django.http import HttpResponse
from .models import Question


def index(request):
    #return HttpResponse("Hello, world. You're at the polls index.")

    #string format
    #response = "You're looking at the results of question %s."
    #return HttpResponse(response % question_id)

    latest_question_list = Question.objects.order_by('-pub_date')[:5] #descending and limit
    output = ', '.join([q.question_text for q in latest_question_list])
    return HttpResponse(output)

//django api terminal

python manage.py shell
- to disconnect ctrl + d

>>> from polls.models import Choice, Question

# Make sure our __str__() addition worked.
>>> Question.objects.all()
<QuerySet [<Question: What's up?>]>

# Django provides a rich database lookup API that's entirely driven by
# keyword arguments.
>>> Question.objects.filter(id=1)
<QuerySet [<Question: What's up?>]>
>>> Question.objects.filter(question_text__startswith='What')
<QuerySet [<Question: What's up?>]>

//sqlite cli commands

//connect to instance
sqlite instance.db

//disconnect instance
ctrl + d

//show tables
.tables

//Getting the structure of a table
.schema table_name

----------------------------------

//creates model

//projectApp - polls/models.py

import datetime

from django.db import models
from django.utils import timezone


class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')

    def __str__(self):
      return self.question_text

    def was_published_recently(self):
        return self.pub_date >= timezone.now() - datetime.timedelta(days=1)

//project root - settings.py

INSTALLED_APPS = [
    'polls.apps.PollsConfig',

]

python manage.py makemigrations polls
python manage.py migrate


//admin page - /admin
python manage.py createsuperuser


//adding projectApp to admin page
//polls/admin.py

from django.contrib import admin

from .models import Question


class QuestionAdmin(admin.ModelAdmin):
    #arranges fields into view
    fields = ['pub_date', 'question_text']

    #creates fieldsets
    fieldsets = [
          (None,               {'fields': ['question_text']}),
          ('Date information', {'fields': ['pub_date']}),
      ]

    #adds a “Filter” sidebar which filters the change list by the pub_date field:
    list_filter = ['pub_date']
    search_fields = ['question_text']

admin.site.register(Question, QuestionAdmin)


//Adding related models
from django.contrib import admin

from .models import Question, Choice

#admin.TabularInline
class ChoiceInline(admin.StackedInline):
    model = Choice
    extra = 3

class QuestionAdmin(admin.ModelAdmin):
    fieldsets = [
        ('Date information', {'fields': ['pub_date']}),
        (None,               {'fields': ['question_text']}),
    ]
    inlines = [ChoiceInline]

    #renders a tuple of field names to display, as columns, on the change list page
    list_display = ('question_text', 'pub_date', 'was_published_recently')

admin.site.register(Question,QuestionAdmin)

//passing objects to templates
//polls/views.py

from django.template import loader
from django.shortcuts import render

def index(request):
    latest_question_list = Question.objects.order_by('-pub_date')[:5]
    #request, templates/index.html,object
    return render(request, 'index.html', {'field': 'asdada'})

//templates/index.html

{{ field }}

<ul>
{% for question in question_list %}
    <li><a href="/polls/{{ question.id }}/">{{ question.question_text }}</a></li>
{% endfor %}
</ul>

//setting debug False
settings.py

DEBUG = False
ALLOWED_HOSTS = ['*']


//data manipulation


//polls.views.py
from django.http import Http404
from django.shortcuts import render

from .models import Question

def detail(request, question_id):
    try:
        question = Question.objects.get(pk=question_id) # dbFieldName=

    except Question.DoesNotExist:
        raise Http404("Question does not exist")
    return render(request, 'detail.html', {'question': question})

#shortcut
def detail(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    return render(request, 'detail.html', {'question': question})


//links

//polls/urls.py
path('<int:question_id>/', views.detail, name='detail'),

//templates/ .html
<li><a href="/polls/{{ question.id }}/">{{ question.question_text }}</a></li>
<li><a href="{% url 'detail' question.id %}">{{ question.question_text }}</a></li>

//namespacing

//polls/urls.py
app_name = 'polls'
urlpatterns = []

//templates/ .html
<li><a href="{% url 'polls:detail' question.id %}">{{ question.question_text }}</a></li>


//binding

<form action="{% url 'polls:vote' question.id %}" method="post">
{% csrf_token %}
<fieldset>
    <legend><h1>{{ question.question_text }}</h1></legend>
    {% if error_message %}<p><strong>{{ error_message }}</strong></p>{% endif %}
    <!-- Selects all choices bound by question id-->
    {% for choice in question.choice_set.all %}
        <input type="radio" name="choice" id="choice{{ forloop.counter }}" value="{{ choice.id }}">
        <label for="choice{{ forloop.counter }}">{{ choice.choice_text }}</label><br>
    {% endfor %}
</fieldset>
<input type="submit" value="Vote">
</form>


//csrf_token
all POST forms that are targeted at internal URLs should use the {% csrf_token %} template tag.

<form action="{% url 'polls:vote' question.id %}" method="post">
{% csrf_token %}
</form>

//generic views
//polls/urls.py
from django.urls import path

from . import views

app_name = 'polls'

urlpatterns = [
    #polls/generic-list
    path('generic-list', views.GenericList.as_view(), name='generic-list'),

    #/polls/5/generic-detail'/
    path('<int:pk>/generic-detail', views.GenericDetail.as_view(), name='generic-detail'),
]

//polls.views.py

from django.views import generic

class GenericList(generic.ListView):
    template_name = 'index.html'
    context_object_name = 'latest_question_list'

    def get_queryset(self):
        return Question.objects.order_by('-pub_date')[:5]

#generic.DetailView requires PK-id in url - polls/5/generic-detail'/
class GenericDetail(generic.DetailView):
    model = Question
    template_name = 'detail.html'

//testing models
//polls/tests.py

import datetime
from django.test import TestCase
from django.utils import timezone

from .models import Question

class QuestionModelTests(TestCase):

    def test_was_published_recently_with_future_question(self):
        """
        was_published_recently() returns False for questions whose pub_date
        is in the future.
        """
        time = timezone.now() + datetime.timedelta(days=30)
        future_question = Question(pub_date=time)
        self.assertIs(future_question.was_published_recently(), False)

//testing Views in api terminal

from django.test.utils import setup_test_environment
setup_test_environment()

from django.test import Client
client = Client()
#using namespace app_name = 'polls' //polls/urls.py
response = client.get(reverse('polls:index'))
response
response.content
response.context['latest_question_list']


//reference static resources

//polls/static/css/styles.css

.html
{% load static %}

<link rel="stylesheet" type="text/css" href="{% static 'css/styles.css' %}">


//deploying app
settings.py

- have a separate settings.py file for production
- DEBUG This should be set as False in production (DEBUG = False).
- SECRET_KEY This is a large random value used for CSRF protection etc. It is important that the key used in production is not in source control or accessible outside the production server.


-------

Flask

ubuntu
-add packages
sudo apt-get -y packagename

-remove packages
sudo apt-get -y purge --auto-remove packagename

- enable modules
sudo a2enmod moduleName

-verifies if changes are correct
sudo apache2ctl configtest

//python

//Running python on cli
python -c "import flask; print(flask.__version__)"


//installing flask

- pip install flask
- create flask init page
  - if the file is named app.py or wsgi.py, you don’t have to set the FLASK_APP environment variable.

  #app.py
  from flask import Flask, render_template

  app = Flask(__name__)

  @app.route("/")
  def hello_world():
    #return "<p>Hello, World!</p>"

    #templates directory must be created
    return render_template('index.html')

  #templates/index.html
  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <title>Python</title>
  </head>
  <body>
     <h1>Python</h1>
  </body>
  </html>

- flask run


//reference static folder assets
<link rel="stylesheet" href="{{ url_for('static', filename= 'css/styles.css') }}">

//routing
app.py

from flask import Flask, render_template
app = Flask(__name__)

@app.route("/")
def func_definition():
  #templates directory must be created
  return render_template('index.html')

.html
//uses function name
<a class="navbar-brand" href="{{ url_for('func_definition')}}">Python</a>

<a class="navbar-brand" href="/python">Python</a>

//Flask handling http requests

//get request
@app.route("/")
def index():
  print(request.args.get('param'))
  return render_template('index.html')

//post
@app.route('/post', methods=['POST'])
def postPage():
    print(request.form.get('param'))
    return render_template('index.html')


//extending base pages

.index.html
<body>
   <h1>Index page</h1>
   {% block title %}  {% endblock %}
   {% block content %} {% endblock %}

</body>

.template.html

{% extends 'index.html' %}

{% block title %}
  <h1>Template Page</h1>
{% endblock %}

{% block content %}
    <a class="navbar-brand" href="{{ url_for('index')}}">Index page</a>
{% endblock %}

//http Request

pip install requests

import requests

response = requests.get("http://rcsproductions.us/content-builder.php?type=asp")
print(response.json())





//db connection

pip install requests

.template.html

{% extends 'index.html' %}

{% block title %}
  <h1>Template Page</h1>
{% endblock %}

{% block content %}
    <a class="navbar-brand" href="{{ url_for('index')}}">Python</a>
    {% for row in rows %}
      <h2>{{ row[1] }}</h2>
    {% endfor %}
{% endblock %}

from flask import Flask, render_template
from mysql.connector import connect, Error


app = Flask(__name__)

@app.route("/template")
def python_page():

    try:
        with connect(
            host="localhost",
            user="root",
            password="",
            database="rcs_code"
        ) as connection:
            print(connection.cursor())
            cursor = connection.cursor()
            cursor.execute("select * from cheatSheet")
            rows = cursor.fetchall()


    except Error as e:
        print(e)

    finally:
        print(connection)
        connection.close()
    #returns template and tuple
    return render_template('template.html',rows=rows)

python
import json


json.loads('{param:"asdad"}') //string
json.dumps() //Python object

//macos
display file permissions in octal
stat -f '%A %N' *


//to execute python scripts on xampp
httpd.conf
-add .py
  AddHandler cgi-script .cgi .pl .py
  - restart apache

-create file and chmod 755 index.py


//ubuntu
list available packages

apt-cache search keyword


//How To Install mod_wsgi on Ubuntu
sudo apt-get -y update
sudo apt-get -y install apache2 apache2-utils libexpat1 ssl-cert python
sudo apt-get -y install libapache2-mod-wsgi
sudo systemctl restart apache2

sudo vi /var/www/html/python-project/test_script.py
  -def application(environ,start_response):
    status = '200 OK'
    html = '\n' \
           '\n' \
           ' mod_wsgi is working\n' \
           '\n' \
           '\n'
    response_header = [('Content-type','text/html')]
    start_response(status,response_header)
    return [html]

sudo vi /etc/apache2/conf-available/wsgi.conf
- WSGIScriptAlias /python-project /var/www/html/python-project/

sudo a2enconf wsgi
sudo systemctl reload apache2
sudo systemctl restart apache2


vim
comment out code
esc - ctrl + v (visual mode)
  - up/down keys to highlight code
  - ctrl + i (insert mode)
  - enter symbol ( /,#)
    - esc


---------------

Azure Data Platform and the Azure messaging platform



Docker

https://medium.com/@anshita.bhasin/a-step-by-step-guide-to-create-dockerfile-9e3744d38d11

Install docker

Create Dockerfile w/o extension

——————-

FROM node:14-alpine3.16

WORKDIR /app

COPY . .

RUN npm install

CMD [ "npm", "start" ]

ENV NODE_ENV production

EXPOSE 9000 #portNumber

————————-
To build

docker build -t <image_name> .

docker build -t testing:v1 .

——————————-
To verify

Docker images

—————————-

To tag

Make sure you are logged in ( use command: docker login

docker tag testing:v1 username/testing:v1

————————

To push

docker push username/testing:v


No auth

docker push testing:v1



————————
To run

docker run testing:v1

———————
Kubernetes

Kubernetes in an open source container management tool hosted by Cloud Native Computing Foundation (CNCF).

Kubernetes comes with a capability of automating deployment, scaling of application, and operations of application containers across clusters. It is capable of creating container centric infrastructure.


etcd
It stores the configuration information which can be used by each of the nodes in the cluster. It is a high availability key value store that can be distributed among multiple nodes. It is accessible only by Kubernetes API server as it may have some sensitive information. It is a distributed key value Store which is accessible to all.


Kubelet Service
This is a small service in each node responsible for relaying information to and from control plane service. It interacts with etcd store to read configuration details and wright values. This communicates with the master component to receive commands and work. The kubeletprocess then assumes responsibility for maintaining the state of work and the node server. It manages network rules, port forwarding, etc.
—————

Code igniter

Installation Instructions
CodeIgniter is installed in four steps:
1. Unzip the package.
2. Upload the CodeIgniter folders and files to your server. Normally the index.php file will be at your root.
3. Open the application/config/config.php file with a text editor and set your base URL. If you intend to use encryption or sessions, set your encryption key.
4. If you intend to use a database, open the application/config/database.php file with a text editor and set your database settings
For the best security, both the system and any application folders should be placed above web root so that they are not directly accessible via a browser. By default, .htaccess files are included in each folder to help prevent direct access, but it is best to remove them from public access entirely in case the web server configuration changes or doesn’t abide by the .htaccess.


One additional measure to take in production environments is to disable PHP error reporting and any other development-only functionality. In CodeIgniter, this can be done by setting the ENVIRONMENT constant, which is more fully described on the security page.

Register_globals
During system initialization all global variables that are found to exist in the $_GET, $_POST, $_REQUEST and $_COOKIE are unset.
The unsetting routine is effectively the same as register_globals = off.
display_errors
In production environments, it is typically desirable to “disable” PHP’s error reporting by setting the internal display_errors flag to a value of 0. This disables native PHP errors from being rendered as output, which may potentially contain sensitive information.
Setting CodeIgniter’s ENVIRONMENT constant in index.php to a value of ‘production’ will turn off these errors. In development mode, it is recommended that a value of ‘development’ is used. More information about differentiating between environments can be found on the Handling Environments page.
CodeIgniter comes with a Cross Site Scripting prevention filter, which looks for commonly used techniques to trigger JavaScript or other types of code that attempt to hijack cookies or do other malicious things. If anything disallowed is encountered it is rendered safe by converting the data to character entities.
To filter data through the XSS filter use the xss_clean() method:
$data = $this->security->xss_clean($data);
CodeIgniter comes with full-range of libraries that enable the most commonly needed web development tasks, like accessing a database, sending email, validating form data, maintaining sessions, manipulating images, working with XML-RPC data and much more.

<ul>
<?php foreach ($addressbook as $name):?>
        <li><?=$name?></li>
<?php endforeach; ?>
</ul>

Programmers love to code and hate to write documentation. We’re no different, of course, but since documentation is as important as the code itself, we are committed to doing it. Our source code is extremely clean and well commented as well.
1. The index.php serves as the front controller, initializing the base resources needed to run CodeIgniter.
2. The Router examines the HTTP request to determine what should be done with it.
3. If a cache file exists, it is sent directly to the browser, bypassing the normal system execution.
4. Security. Before the application controller is loaded, the HTTP request and any user submitted data is filtered for security.
5. The Controller loads the model, core libraries, helpers, and any other resources needed to process the specific request.
6. The finalized View is rendered then sent to the web browser to be seen. If caching is enabled, the view is cached first so that on subsequent requests it can be served
The controller is what will become the center of every request to your web application. In very technical CodeIgniter discussions, it may be referred to as the super object. Like any php class, you refer to it within your controllers as $this. Referring to $this is how you will load libraries, views, and generally command the framework.


public function view($page = 'home')
{
        if ( ! file_exists(APPPATH.'views/pages/'.$page.'.php'))
        {
                // Whoops, we don't have a page for that!
                show_404();
        }

        $data['title'] = ucfirst($page); // Capitalize the first letter

        $this->load->view('templates/header', $data);
        $this->load->view('pages/'.$page, $data);
        $this->load->view('templates/footer', $data);
} 

http://example.com/[controller-class]/[controller-method]/[arguments]
Let’s do that. Open the routing file located at application/config/routes.php and add the following two lines. Remove all other code that sets any element in the $route array.
$route['default_controller'] = 'pages/view';
$route['(:any)'] = 'pages/view/$1';



<?php
class News_model extends CI_Model {

        public function __construct()
        {
                $this->load->database();
        }
}


creates a new model by extending CI_Model and loads the database library. This will make the database class available through the $this->db object.


CREATE TABLE news (
        id int(11) NOT NULL AUTO_INCREMENT,
        title varchar(128) NOT NULL,
        slug varchar(128) NOT NULL,
        text text NOT NULL,
        PRIMARY KEY (id),
        KEY slug (slug)
);

public function get_news($slug = FALSE)
{
        if ($slug === FALSE)
        {
                $query = $this->db->get('news');
                return $query->result_array();
        }

        $query = $this->db->get_where('news', array('slug' => $slug));
        return $query->row_array();
}



<?php
class News extends CI_Controller {

        public function __construct()
        {
                parent::__construct();
                $this->load->model('news_model');
                $this->load->helper('url_helper');
        }

        public function index()
        {
                $data['news'] = $this->news_model->get_news();
        }

        public function view($slug = NULL)
        {


———-

What is Micro Service?
Micro Service is an architecture that allows the developers to develop and deploy services independently. Each service running has its own process and this achieves the lightweight model to support business applications.

————

Time Complexity: It is defined as the number of times a particular instruction set is executed rather than the total time taken. It is because the total time taken also depends on some external factors like the compiler used, the processor’s speed, etc.

single pass O(1)
multiple passes O(N)
by parts O(log N)


Space Complexity: It is the total memory space required by the program for its execution.
—————

Spring boot

package com.tutorialspoint.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@SpringBootApplication
@RestController

public class DemoApplication {
   public static void main(String[] args) {
     
//bootstrap
SpringApplication.run(DemoApplication.class, args);
   }

//route 
   @RequestMapping(value = "/")
   public String hello() {
      return "Hello World";
   }
}

——————-

package com.tutorialspoint.demo.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.tutorialspoint.demo.model.Product;

@RestController
public class ProductServiceController {
   private static Map<String, Product> productRepo = new HashMap<>();
   static {
      Product honey = new Product();
      honey.setId("1");
      honey.setName("Honey");
      productRepo.put(honey.getId(), honey);
      
      Product almond = new Product();
      almond.setId("2");
      almond.setName("Almond");
      productRepo.put(almond.getId(), almond);
   }
   
   @RequestMapping(value = "/products/{id}", method = RequestMethod.DELETE)
   public ResponseEntity<Object> delete(@PathVariable("id") String id) { 
      productRepo.remove(id);
      return new ResponseEntity<>("Product is deleted successsfully", HttpStatus.OK);
   }
   
   @RequestMapping(value = "/products/{id}", method = RequestMethod.PUT)
   public ResponseEntity<Object> updateProduct(@PathVariable("id") String id, @RequestBody Product product) { 
      productRepo.remove(id);
      product.setId(id);
      productRepo.put(id, product);
      return new ResponseEntity<>("Product is updated successsfully", HttpStatus.OK);
   }
   
   @RequestMapping(value = "/products", method = RequestMethod.POST)
   public ResponseEntity<Object> createProduct(@RequestBody Product product) {
      productRepo.put(product.getId(), product);
      return new ResponseEntity<>("Product is created successfully", HttpStatus.CREATED);
   }
   
   @RequestMapping(value = "/products")
   public ResponseEntity<Object> getProduct() {
      return new ResponseEntity<>(productRepo.values(), HttpStatus.OK);
   }
}
———————
Mysql 

Select version(), current_date
Show databases
Show tables
Describe databaseName


——————————
To load the text file pet.txt into the pet table, use this statement:

If you created the file on Windows with an editor that uses \r\n as a line terminator, you should use this statement instead:

(On an Apple machine running macOS, you would likely want to use LINES TERMINATED BY '\r'.)


containing one record per line, with values separated by tabs


Null represent these in your text file, use \N (

 mysql> LOAD DATA LOCAL INFILE '/path/pet.txt' INTO TABLE pet;

————

Date functions

Curdate()
TimeStampDiff(year, initialDT, endDT) //byYear
Month(dt)
Year(dt)
DayOfMonth(dt)
Date_add(curdate(), interval 1 month)


Null
Is null
Is not null

 Expressions
= <> < > 

Like ‘%expression%’
RegexExp 


Variable assignment on select

Select @varNamr := column,

CREATE TABLE child (
    id INT,
    parent_id INT,
    INDEX par_ind (parent_id),
    FOREIGN KEY (parent_id)
        REFERENCES parentTable(id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
) ENGINE=INNODB

mysql> ALTER TABLE tbl AUTO_INCREMENT = 100

———————

Redux

Redux is a pattern and library for managing and updating application state, using events called "actions". It serves as a centralized store for state that needs to be used across your entire application, with rules ensuring that the state can only be updated in a predictable fashion.


React example 

function Counter() {
  // State: a counter value
// sets variable and function 
  const [counter, setCounter] = useState(0)

  // Action: code that causes an update to the state when something happens

// function inside a function
  const increment = () => {
    setCounter(prevCounter => prevCounter + 1)
  }

  // View: the UI definition
//increments based on user event
  return (
    <div>
      Value: {counter} <button onClick={increment}>Increment</button>
    </div>
  )
}

React terms
Actions
An action is a plain JavaScript object that has a type field. You can think of an action as an event that describes something that happened in the application.

const addTodo = text => {
  return {
    type: 'todos/todoAdded',
    payload: text
  }
}

Reducers
A reducer is a function that receives the current state and an action object, decides how to update the state if necessary, and returns the new state: (state, action) => newState. You can think of a reducer as an event listener which handles events based on the received action (event) type.


Store
The current Redux application state lives in an object called the store .

Dispatch
The Redux store has a method called dispatch. The only way to update the state is to call store.dispatch() and pass in an action object

Redux Application Data Flow
Earlier, we talked about "one-way data flow", which describes this sequence of steps to update the app:
* State describes the condition of the app at a specific point in time
* The UI is rendered based on that state
* When something happens (such as a user clicking a button), the state is updated based on what occurred
* The UI re-renders based on the new state



-------------




Javascript 

passing extra parameters to event listeners


marker.addListener('click', function(e:any){
          
  console.log('marker',e.mapref)
  marker.iw.open(e.mapref, marker);
  //             --------
})

marker.mapref = this.map


------------------



document.write("Hello World!");


----------
meteor 


npm install -g meteor --foreground-script

----------
nextjs 


npx create-next-app@latest
cd project
npm run dev 

Create the public folder (optional)
You can optionally create a public folder at the root of your project to store static assets such as images, fonts, etc. 
Files inside public can then be referenced by your code starting from the base URL (/).








