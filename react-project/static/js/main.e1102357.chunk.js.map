{"version":3,"sources":["pages/home.js","deployConfig.js","pages/notFound.js","pages/codeTemplate.js","routing.js","htmlElements/footer.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["Home","props","state","name","content","className","this","React","Component","URL","CodeTemplate","copied","btnLabel","lng","Breadcrumb","Item","href","passUrl","module","hasCode","active","title","dangerouslySetInnerHTML","__html","dsc","text","code","onCopy","setState","Button","variant","language","style","atomOneDark","Routing","rts","fetch","cache","then","res","json","data","routes","JSON","parse","scalar","baseURL","basename","Navbar","bg","Brand","alt","src","logo","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","onToggle","document","querySelector","classList","toggle","target","Divider","map","route","index","key","permLink","Row","Col","exact","path","component","Footer","year","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","exports"],"mappings":"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","file":"static/js/main.e1102357.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Home extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = { name: 'home',\n                    content:'content'\n                  };\n\n  }\n\n  render() {\n    return (\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-12 bg-white p-4\">\n          <h1>Home</h1>\n          <p>{this.state.content}</p>\n        </div>\n      </div>\n\n    )\n  }\n}\nexport default Home\n","const dev = '/'\nconst prod = '/react-project/'\n\n//Set variable\nconst deployType = 'prod'\n\nconst URL = {}\n\nURL.passUrl =  () =>  deployType == 'dev'?  dev : prod\nexport {URL}\n","import React from 'react'\nimport {URL} from '../deployConfig'\n\n\nclass NotFound extends React.Component {\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <h1>404</h1>\n        <p><a href={URL.passUrl()}>Back</a></p>\n      </div>\n\n    )\n  }\n}\nexport default NotFound\n","import React from 'react'\nimport {URL} from '../deployConfig'\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport {Button,Breadcrumb} from 'react-bootstrap'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nclass CodeTemplate extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n                    copied: false,\n                    btnLabel: 'Copy'\n                  };\n  }\n  render() {\n    //let content = this.props.content.title;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-12 mb-4\">\n        <h1 className=\"lng-name\">{this.props.content.lng}</h1>\n      \n        <Breadcrumb>\n          <Breadcrumb.Item href =\"/\">Home</Breadcrumb.Item>\n          <Breadcrumb.Item href={`${URL.passUrl()}${this.props.content.module}` }>{this.props.content.module}</Breadcrumb.Item>\n          {\n\n            this.props.content.hasCode == 1 ? <Breadcrumb.Item active>{this.props.content.title}</Breadcrumb.Item> : ''\n\n          }\n\n        </Breadcrumb>\n        </div>\n        <div className=\"col-md-12\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-md-12 p-4  border rounded bg-dark\">\n                <div\n                  className=\"bg-white p-4 dsc-section\"\n                  dangerouslySetInnerHTML={{ __html: this.props.content.dsc  }}>\n                </div>\n              </div>\n              <div className={ `col-md-12 mt-4 mb-4 p-4  border rounded bg-dark ${ this.props.content.hasCode == 0 ? 'd-none':'' }` }>\n              <div className=\"copy-clipboard-section mb-4 text-right\">\n                <CopyToClipboard text={this.props.content.code}\n                  onCopy={() => this.setState({copied: true, btnLabel:'copied'})}>\n                  <Button variant=\"outline-success\">\n                            {this.state.btnLabel}\n                  </Button>\n                </CopyToClipboard>\n              </div>\n                <div className=\"bg-white p-4 \">\n                  <SyntaxHighlighter language=\"javascript\" style={atomOneDark}>\n                  {this.props.content.code}\n                </SyntaxHighlighter>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>/*row end*/\n\n\n    )\n  }\n}\nexport default CodeTemplate\n","import React from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { Navbar,Nav,Row,Col , NavDropdown} from 'react-bootstrap'\nimport Home from './pages/home';\nimport NotFound from './pages/notFound';\nimport CodeTemplate from './pages/codeTemplate';\nimport logo from './logo.png';\nimport {URL} from './deployConfig'\n\n\n\n\nclass Routing extends React.Component {\n\n  constructor(props){\n    super(props);\n\n\n    this.state = { rts: []}\n\n    fetch(\"http://localhost:80/json-builder.php\", { cache: 'no-cache'})\n    .then(res => res.json())\n    .then(data => {\n                    //JSON.parse(data.scalar))[0].id\n                    //console.log(  (JSON.parse(data.scalar))[0]    )\n                    let routes =  (JSON.parse(data.scalar))\n                    this.setState({rts: routes})\n                  })\n\n  }//constructor\n\n\n  render() {\n\n    let routes = this.state.rts\n\n    //dev / prod -> Set variable in deployConfig\n    let baseURL = URL.passUrl()\n\n    return(\n\n      <div className=\"header-main-content\">\n\n        <Router basename={baseURL}>\n          <header className=\"rcs-header\">\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">\n            <img\n            alt=\"RCSProductions\"\n            src={logo}\n            width=\"50\"\n            height=\"50\"\n            className=\"d-inline-block align-top\"\n            />{' '}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n               <Nav className=\"mr-auto\">\n                <Nav.Link href={baseURL}>Home</Nav.Link>\n                  <NavDropdown title=\"Templates\" id=\"basic-nav-dropdown\" onToggle={()=> document.querySelector('body').classList.toggle('overflow-hidden') }>\n                  <NavDropdown.Item href=\"https://codingbat.com/java\" target=\"_blank\">Java</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                    {(routes).map((route,index) => (\n\n\n                        route.hasCode == 1 ?\n                          <NavDropdown.Item\n                          key={ index}\n                          href={baseURL + (route.permLink) }\n                          className=\"nav-inline-anchors\">\n                          {route.title}\n                        </NavDropdown.Item>\n                        :''\n\n\n                      ))}\n\n\n                </NavDropdown>\n                <div className=\"header-bg\" ></div>\n               </ Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          </header>\n          <Row className=\"main-content pt-4\">\n            <Col className=\"col-md-12\">\n              <Switch>\n              <Route exact path={'/'} component={Home} />\n\n\n              { ( routes ).map((route,index) => (\n                <Route  path={'/' + (route.permLink) }  key={index} >\n                <CodeTemplate content={routes[index]} />\n                </Route>\n              ))}\n\n\n              </Switch>\n            </Col>\n          </Row>\n        </Router>\n      </div>\n    )\n  }\n\n}\nexport default Routing\n","import React from 'react'\nimport { Row,Col } from 'react-bootstrap';\n\nclass Footer extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { year: (new Date()).getFullYear()  };\n\n  }\n\n  render() {\n    return (\n    \n      \t\t<Row  className=\"bg-dark\">\n      \t\t\t<Col className=\"col-md-12 text-center p-3 text-white\">\n      \t\t\t\t<a href=\"/\">rcsproductions <i className=\"fa fa-copyright\"></i></a> | {this.state.year}\n            </Col>\n      \t\t</Row>\n\n\n    )\n  }\n\n}\nexport default Footer\n","import React from 'react';\nimport Routing from './routing';\nimport Footer from './htmlElements/footer';\n\nfunction App() {\n  return (\n    <div>\n      <Routing />\n      <footer className=\"rcs-footer\">\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.f8771e0e.png\";"],"sourceRoot":""}